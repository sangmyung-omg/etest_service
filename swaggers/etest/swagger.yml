openapi: "3.0.2"
info:
    title: eTest Problem & Analysis Report API
    version: "0.1"
    description: 문제 풀이 및 진단 리포트 페이지 관련 API
servers:
  - url: http://192.168.153.208:8888/
    description: example server address
tags:
- name: Problem
  description: 문제 풀이 페이지 관련
- name: Test
  description: 출제 문제 선정
- name: Analysis Report
  description: 진단 리포트 관련
- name: User
  description: 유저 정보 CRUD

paths:
  /contents/v0/problems/{id}:
    get:
      tags:
      - Problem
      summary: 문제 정보 받아오기
      description: 문제 정보를 받아옵니다.
      parameters:
      - name: id
        in: path
        description: 문제아이디
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  message: success
                  data:
                    type: 'MULTIPLE_CHOICE_WO_PASSAGE/ MULTIPLE_CHOICE_W_PASSAGE/ SHORT_ANSWER_WO_PASSAGE/
                      SHORT_ANSWER_W_PASSAGE '
                    question: 질문에 들어갈 텍스트
                    passage: 보기에 들어갈 텍스트
                    preface: (가)/ (ㄱ)/ ()/ (.)
                    choices:
                      1: 객관식1번
                      2: 객관식2번
                    difficulty: 상/중/하
        400:
          description: Data not found
          content:
            json:
              schema:
                type: object
                example:
                  message: 'Failed: {id}에 해당하는 데이터가 없습니다'
                  data: {}
  /contents/v0/problems/{id}/answer-check:
    get:
      tags:
      - Problem
      summary: 정답 체크하기
      description: 유저가 제출한 정답에 대한 채점결과를 true/false로 반환합니다.
      parameters:
      - name: id
        in: path
        description: 문제아이디
        required: true
        schema:
          type: string
          format: string
      - name: answer
        in: query
        description: 유저가 입력한 답
        required: true
        schema:
          type: string
          format: string
      requestBody:
        $ref: "#/components/requestBodies/LRSBody"
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: boolean
  /contents/v0/problems/{id}/solution:
    get:
      tags:
      - Problem
      summary: 해설 받아오기
      description: 유저가 제출한 정답에 대한 채점결과를 0/1로 반환합니다.
      parameters:
      - name: id
        in: path
        description: 문제아이디
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  answer:
                  - 정답1
                  - 정답2
                  - ..
                  solution: 해설 텍스트
                  material: 참고자료(교재 정보)
  /contents/v0/problems/error/report:
    post:
      tags:
        - Problem
      summary : DB에 오류 보고 저장하기
      description : 문제 번호와 유저 아이디, 신고 유형, 오류에 대한 설명을 DB에 저장합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                problem_id: "문제 아이디"
                id: "유저 아이디"
                report_type: "신고 유형(QUESTION_ERROR/PASSAGE_ERROR)"
                report_text: "신고 내용"

  
      responses:
        200:
          description: Successfully saved
          content:
            json:
              schema:
                type: object
                example:
                  message: success

  /test/v1/diagnosis:
    get:
      tags: [Test]
      operationId: DiagnosisTendencyProblemsGet
      summary: 자가진단 set (성향 18 문항 & 지식 12 문항 = 총 30문항) 요청
      description: 
        유저 ID를 활용해 자가진단 성향/지식 문제 각각 반환 (이어풀기 기능 삭제)
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/diagnosisProblemList"
        
        '500':
          description: 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultMessage:
                    type: string
                    example: "Error: status code 500"

  /test/v1/minitest:
    get:
      tags: [Test]
      operationId: MinitestProblemsGet
      summary: 미니테스트 set (20문항) 요청
      description: 각 파트 별 문제 개수에 맞춰 문제 세트 반환 & 과거 풀이 이력 존재 시 과거 문제 리스트와 선택한 답, 그리고 찍기 알람 횟수 각각 반환 (첫 진입이면 null)
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/minitestmProblemList"
        '500':
          description: 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultMessage:
                    type: string
                    example: "Error: status code 500"
  /report/diagnosisResult/{id}:
    get:
      tags:
      - Analysis Report
      summary: 자가진단 리포트의 첫페이지 정보를 가져옵니다.
      description: 자가진단 리포트의 GI 지수, 영역별 진단 결과, 진단 결과 텍스트, AI 예측 Part 별 이해도를 반환합니다. UX 예시와 값을 대체로 맞췄으니 참고하여 해당 값들의 역할을 파악 바랍니다.
      parameters:
      - name: id
        in: path
        description: 유저 ID
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  giScore: 63
                  giPercentage: 20
                  partDiagnosisResult:
                    위험적합도점수: 72
                    의사결정적합도점수: 65
                    지식이해도: 52
                  similarTypeInfo: [
                    "25.93%", 
                    "8종목", 
                    "55%"
                  ]
                  decisionMaking: [
                    "투자원칙 명확 & 편향 논리적", 
                    "투자원칙 불명확", 
                    "편향 감정적"
                  ]
                  investKnowledge: [
                    "지식수준 하", 
                    "기본지식 및 소양 학습"
                  ]
                  riskFidelity: [
                    "투자현황 보수적 & 리스크 보수적", 
                    "안정적 투자를 지향하지만 투자 가능 기간이 긴 편은 아니기 때문에 꾸준한 모니터링이 필요함"
                  ]
                  totalResult: [
                    "상하하", 
                    "동일한 유형의 평균 주식 비중은 25.93% 입니다.", 
                    "동일한 유형의 평균 주식 수는 8종목 입니다.", 
                    "동일한 유형의 평균 선호종목 수는 55% 입니다."
                    ]
                  strongPartInfo: [
                    ["생애주기", 
                    "생애주기 영역에서 상대적으로 높은 이해도를 갖고 있습니다.",
                    "70"]
                  ]
                  weakPartInfo: [
                    ["필요자금 마련방법", 
                    "필요자금 마련방법는 더 많은 이해가 필요해 보입니다. AI가 학습 컨텐츠를 추천해드립니다.", 
                    "35"], 
                    ["가치변화의 요인", 
                    "가치변화의 요인는 더 많은 이해가 필요해 보입니다. AI가 학습 컨텐츠를 추천해드립니다.", 
                    "14"]
                  ]
  /report/diagnosisResult/{id}/{part}:
    get:
      tags:
      - Analysis Report
      summary: 자가진단 리포트의 파트 상세 정보 페이지의 정보를 가져옵니다.
      description: 파트 이해도 점수, 상세 UK별 점수를 가져옵니다. UX 예시와 값을 대체로 맞췄으니 참고하여 해당 값들의 역할을 파악 바랍니다.
      parameters:
      - name: id
        in: path
        description: 유저 ID
        required: true
        schema:
          type: string
          format: string
      - name: part
        in: path
        description: Part ID
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  point: 35
                  ukUnderstanding:
                    가치주/성장주: 29
                    달러코스트 평균법: 45
                    대형주/소형주: 26
                    리스크 특징: 35
                    배당: 24
                    배당성장: 30
                    보유종목 수: 44
                    부채: 32
                    선호 투자종목: 46
                    시가배당율: 39
                    시가총액: 25
                    업종대표주: 29
                    영업이익: 28
                    자사주소각: 20
                    자산관리 목표: 27
                    장기투자: 40
                    주식 포트폴리오: 31
                    주식투자 비중: 46
                    증권사 거래기간: 46
                    척도법: 41
                    초보자에게 맞는 주식 종목: 40
                    투자수익: 27
                    투자액 고정법: 45
                    투자율 고정법: 41
                    투자종목: 39
  /report/miniTestResult/{id}:
    get:
      tags:
      - Analysis Report
      summary: 미니 테스트 리포트의 정보를 가져옵니다.
      description: 투자 지식 평가 점수, 백분율, Part 별 이해도, 취약 영역 상세, 지식문제 수준 진단 기록을 가져옵니다. UX 예시와 값을 대체로 맞췄으니 참고하여 해당 값들의 역할을 파악 바랍니다.
      parameters:
      - name: id
        in: path
        description: 유저 ID
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  score: 70
                  percentage: 88
                  partUnderstanding: [
                    ["필요자금 마련방법", "C", "50"],
                    ["생애주기", "A", "89"],
                    ["가치변화의 요인", "F", "10"]
                  ]
                  weakPartDetail: [
                    ["파트 5 상세 1", "F", "C"],
                    ["파트 5 상세 2", "F", "C"],
                    ["파트 5 상세 3", "F", "C"],
                    ["파트 5 상세 4", "F", "C"],
                    ["파트 5 상세 5", "F", "C"]
                  ]
                  diagnosisQuestionInfo: [
                    ["맞은 문제 ID", "2", "3", "4", "5"],
                    ["틀린 문제 ID", "7", "8"],
                    ["모르는 문제 ID", "9", "10"]
                  ]

  /userInfo/{id}:
      put:
        tags:
        - User
        summary: 유저 정보 입력
        description: 랜덤 생성된 유저 ID를 입력합니다.
        parameters:
        - name: id
          in: path
          description: 유저 아이디
          required: true
          schema:
            type: string
            format: string
        responses:
          200:
            description: OK
            content:
              json:
                schema:
                  type: object
                  example:
                    resultMessage: Successfully updated
         
          500:
            description: Server Side Exception of any kind 
            content:
              json:
                schema:
                  type: object
                  example:
                    resultMessage: Internal Server Error.
components:
  schemas:
    diagnosisProblemList:
      properties:
        resultMessage:
          type: string
          example: "Successfully returned"
        diagProbSetId:
          type: string
          example: "2fc89ea8-fb4b-11eb-9a03-0242ac130003"
        tendencyProblems:
          type: array
          example:
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
        knowledgeProblems:
          type: array
          example:
            - [1,2,3]
            - [4,5,6]
            - [7,8,9]
            - [10,11,12]
            - [13,14,15]
            - [16,17,18]
            - [19,20,21]
            - [22,23,24]
            - [25,26,27]
            - [28,29,30]
            - [31,32,33]
            - [34,35,36]

    minitestmProblemList:
      properties:
        resultMessage:
          type: string
          example: "Successfully returned"
        newProbSetId:
          type: string
          example: "2fc89ea8-fb4b-11eb-9a03-0242ac130003"
        minitestProblems:
          type: array
          example:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
        continueProbSetId:
          type: string
          example: "429589d8-fbe1-11eb-9a03-0242ac130003"
        continueProblems:
          type: array
          example:
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
            - 39
            - 40
        continueAnswers:
          type: array
          example:
            - 1
            - 4
            - 3
            - 5
            - 2
        guessAlarm:
          type: integer
          example: 0
    lrsBody:
      type: object
      required:
      - actionType
      - sourceType
      - timestamp
      - userId
      properties:
        actionType:
          type: string
          example: submit
          description: 해당 활동의 동사
        cursorTime:
          type: integer
          format: int32
          example: 0
          description: 비디오, 오디오와 같은 활동에서 사용되는 커서 시간. (Ednet 참고. ex) A 비디오 10초(10000ms) 지점을 클릭 했다.)
        duration:
          type: integer
          example: 0
          description: 활동의 지속 시간( ex) 비디오 보기를 30초(30000ms) 동안 지속했다.)
        extension:
          type: string
          example: "{diagProbSetId : '3ed64290-0183-11ec-9a03-0242ac130003', guessAlarm : 2}"
          description: 추가 메타 데이터 (Json 형태의 String)
        isCorrect:
          type: integer
          format: int32
          example: 0
          description: '활동의 정답 여부. (0 : Fail, 1 : Success)'
        platform:
          type: string
          example: 금융투자협회
          description: 해당 활동이 일어난 Platform 이름
        sourceId:
          type: string
          example: 108
          description: 해당 활동의 Source의 ID. ( ex) 유저가 푼 문제의 ID, 100)
        sourceType:
          type: string
          example: mini_test_question
          description: 해당 활동의 목적어(Source) 타입.
        timestamp:
          type: string
          example: '2021-07-14T10:25:56.192Z'
          description: 해당 활동이 일어난 시간. ISO 8601 Format.
        userAnswer:
          type: string
          example: '1'
          description: 유저가 해당 활동에서 작성한 답안. ( ex) 문제 A에 3, 5번을 선택하여 제출했다.)
        userId:
          type: string
          example: af1ed17a-8e55-4ec6-a552-f3d7d8e0276d
          description: 유저의 ID(JWT or 일반 String 값)
  parameters:
    userId:
      in: "path"
      name: "userId"
      description: "유저 ID"
      schema:
        type: string
        example: "00368989-7f56-478a-9d4f-e46c9baa6598"
      required: true
  requestBodies:
    LRSBody:
      description: "LRS에 저장할 statement 구성 정보"
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/lrsBody"
              
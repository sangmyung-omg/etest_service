openapi: "3.0.2"
info:
    title: eTest Problem & Analysis Report API
    version: "0.1"
    description: 문제 풀이 및 진단 리포트 페이지 관련 API
servers:
  - url: http://192.168.153.208:8080/
    description: example server address
tags:
- name: Problem
  description: 문제 풀이 페이지 관련
- name: Test
  description: 출제 문제 선정
- name: Self Diagnosis Report
  description: 자가 진단 리포트 관련
- name: Minitest Report
  description: 미니 테스트 리포트 관련
- name: User
  description: 유저 정보 CRUD
- name: Model
  description: 이해도 모델 업데이트 관련

paths:
  /contents/v1/problems/{probId}:
    get:
      tags:
        - Problem
      summary: json 형태 그대로 문제 정보 받아오기
      description: 문제 정보를 받아옵니다.
      parameters:
        - $ref: "#/components/parameters/probId"
      responses:
        200:
          description: data의 각 필드들은 그 문제에 존재하지 않는 컴포넌트이면 빈 리스트로 반환
          content:
            json:
              schema:
                type: object
                example:
                  message: Successfully returned
                  answerType: MULTIPLE_CHOICE
                  components:
                    - data: 
                      - "3년 간 주식투자로 다음과 같은 현금흐름이 발생했을 때, 보유기간 동안 수익률로 올바른 것은?"
                      type:
                        "QUESTION_TEXT"
                    - data:
                      - "주식 매입 금액 : 100만원\n주식 매도 금액 : 120만원\n배당금 : 10만원\n비용 : 5만원"
                      type:
                        "PREFACED_EXAMPLE_BOX_TEXT"
                    - data:
                      - "20%"
                      - "25%"
                      - "30%"
                      - "35%"
                      type:
                        "MULTIPLE_CHOICE_TEXT"
                  difficulty: 상/중/하
        400:
          description: Data not found
          content:
            json:
              schema:
                type: object
                example:
                  message: 'Failed: {id}에 해당하는 데이터가 없습니다'
                  data: {}
  /contents/v1/problems/{probId}/answer-check:
    post:
      tags:
        - Problem
      summary: 정답 체크하기
      description: 유저가 제출한 정답에 대한 채점결과를 true/false로 반환합니다.
      parameters:
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/probId"
      requestBody:
        $ref: "#/components/requestBodies/LRSBody"
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                $ref: "#/components/schemas/answerCheckResult"
  /contents/v2/problems/{setId}/solution:
    get:
      tags:
        - Problem
      summary: 파싱된 해설 받아오기
      description: 세트 ID에 해당하는 풀이 이력의 각 문제 해설을 파싱하여 반환
      parameters:
        - $ref: "#/components/parameters/setId"
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                $ref: "#/components/schemas/parsedSolutionResult"
  /contents/v2/quit:
    post:
      tags:
        - Problem
      summary: 테스트 중단 시 LRS 기록
      description: 종료 시 LRS에 기록해야 할 statement 리스트 저장 요청
      parameters:
        - $ref: "#/components/parameters/Authorization"
      requestBody:
        $ref: "#/components/requestBodies/quitBody"
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                $ref: "#/components/schemas/answerCheckResult"
  /test/v1/diagnosis:
    get:
      tags: [Test]
      operationId: DiagnosisTendencyProblemsGet
      summary: 자가진단 set (성향 18 문항 & 지식 12 문항 = 총 30문항) 요청
      description: 
        유저 ID를 활용해 자가진단 성향/지식 문제 각각 반환 (이어풀기 기능 삭제)
      parameters:
        - $ref: "#/components/parameters/Authorization"
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/diagnosisProblemList"
        
        '500':
          description: 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultMessage:
                    type: string
                    example: "Error: status code 500"

  /test/v1/minitest/{userId}:
    get:
      tags: [Test]
      operationId: MinitestProblemsGet
      summary: 미니테스트 set (20문항) 요청
      description: 각 파트 별 문제 개수에 맞춰 문제 세트 반환 & 과거 풀이 이력 존재 시 과거 문제 리스트와 선택한 답, 그리고 찍기 알람 횟수 각각 반환 (첫 진입이면 null)
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/Authorization"
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/minitestmProblemList"
        '500':
          description: 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultMessage:
                    type: string
                    example: "Error: status code 500"
  /report/diagnosis/record/{probSetId}:
    get:
      tags:
      - Self Diagnosis Report
      summary: 자가진단 리포트의 메인 페이지 정보를 가져옵니다. 
      description: 자가진단 리포트의 GI 점수, 퍼센테이지, GI 점수별 코멘트, 유저 닉네임, 알람 여부 등을 가져옵니다. 자가진단 시행 후, 해당 자가진단 Set ID에 대해, 첫 API Call 시, 해당 리포트를 생성 후 리포트 정보를 가져옵니다. Output에 대한 자세한 사항은 DiagnosisRecordMainDTO를 참조 바랍니다. 
      parameters:
      - name: probSetId
        in: path
        description: 해당 자가진단 문제 셋 ID
        required: true
        schema:
          type: string
          format: string
          example: '1d80abe8-c8fb-45b1-9307-de689ccfaf60'
      - $ref: "#/components/parameters/Authorization"
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                $ref: "#/components/schemas/DiagnosisRecordMainDTO"
  /report/diagnosis/record/{probSetId}/{partName}:
    get:
      tags:
      - Self Diagnosis Report
      summary: 자가진단 리포트의 파트 상세 정보 페이지의 정보를 가져옵니다.
      description: 파트별 점수, 해당 파트의 코멘트 등을 가져옵니다. output에 대한 자세한 사항은 DiagnosisRecordDetailDTO Schema 를 참고하시기 바랍니다.
      parameters:
      - name: probSetId
        in: path
        description: 해당 자가진단 문제 셋 ID
        required: true
        schema:
          type: string
          format: string
          example: '1d80abe8-c8fb-45b1-9307-de689ccfaf60'
      - name: partName
        in: path
        description: 해당 자가진단의 상세 파트 이름(risk, invest, knowledge 중 하나)
        required: true
        schema:
          type: string
          format: string
          example: 'risk'
      - $ref: "#/components/parameters/Authorization"
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                $ref: "#/components/schemas/DiagnosisRecordDetailDTO"
  /report/diagnosis/bookmark/{videoId}/{isBookmarkOn}:
    get:
      tags:
      - Self Diagnosis Report
      summary: 비디오 북마크 지정 해제 API
      description: 자가진단 중 표출된 추천 비디오의 북마크를 지정하고 해제하는 API 입니다.
      parameters:
      - name: videoId
        in: path
        description: 자가진단 중 표출된 추천 비디오의 ID
        required: true
        schema:
          type: string
          format: string
          example: '1d80abe8-c8fb-45b1-9307-de689ccfaf60'
      - name: isBookmarkOn
        in: path
        description: 북마크 지정 여부. (true 시 지정, false 시 해제)
        required: true
        schema:
          type: boolean
          example: true
      - $ref: "#/components/parameters/Authorization"
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                $ref: "#/components/schemas/DiagnosisRecordDetailDTO"
  /report/miniTestResult/{id}:
    get:
      tags:
      - Self Diagnosis Report
      summary: 미니 테스트 리포트의 정보를 가져옵니다.
      description: 투자 지식 평가 점수, 백분율, Part 별 이해도, 취약 영역 상세, 지식문제 수준 진단 기록을 가져옵니다. UX 예시와 값을 대체로 맞췄으니 참고하여 해당 값들의 역할을 파악 바랍니다.
      parameters:
      - name: id
        in: path
        description: 유저 ID
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  score: 70
                  percentage: 88
                  partUnderstanding: [
                    ["필요자금 마련방법", "C", "50"],
                    ["생애주기", "A", "89"],
                    ["가치변화의 요인", "F", "10"]
                  ]
                  weakPartDetail: [
                    ["파트 5 상세 1", "F", "C"],
                    ["파트 5 상세 2", "F", "C"],
                    ["파트 5 상세 3", "F", "C"],
                    ["파트 5 상세 4", "F", "C"],
                    ["파트 5 상세 5", "F", "C"]
                  ]
                  diagnosisQuestionInfo: [
                    ["맞은 문제 ID", "2", "3", "4", "5"],
                    ["틀린 문제 ID", "7", "8"],
                    ["모르는 문제 ID", "9", "10"]
                  ]

  /userInfo/{id}:
      put:
        tags:
        - User
        summary: 유저 정보 입력
        description: 랜덤 생성된 유저 ID를 입력합니다.
        parameters:
        - name: id
          in: path
          description: 유저 아이디
          required: true
          schema:
            type: string
            format: string
        responses:
          200:
            description: OK
            content:
              json:
                schema:
                  type: object
                  example:
                    resultMessage: Successfully updated
         
          500:
            description: Server Side Exception of any kind 
            content:
              json:
                schema:
                  type: object
                  example:
                    resultMessage: Internal Server Error.
  /model/ukRel:
    get:
      tags:
        - Model
      summary: 모델 업데이트를 위한 UK_REL 정보를 가져옵니다.
      description: 현 상태의 UK_REL 테이블 정보를 조회해옵니다.
      responses:
        200:
          description: 성공
          content:
            json:
              schema:
                $ref: "#/components/schemas/ukRelResult"

components:
  schemas:
    diagnosisProblemList:
      properties:
        resultMessage:
          type: string
          example: "Successfully returned"
        NRUuid:
          type: string
          example: "NR-0c966b66-0b06-11ec-9a03-0242ac130003"
        diagProbSetId:
          type: string
          example: "2fc89ea8-fb4b-11eb-9a03-0242ac130003"
        tendencyProblems:
          type: array
          example:
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
        knowledgeProblems:
          type: array
          example:
            - [1,2,3]
            - [4,5,6]
            - [7,8,9]
            - [10,11,12]
            - [13,14,15]
            - [16,17,18]
            - [19,20,21]
            - [22,23,24]
            - [25,26,27]
            - [28,29,30]
            - [31,32,33]
            - [34,35,36]

    minitestmProblemList:
      properties:
        resultMessage:
          type: string
          example: "Successfully returned"
        newProbSetId:
          type: string
          example: "2fc89ea8-fb4b-11eb-9a03-0242ac130003"
        minitestProblems:
          type: array
          example:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
        continueProbSetId:
          type: string
          example: "429589d8-fbe1-11eb-9a03-0242ac130003"
        continueProblems:
          type: array
          example:
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
            - 39
            - 40
        continueAnswers:
          type: array
          example:
            - 1
            - 4
            - 3
            - 5
            - 2
        isCorrect:
          type: array
          example:
            - 0
            - 1
            - 0
            - 0
            - 1
        guessAlarm:
          type: integer
          example: 0
    lrsBody:
      type: object
      required:
      - actionType
      - sourceType
      - timestamp
      - userId
      properties:
        actionType:
          type: string
          example: submit
          description: 해당 활동의 동사
        cursorTime:
          type: integer
          format: int32
          example: 0
          description: 비디오, 오디오와 같은 활동에서 사용되는 커서 시간. (Ednet 참고. ex) A 비디오 10초(10000ms) 지점을 클릭 했다.)
        duration:
          type: integer
          example: 0
          description: 활동의 지속 시간( ex) 비디오 보기를 30초(30000ms) 동안 지속했다.)
        extension:
          type: string
          example: "{diagProbSetId : '3ed64290-0183-11ec-9a03-0242ac130003', guessAlarm : 1}"
          description: 추가 메타 데이터 (Json 형태의 String)
        isCorrect:
          type: integer
          format: int32
          example: 0
          description: '활동의 정답 여부. (0 : Fail, 1 : Success)'
        platform:
          type: string
          example: 금융투자협회
          description: 해당 활동이 일어난 Platform 이름
        sourceId:
          type: string
          example: 108
          description: 해당 활동의 Source의 ID. ( ex) 유저가 푼 문제의 ID, 100)
        sourceType:
          type: string
          example: mini_test_question
          description: 해당 활동의 목적어(Source) 타입.
        timestamp:
          type: string
          example: '2021-07-14T10:25:56.192Z'
          description: 해당 활동이 일어난 시간. ISO 8601 Format.
        userAnswer:
          type: string
          example: '1'
          description: 유저가 해당 활동에서 작성한 답안. ( ex) 문제 A에 3, 5번을 선택하여 제출했다.)
        userId:
          type: string
          example: ""
          description: 유저의 ID(JWT or 일반 String 값)
    quitBody:
      type: object
      required:
      - actionType
      - sourceType
      - timestamp
      - userId
      properties:
        actionType:
          type: string
          example: quit
          description: 해당 활동의 동사
        cursorTime:
          type: integer
          format: int32
          example: 0
          description: 비디오, 오디오와 같은 활동에서 사용되는 커서 시간. (Ednet 참고. ex) A 비디오 10초(10000ms) 지점을 클릭 했다.)
        duration:
          type: integer
          example: 0
          description: 활동의 지속 시간( ex) 비디오 보기를 30초(30000ms) 동안 지속했다.)
        extension:
          type: string
          example: "{diagProbSetId : '3ed64290-0183-11ec-9a03-0242ac130003', guessAlarm : 0}"
          description: 추가 메타 데이터 (Json 형태의 String)
        isCorrect:
          type: integer
          format: int32
          example: 0
          description: '활동의 정답 여부. (0 : Fail, 1 : Success)'
        platform:
          type: string
          example: 금융투자협회
          description: 해당 활동이 일어난 Platform 이름
        sourceId:
          type: string
          example: 108
          description: 해당 활동의 Source의 ID. ( ex) 유저가 푼 문제의 ID, 100)
        sourceType:
          type: string
          example: mini_test_question
          description: 해당 활동의 목적어(Source) 타입.
        timestamp:
          type: string
          example: '2021-07-14T10:25:56.192Z'
          description: 해당 활동이 일어난 시간. ISO 8601 Format.
        userAnswer:
          type: string
          example: '1'
          description: 유저가 해당 활동에서 작성한 답안. ( ex) 문제 A에 3, 5번을 선택하여 제출했다.)
        userId:
          type: string
          example: ""
          description: 유저의 ID(JWT or 일반 String 값)
    solutions:
      type: object
      properties:
        probId:
          type: integer
          example: 21
          description: 문제 ID
        userAnswer:
          type: array
          example:
            - "2"
          description: 정답 (복수 정답 가능성 O)
        solution:
          type: string
          example:
            "[{\"data\": 2, \"type\": \"MULTIPLE_CHOICE_CORRECT_ANSWER\"}, {\"data\": \"투자에서 발생하는 수익률은 다음과 같이 계산한다. 먼저 주식과 채권과 같은 투자 자산을 매도한 가격에서 이를 매입할 때 들어간 금액을 뺀 시세 차익과 채권 이자와 주식 배당처럼 투자 자산에서 발생한 현금흐름을 더한다. 그리로 수수료 등 비용을 차감한다. 이렇게 계산한 금액을 매입 금액으로 나눈 다음 100을 곱해 퍼센트(%)로 환산하면 수익률을 계산할 수 있다. \\n\\n수익률=(매도 금액-매입 금액±보유 기간 중 현금흐름-비용)/(매입 금액)  ×100\\n          =  (120만원-100만원+10만원-5만원)/100만원  ×100 = 25% \", \"type\": \"SOLUTION_TEXT\"}]"
          description: 정답 및 해설에 필요한 정보들 json string 형태
        material:
          type: string
          example:
            "참고자료(교재 정보)"
          description: 참고한 참고자료나 교재 정보
    parsedSolutions:
      type: object
      properties:
        probId:
          type: integer
          example: 21
          description: 문제 ID
        userAnswer:
          type: array
          example:
            - "2"
          description: 유저 답 (복수 정답 가능)
        solution:
          type: array
          example: [
            {
              data: ["2"],
              type: MULTIPLE_CHOICE_CORRECT_ANSWER
            },
            {
              data: [투자에서 발생하는 수익률은 다음과 같이 계산한다. 먼저 주식과 채권과 같은 투자 자산을 매도한 가격에서 이를 매입할 때 들어간 금액을 뺀 시세 차익과 채권 이자와 주식 배당처럼 투자 자산에서 발생한 현금흐름을 더한다. 그리로 수수료 등 비용을 차감한다. 이렇게 계산한 금액을 매입 금액으로 나눈 다음 100을 곱해 퍼센트(%)로 환산하면 수익률을 계산할 수 있다. \\n\\n수익률=(매도 금액-매입 금액±보유 기간 중 현금흐름-비용)/(매입 금액)  ×100\\n          =  (120만원-100만원+10만원-5만원)/100만원  ×100 = 25%],
              type: SOLUTION_TEXT
            }
          ]
        material:
          type: string
          example: "참고자료(교재 정보)"
    solutionResult:
      type: object
      properties:
        resultmessage:
          type: string
          example: "Successfully returned"
          description: "결과 메세지"
        solutions:
          type: array
          items:
            $ref: "#/components/schemas/solutions"
    parsedSolutionResult:
      type: object
      properties:
        resultmessage:
          type: string
          example: "Successfully returned"
          description: "결과 메세지"
        solutions:
          type: array
          items:
            $ref: "#/components/schemas/parsedSolutions"
    answerCheckResult:
      type: object
      properties:
        resultMessage:
          type: string
          example: "Successfully returned"
        isCorrect:
          type: integer
          example: 1
          enum:
            - 1
            - 0
            - -1
    ukRelResult:
      type: object
      properties:
        resultMessage:
          type: string
          example: "Successfully returned"
        baseUk:
          type: array
          example:
            - 4
            - 8
            - 12
            - 13
            - 5
            - 6
            - 7
            - 9
            - 10
        preUk:
          type: array
          example:
            - 3
            - 3
            - 3
            - 3
            - 4
            - 5
            - 6
            - 8
            - 9
    DiagnosisRecordMainDTO:
      type: object
      properties:
        giScore:
          type: integer
          example: 85
          description: 자가 진단 GI 점수.
        giPercentage:
          type: integer
          example: 15
          description: 자가 진단 GI 점수 퍼센테이지. (ex 상위 15%)
        giComment:
          type: string
          example: '자가 진단 상위권에 해당되는 점수 입니다.'
          description: 자가 진단 GI 점수에 따른 코멘트.        
        userName:
          type: string
          example: '홍길동'
          description: 해당 유저의 닉네임.
        alarm:
          type: boolean
          example: true
          description: 자가 진단 알람 여부.
        scoreInfo:
          type: object
          properties:
            risk:
              type: object
              properties:
                score:
                  type: integer
                  example: 71
                  description: 위험 대응 점수
                percentage:
                  type: integer
                  example : 15
                  description: 위험 대응 점수 퍼센테이지. (ex 상위 15%)
            invest:
              type: object
              properties:
                score:
                  type: integer
                  example: 71
                  description: 투자 행동 편향 점수
                percentage:
                  type: integer
                  example : 15
                  description: 투자 행동 편향 점수 퍼센테이지. (ex 상위 15%)
            knowledge:
              type: object
              properties:
                score:
                  type: integer
                  example: 71
                  description: 지식 이해 점수
                percentage:
                  type: integer
                  example : 15
                  description: 지식 이해 점수 퍼센테이지. (ex 상위 15%)
        similarTypeInfo:
          type: array
          items:
            type: string
          description: 자신과 비슷한 유형의 투자자 정보. [투자자 비율, 평균 투자종목 수, 주식투자 비중] 으로 구성.
          example: ['15%', '5종목', '40%']
        video:
          type: object
          properties:
            basic:
              type: array
              items:
                $ref: '#/components/schemas/RecommendVideoDTO'
            type:
              type: array
              items:
                $ref: '#/components/schemas/RecommendVideoDTO'
            advanced:
              type: array
              items:
                $ref: '#/components/schemas/RecommendVideoDTO'
          description: 추천 비디오 관련 정보. (투자 기초(basic), 투자 실전(advanced), 투자 성향(type)) 
    RecommendVideoDTO:
      type: object
      properties:
        id:
          type: string
          description: 해당 비디오의 ID
          example: 'asdgkljbn-sklagjdnvb24fj-12489sdfn'
        videoSrcUrl:
          type: string
          description: 해당 비디오의 영상 URL
          example: 'https://youtube.com/vnwEchbie'
        title:
          type: string
          description: 해당 비디오의 제목
          example: '[슈카월드] 투자란?'
        thumbnailUrl:
          type: string
          description: 해당 비디오의 썸네일 URL 
          example: 'thumbmail.png'
        totalTime:
          type: number
          description: 해당 비디오의 재생 시간 길이. (단위 second)
          example: 864
        hit:
          type: integer
          description: 해당 비디오의 조회수 
          example: 30
        isBookmark:
          type: boolean
          description: 해당 유저가 해당 비디오에 북마크가 되었는지에 대한 여부.
          example: true
    DiagnosisRecordDetailDTO:
      type: object
      properties:
        score:
          type: integer
          description: 해당 파트의 점수
          example: 89
        percentage:
          type: string
          description: 해당 파트 점수의 퍼센테이지 (ex 상위 15%)
          example: 15
        mainCommentInfo:
          type: object
          properties:
            main:
              type: string
              description: 해당 파트 점수에 따른 메인 코멘트
              example: 현명한 하이브리드형 투자자
            detail:
              type: string
              description: 해당 파트 점수에 따른 메인 코멘트 설명문
              example: 하이브리드형 투자자는 공격적일때는 공격적으로, 보수적일때는 보수적으로....
          description: 해당 파트 점수에 따른 코멘트
        detailCommentInfo:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: 해당 파트의 상세 점수 이름
                example: 투자위험 태도
              main:
                type: string
                description: 해당 파트의 상세 점수 메인 코멘트
                example: 너무 큰 위험도 너무 작은 위험도 추구하지 않는, 중립형 투자자
              detail:
                type: string
                description: 해당 파트의 상세 점수 메인 코멘트 설명문
                example: 당신은 리스크 중립형으로 위험을 적당하게 수용하고 인내하는 투자자 입니다.
              score:
                type: integer
                description: 해당 파트의 상세 점수
                example: 42
          description: 해당 파트의 상세 점수에 대한 코멘트
        problemCorrectInfo:
          type: object
          properties:
            allCorr:
              type: integer
              description: 모든 문제 중 맞은 갯수
              example: 3
            allProb:
              type: integer
              description: 모든 문제 갯수
              example: 12
            high:
              type: string
              description: 난이도 상, '정답 맞은 갯수 / 모든 문제' 형태의 string
              example: '1/1'
            middle:
              type: integer
              description: 난이도 중, '정답 맞은 갯수 / 모든 문제' 형태의 string
              example: '1/6'
            low:
              type: integer
              description: 난이도 하, '정답 맞은 갯수 / 모든 문제' 형태의 string
              example: '1/5'
          description: 지식 이해(knowledge) 파트 일 경우 활성화. 문제 정오답에 대한 정보 Object
        problemHighLevelInfo:
          type: array
          items:
            type: array
            items:
              type: string
              example: [문제 index, 문제 UUID, 정오답 여부(true or false), 문제 내용, 난이도]
          description: 난이도 상, 유저가 푼 문제 정보
        problemMiddleLevelInfo:
          type: array
          items:
            type: array
            items:
              type: string
              example: [문제 index, 문제 UUID, 정오답 여부(true or false), 문제 내용, 난이도]
          description: 난이도 중, 유저가 푼 문제 정보
        problemLowLevelInfo:
          type: array
          items:
            type: array
            items:
              type: string
              example: [문제 index, 문제 UUID, 정오답 여부(true or false), 문제 내용, 난이도]
          description: 난이도 하, 유저가 푼 문제 정보  
  parameters:
    userId:
      in: query
      name: "userId"
      required: false
      description: "유저 ID"
      schema:
        type: string
        example: "00368989-7f56-478a-9d4f-e46c9baa6598"
    Authorization:
      in: header
      name: "Authorization"
      required: false
      description: 유저 정보를 담고 있는 jwt 토큰 (홈페이지 발급) - 로그인 상태만 존재
      schema:
        type: string
        example: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZXN0QG5hdmVyLmNvbSIsInVzZXJVdWlkIjoiMjgyZjAxOTYtMDY5Yi00NGJkLThhMTUtODc0MGU2NDAzYzcxIiwiZXhwIjoxNjMwMjA4ODMyLCJlbWFpbCI6InRlc3RAbmF2ZXIuY29tIn0.0I8iNN-o_78Zg-3KDRcx1ZoIdjEiR2JtmFtnmmjbVQJWs6HoN2FFtjeYPeut-wwVapsMtbZ3x0yNq7-Om36Blg'
    probId:
      in: "path"
      required: true
      name: "probId"
      description: "문제 ID"
      schema:
        type: integer
        example: 21
    probIds:
      in: "path"
      required: true
      name: "probIds"
      description: "문제 ID"
      schema:
        type: array
        example: 
        - 21
        - 22
        - 23
        - 24
    setId:
      in: "path"
      required: true
      name: "setId"
      description: "진단 세트 ID"
      schema:
        type: string
        example: "301211121278486"
  requestBodies:
    LRSBody:
      description: "LRS에 저장할 statement 구성 정보"
      required: true
      content:
        application/json:
          schema:
            properties:
              lrsbody:
                type: array
                items:
                  $ref: "#/components/schemas/lrsBody"
              NRUuid:
                type: string
                example: NR-0c966b66-0b06-11ec-9a03-0242ac130003
    quitBody:
      description: LRS에 저장할 statement 구성 정보
      required: true
      content:
        application/json:
          schema:
            properties:
              lrsbody:
                type: array
                items:
                  $ref: "#/components/schemas/quitBody"
              NRUuid:
                type: string
                example: NR-0c966b66-0b06-11ec-9a03-0242ac130003


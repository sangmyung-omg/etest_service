swagger: '2.0'
info:
  description: This is an API for test studio. 각 API Description 하단의 Model 버튼을 눌러 required 여부(*표시)를 확인하세요
  version: 1.0.0
  title: test studio API
  contact:
    email: changeon_lim@tmax.co.kr
paths:
  # /DiagProblems:
  /test-studio/DiagProblems/{userID}/{probIDs}:
    get:
      tags:
      - teststudio
      summary: get diagProblems
      description:  
        자가진단 문제를 가져옵니다.
      # requestBody:
      #   description: 자가진단 문제를 가져옵니다.
      #   required: true
      #   content:
      #     application/json: 
      #       schema:
      #         $ref: '#/definitions/GetProblemDTOIn'
      parameters:
      - name: userID
        in: path
        description: 사용자 아이디
        required: true
        schema:
          type: string
          format: string
      - name: probIDs
        in: path
        description: 문제IDs String (format ex = 1, 2, 3)
        required: true
        schema:
          type: string
          format: string
      # - in: body
      #   # name: body
      #   # description: part
      #   required: true
      #   schema:
      #         $ref: '#/definitions/GetProblemDTOIn'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/GetDiagProblemDTOOut'
        400:
          description: bad input parameter
  /test-studio/DiagProblems:
    put:
      tags:
      - teststudio
      summary: update diagProblems
      description:  
        자가진단 문제를 수정합니다. *주의* problemChoices, probUKRels는 not required 이지만, 입력하면 해당 문제에 대한 db의 기존 choice, rel 정보는 '삭제' 되고 입력한 정보로 대체 합니다. (choice, rel 에 대해서는 수정 할 정보 뿐만 아니라 모든 정보를 입력하세요)
      parameters:
      - in: body
        required: true
        schema:
              $ref: '#/definitions/PutDiagProblemDTOIn'
      responses:
        200:
          description: success
        400:
          description: bad input parameter
# 
  /test-studio/DiagCurrStatus:
    put:
      tags:
      - teststudio
      summary: change status of diagnosis curriculum
      description:  
        자가진단 커리큘럼(주제) 에 대한 출제 상태를 변경 합니다 (출제 보류 <=> 출제 가능)
      parameters:
      - in: body
        required: true
        schema:
              $ref: '#/definitions/PutDiagCurrStatusDTOIn'
      responses:
        200:
          description: success
        400:
          description: bad input parameter
# 
  # /TestProblems:
  /test-studio/TestProblems/{userID}/{probIDs}:
    get:
      tags:
      - teststudio
      summary: get testProblems
      description:  
        미니진단 문제를 가져옵니다.
      parameters:
      - name: userID
        in: path
        description: 사용자 아이디
        required: true
        schema:
          type: string
          format: string
      - name: probIDs
        in: path
        description: 문제IDs String (format ex = 1, 2, 3)
        required: true
        schema:
          type: string
          format: string
      # - in: body
      #   required: true
      #   schema:
      #         $ref: '#/definitions/GetProblemDTOIn'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/GetTestProblemDTOOut'
        400:
          description: bad input parameter
  /test-studio/TestProblems:
    post:
      tags:
      - teststudio
      summary: create testProblems
      description:  
        미니진단 문제를 생성합니다.
      parameters:
      - in: body
        required: true
        schema:
              $ref: '#/definitions/PostTestProblemDTOIn'
      responses:
        200:
          description: success
          schema:
              $ref: '#/definitions/PostTestProblemDTOOut'
        400:
          description: bad input parameter    

    put:
      tags:
      - teststudio
      summary: update testProblems
      description:  
        미니진단 문제를 수정합니다. *주의* problemChoices, probUKRels는 not required 이지만, 입력하면 해당 문제에 대한 db의 기존 choice, rel 정보는 '삭제' 되고 입력한 정보로 대체 합니다. (choice, rel 에 대해서는 수정 할 정보 뿐만 아니라 모든 정보를 입력하세요)
      parameters:
      - in: body
        required: true
        schema:
              $ref: '#/definitions/PutTestProblemDTOIn'
      responses:
        200:
          description: success
        400:
          description: bad input parameter

    delete:
      tags:
      - teststudio
      summary: delete testProblems
      description:  
        미니진단 문제를 *db에서 완전히* 삭제합니다.
      parameters:
      - in: body
        required: true
        schema:
              $ref: '#/definitions/GetProblemDTOIn'
      responses:
        200:
          description: success
        400:
          description: bad input parameter
# 
  /test-studio/TestProbStatus:
    put:
      tags:
      - teststudio
      summary: change status of a test problem
      description:  
        미니진단 특정 문제에 대한 출제 상태를 변경 합니다 (출제 보류 <=> 출제 가능)
      parameters:
      - in: body
        required: true
        schema:
              $ref: '#/definitions/PutTestProbStatusDTOIn'
      responses:
        200:
          description: success
        400:
          description: bad input parameter
# 
  /test-studio/Image:
    post:
      tags:
      - teststudio
      summary: post images
      description:  
        이미지를 업로드 합니다 (복수 img file 업로드가능)
      consumes:
      - multipart/form-data
      parameters:
      - in: formData
        name: userID
        type: string
        required: true
      - in: formData
        name: img
        type: file
        required: true
      responses:
        200:
          description: success
        400:
          description: bad input parameter
# 
  # /test-studio/ImageSrc:
  /test-studio/ImageSrc/{userID}/{probIDs}:
    get:
      tags:
      - teststudio
      summary: get imgSrcs(list) for each problem
      description:  
        문제의 이미지 src(이름) 정보를 가져옵니다.
      parameters:
      - name: userID
        in: path
        description: 사용자 아이디
        required: true
        schema:
          type: string
          format: string
      - name: probIDs
        in: path
        description: 문제IDs String (format ex = 1, 2, 3)
        required: true
        schema:
          type: string
          format: string
      # parameters:
      # - in: body
      #   required: true
      #   schema:
      #         $ref: '#/definitions/GetProblemDTOIn'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/GetProblemImageDTOOut'
        400:
          description: bad input parameter

          #  -----------------------------------------------------def  #a1

definitions:
  GetProblemDTOIn:
    type: object
    required:
    - userID
    - probIDs
    properties:
      userID:
        type: string
        example: 'userIDSample'
      probIDs:
        type: array
        example: ["1","2","3"]
        items:
          type: string
        
  GetDiagProblemDTOOut:
    type: object
    required:
    - diagProblems
    properties:
     diagProblems:
      type: array
      items:
        type: object
        required:
        - problem
        # - probChoices
        - probUKRels
        - diagCurriculum
        properties: 
          problem:
            type: object
            required:
            - probID
            - answerType
            - question
            - solution
            properties: 
              probID:
                type: string
                example: "1"
              answerType:
                type: string
              question:
                type: string
              solution:
                type: string
              difficulty:
                type: string
              category:
                type: string
              # imgSrc:
              #   type: string
              timeRecommendation:
                type: string
              creatorID:
                type: string
              createDate:
                type: string
              validatorID:
                type: string
              validateDate:
                type: string
              editorID:
                type: string
              editDate:
                type: string
              source:
                type: string
              intention:
                type: string
              questionInitial:
                type: string
              solutionInitial:
                type: string
              imgsOut:
                type: string

          probChoices:
            type: array
            items:
              type: object
              required:
              - choiceNum
              - ukID
              properties: 
                choiceNum:
                  type: string
                ukID:
                  type: string
                choiceScore:
                  type: string

          probUKRels:
            type: array
            items:
              type: object
              required:
              - ukID
              properties:
                ukID:
                  type: string

          diagCurriculum:
            type: object
            required:
            - curriculumID
            properties: 
              curriculumID:
                type: string
              subject:
                type: string
              status:
                type: string
 
  PutDiagProblemDTOIn:
    type: object
    required:
    - userID
    - diagProblems
    properties:
      userID:
        type: string
        example: 'userIDSample'
      diagProblems:
        type: array
        items:
          type: object
          required:
          - problem
          properties:
            problem:
              type: object
              required:
              - probID
              properties: 
                probID:
                  type: string
                  example: "1"
                answerType:
                  type: string
                question:
                  type: string
                solution:
                  type: string
                difficulty:
                  type: string
                category:
                  type: string
                # imgSrc:
                #   type: string
                timeRecommendation:
                  type: string
                # creatorID:
                #   type: string
                # createDate:
                #   type: string
                # validatorID:
                #   type: string
                # validateDate:
                #   type: string
                # editorID:
                #   type: string
                # editDate:
                #   type: string
                source:
                  type: string
                intention:
                  type: string
                questionInitial:
                  type: string
                solutionInitial:
                  type: string
                imgSrcListIn:
                  type: array
                  items:
                    type: string
                imgToEditSrcListIn:
                  type: array
                  items:
                    type: string

            probChoices:
              type: array
              example: [{"choiceNum":"1", "uKID":"11"},{}]
              items:
                type: object
                required:
                - choiceNum
                - ukID
                properties: 
                  choiceNum:
                    type: string
                  ukID:
                    type: string
                  choiceScore:
                    type: string

            probUKRels:
              type: array
              items:
                type: object
                required:
                - ukID
                properties:
                  ukID:
                    type: string

            diagCurriculum:
              type: object
              required:
              - curriculumID
              properties: 
                curriculumID:
                  type: string
                subject:
                  type: string
                # status:
                #   type: string
# 
  PutDiagCurrStatusDTOIn:
    type: object
    required:
    - userID
    - curriculumID
    properties:
      userID:
        type: string
        example: 'userIDSample'
      curriculumID:
        type: string
        example: "33"
# 
  PutTestProbStatusDTOIn:
    type: object
    required:
    - userID
    - probID
    properties:
      userID:
        type: string
        example: 'userIDSample'
      probID:
        type: string
        example: "33"
# 
  GetTestProblemDTOOut:
    type: object
    required:
    - testProblems
    properties:
      testProblems:
        type: array
        items:
          type: object
          required:
          - problem
          # - probChoices
          - probUKRels
          - testProblem
          properties: 
            problem:
              type: object
              required:
              - probID
              - answerType
              - question
              - solution
              properties: 
                probID:
                  type: string
                  example: "1"
                answerType:
                  type: string
                question:
                  type: string
                solution:
                  type: string
                difficulty:
                  type: string
                category:
                  type: string
                # imgSrc:
                #   type: string
                timeRecommendation:
                  type: string
                creatorID:
                  type: string
                createDate:
                  type: string
                validatorID:
                  type: string
                validateDate:
                  type: string
                editorID:
                  type: string
                editDate:
                  type: string
                source:
                  type: string
                intention:
                  type: string
                questionInitial:
                  type: string
                solutionInitial:
                  type: string
                imgsOut:
                  type: string

            probChoices:
              type: array
              items:
                type: object
                required:
                - choiceNum
                - ukID
                properties: 
                  choiceNum:
                    type: string
                  ukID:
                    type: string
                  choiceScore:
                    type: string

            probUKRels:
              type: array
              items:
                type: object
                required:
                - ukID  
                properties:
                  ukID:
                    type: string

            testProblem:
              type: object
              required:
              - partID  
              - status
              properties: 
                partID:
                  type: string
                subject:
                  type: string
                status:
                  type: string


  PostTestProblemDTOIn:
    type: object
    required:
    - userID
    - testProblems
    properties:
      userID:
        type: string
        example: 'userIDSample'
      testProblems:
        type: array
        items:
          type: object
          required:
          - problem
          # - probChoices
          - probUKRels
          - testProblem
          properties:
            problem:
              type: object
              required:
              # - probID
              - answerType
              - question
              - solution
              properties: 
                # probID:
                #   type: string
                #   example: "string : no need to fill in for Post API !"
                answerType:
                  type: string
                question:
                  type: string
                solution:
                  type: string
                difficulty:
                  type: string
                category:
                  type: string
                # imgSrc:
                #   type: string
                timeRecommendation:
                  type: string
                # creatorID:
                #   type: string
                # createDate:
                #   type: string
                # validatorID:
                #   type: string
                # validateDate:
                #   type: string
                # editorID:
                #   type: string
                # editDate:
                #   type: string
                source:
                  type: string
                intention:
                  type: string
                questionInitial:
                  type: string
                solutionInitial:
                  type: string
                imgSrcListIn:
                  type: array
                  items:
                    type: string

            probChoices:
              type: array
              items:
                type: object
                required:
                - choiceNum
                - ukID
                properties: 
                  choiceNum:
                    type: string
                  ukID:
                    type: string
                  choiceScore:
                    type: string

            probUKRels:
              type: array
              items:
                type: object
                required:
                - ukID
                properties:
                  ukID:
                    type: string

            testProblem:
              type: object
              required:
              - partID
              properties: 
                partID:
                  type: string
                subject:
                  type: string
                status:
                  type: string
# 
  PostTestProblemDTOOut:
    type: object
    required:
    - probIDs
    properties:
      resultMessage:
        type: string
        example: "success"
      probIDs:
        type: array
        example: ["1","2"]
        items: 
          type: string
# 
  PutTestProblemDTOIn:
    type: object
    required:
    - userID
    - testProblems
    properties:
      userID:
        type: string
        example: 'userIDSample'
      testProblems:
        type: array
        items:
          type: object
          required:
          - problem
          properties:
            problem:
              type: object
              required:
              - probID
              properties: 
                probID:
                  type: string
                  example: "12"
                answerType:
                  type: string
                question:
                  type: string
                solution:
                  type: string
                difficulty:
                  type: string
                category:
                  type: string
                # imgSrc:
                #   type: string
                timeRecommendation:
                  type: string
                # creatorID:
                #   type: string
                # createDate:
                #   type: string
                # validatorID:
                #   type: string
                # validateDate:
                #   type: string
                # editorID:
                #   type: string
                # editDate:
                #   type: string
                source:
                  type: string
                intention:
                  type: string
                questionInitial:
                  type: string
                solutionInitial:
                  type: string
                imgSrcListIn:
                  type: array
                  items:
                    type: string
                imgToEditSrcListIn:
                  type: array
                  items:
                    type: string            

            probChoices:
              type: array
              items:
                type: object
                required:
                - choiceNum
                - ukID
                properties: 
                  choiceNum:
                    type: string
                  ukID:
                    type: string
                  choiceScore:
                    type: string

            probUKRels:
              type: array
              items:
                type: object
                required:
                - ukID
                properties:
                  ukID:
                    type: string

            testProblem:
              type: object
              properties: 
                partID:
                  type: string
                subject:
                  type: string
                # status:
                #   type: string

  GetProblemImageDTOOut:
    type: object
    required:
    - problemImages
    properties:
     problemImages:
      type: array
      items:
        type: object
        required:
        - probID
        properties: 
          probID:
            type: string
          imgSrcs:
            type: array
            items:
              type: string

# host: virtserver.swaggerhub.com
# basePath: /jinhyung_lee/test-studio/1.0.0
schemes:
 - https
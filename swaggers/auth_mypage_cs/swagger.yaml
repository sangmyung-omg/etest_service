openapi: 3.0.2
info:
  title: KOFIA etest ae1-1 API
  version: '0.1'
servers:
  - url: 'http://192.168.153.194:8080/'
    description: example server address
tags:

  - name: AUTH
  - name: 자주 묻는 질문
  - name: 공지사항

  - name: 1대1문의
  - name: 자가진단


paths:

  /login:
    post:
      tags:
        - AUTH
      requestBody:
        content:
          application/json:
            schema:
              properties:
                providerId:
                  description: 고유번호
                  type: string
                provider:
                  description: Oauth 플랫폼
                  type: string
              required:
                - status
              example: {
                            "providerId": "1232344324",
                            "provider": "kakao"
                        }
      responses:
        '200':
          description: 회원가입이 이미 된 유저
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: success
                  data: {
                        jwtToken: "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtaW5UZXNtaW5UZXN0dEBuYXZlci5jb20iLCJyb2xlIjpbIlJPTEVfVVNFUiJdLCJ1c2VyVXVpZCI6IjIxNmI5MDc4LTVjNzQtNDVkOC1hODg4LWMyODY3NWRjMjcxZiIsImV4cCI6MTYzNzg5NDg0NiwiaWF0IjoxNjM3ODg4ODQ2LCJlbWFpbCI6Im1pblRlc21pblRlc3R0QG5hdmVyLmNvbSJ9.TjZaj-UL4qAzk_byXmYhMsP4dBpl2YIrQnbvkR1ygbG8-zGuWWcH_acg6cUubhiDQT2w-xHCKrpvwlrgwOpcDg",
                        email: "test@naver.com",
                        birthday: '1995-04-25',
                        nickname: "test",
                        provider: "kakao",
                        providerId: "test",
                        refreshToken: "eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2Mzc4ODg4NDYsImV4cCI6MTYzODQ5MzY0Nn0.vNsnKobB8KvIdtrhOC06kEklC2qmc0CB5XgazGh9T6XQ76nVP-y3O3-z8P6WkzmIrcS4s842TfSbfWSyj-C5Lw"
                  }
                        
        '201':
          description: 회원가입이 안 된 유저
          content:
            json:
              schema:
                type: object
                example:
                  code: 201
                  message: success
                  data: null
  /signup:
    post:
      tags:
        - AUTH
      requestBody:
        content:
          application/json:
            schema:
              properties:
                providerid:
                  description: 고유 번호
                  type: string
                email:
                  description: 이메일
                  type: string
                provider:
                  description: Oauth 플랫폼
                  type: string
                birthday:
                  description: 생일 (yyyy-mm-dd)
                  type: string
                nickname:
                  description: 닉네임
                  type: string
              example: {
                          "providerId": "test",
                          "email": "test@naver.com",
                          "birthday": "1995-04-25",
                          "provider": "naver",
                          "nickname": "test"
                      }
      responses:
        '200':
          description: 회원 가입 성공
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 회원가입 완료
                  data: "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGZnc2JAYm1uYXZlci5jb20iLCJyb2xlIjpbIlJPTEVfVVNFUiJdLCJ1c2VyVXVpZCI6ImIyZjcyNDlmLTUwN2QtNDQ1ZS04MmQ0LWRkZjlkN2E3MDgxOSIsImV4cCI6MTYzNzg5NTEyMSwiaWF0IjoxNjM3ODg5MTIxLCJlbWFpbCI6InNkZmdzYkBibW5hdmVyLmNvbSJ9.y0iojclYYaHcHMMlPnXle-odRhexQezcmtL3wDczh6qLKBOtCKwcgc2qb1-JDWKElY6JL_KxiP9QdcVlGwZEQQ"
  /user/modifyUserInfo:
    post:
      tags:
        - AUTH
      description: 유저 정보 수정
      parameters:
        - name: Cookie
          in: header
          description: JWTtoken
          required: true
          schema:
            type: string
            format: Bearer Token      
      requestBody:
        content:
          application/json:
            schema:
              properties:
                inquiryId:
                  description: 질문 번호
                  type: number      
              example:  
                nickname: "test"
                email: "test@naver.com"
                birthday : 1995-04-25
      responses:
        '200':
          description: 회원 정보 수정 완료
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 성공
                  data: 성공
                
  /emailDuplicateCheck:
    post:
      tags:
        - AUTH
      description: 이메일 중복 체크
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: 이메일
                  type: string
              example: {
                            "email" : "test@naver.com",
                        }
      responses:
        '201':
          description: 중복 회원 체크
          content:
            json:
              schema:
                type: object
                example:
                  code: 201
                  message: 중복 회원 존재
                  data: {
                    email : "중복된 회원이 존재합니다"
                  }
        '200':
          description: 중복 회원 체크
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 회원가입 가능
                  data: {
                    email : "중복된 회원 없음"
                  }
  /notice/update/view:
    post:
      tags:
        - 공지사항
      description: notice view update
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: notice id
                  type: number
              example: {
                "id": 1
              }
      responses:
        '200':
          description: view 반환
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: success
                  data:
                    id: 1
  /notice/image:
    get:
      tags:
        - 공지사항
      description: 공지사항 첨부파일 가져옴
      parameters:
        - name: Cookie
          in: header
          description: JWTtoken
          required: true
          schema:
            type: string
            format: Bearer Token
        - name: filename
          in: query
          schema:
            type: string
            format: string
      responses:
        '200':
          description: 공지사항 이미지 반환
          content:
            image/png:
              schema:
                type: object
                example:
                  code: 200
                  data: 첨부파일 이미지
  /create/notice:
    post:
      tags:
        - 공지사항
      description: 공지사항 만들기
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                title:
                  description: 제목
                  type: string
                content:
                  description: 내용
                  type: string
                image:
                  description: 공지사항 이미지
                  type: string
              example:
                title : "test"
                content : "test"
                image : "test.png"
      responses:
        '200':
          description: 공지사항 생성
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: success
                data: {
                  id: 36,
                  draft: 0,
                  title: null,
                  content: "test 20211213 1",
                  views: 0,
                  imageUrl: "C:/data/notice/a6be5f21-195c-419f-982c-00522c46d383_test.PNG",
                  dateAdd: "2021-12-13T05:41:35.226+00:00",
                  dateEdit: "2021-12-13T05:41:35.226+00:00"
                }
  /notice:
    get:
      tags:
        - 공지사항
      description: 공지사항을 전부 가져옴
      responses:
        '200':
          description: 공지사항을 전부 가져옴
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 공지사항 가져오기 성공
                  data: {
                    id : 1,
                    drafte: 0,
                    title: "알투플러스 이모티콘 이벤트 안내",
                    content: "안녕하십니까, 금융투자협회입니다.",
                    views : 10,
                    dateAdd : "2021-11-05T04:23:35.980+00:00",
                    dateEdit : "2021-11-05T04:23:35.980+00:00"
                    
                  }   
  /faq/update/view:
    post:
      tags:
        - 자주 묻는 질문
      description: faq view update
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: faq id
                  type: number
              example: {
                "id": 1
              }
      responses:
        '200':
          description: view 반환
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: success
                  data:
                    id: 1
  /faq:
    get:
      tags:
        - 자주 묻는 질문
      description: 자주 묻는 질문을 전부 가져옴
      responses:
        '200':
          description: 자주 묻는 질문을 전부 가져옴
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: faqList 반환 성공
                  data: {
                    id : 41,
                    category : "test",
                    draft : 0,
                    title : test,
                    content : testtest,
                    views : 1,
                    dateAdd : "2021-11-03T00:13:53.193+00:00",
                    dateEdit : "2021-11-03T00:13:53.193+00:00"
                  }       



  /user/inquiry/create:
    post:
      tags:
        - 1대1문의
      description: 1대1문의 만들기
      parameters:
        - name: Cookie
          in: header
          description: JWTtoken
          required: true
          schema:
            type: string
            format: Bearer Token      
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                title:
                  description: 제목
                  type: string      
                type:
                  description: 질문 유형
                  type: string         
                date:
                  description: 날짜
                  type: string
                content:
                  description: 내용
                  type: string                     
                inquiry_file:
                  description: 첨부파일 json 리스트
                  type: string
              example: 
                status : "답변 대기중"
                title : "질문 있습니다"
                type : "Account"
                content : "로그인이 잘 안됩니다"
                fileList : "사진.png"
                filsList : "사진.png"
      responses:
        '200':
          description: 해당 유저의 1대1 문의생성
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 1대1 질문 생성 성공
                  data: {
                    id : 228,
                    userUuid: "82919d9e-9dc4-4048-9be2-a4973713de60",
                    userType: null,
                    providerId: "sdfdfsffdbmnmsf",
                    provider: "kakao",
                    email: "sdfgsb@bmnaver.com",
                    role: "USER",
                    birthday: "1995",
                    errors: [],
                    nickname: "sbvbmbnmxcvxv",
                    name: null,
                    older_than_14: true,
                    service_agreement: true,
                    collect_info: true,
                    investPeriod: null,
                    minitestReports: [],
                    createDate: "2021-11-26T10:38:44.588",
                    ip: null,
                    refreshToken: "eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2Mzc4OTA3MzYsImV4cCI6MTYzODQ5NTUzNn0.vNbboT4X1aAvYUwZJzE-H7uDQsdK0ZaNtoFWmPBamyhUhS1KW2bNs3jJZMDLtLUobj32Dp7nAp0nsOZfFCc7Xg"
                  }

  /user/inquiry/list:
    get:
      tags:
        - 1대1문의
      description: 해당 유저의 1대1 문의 반환하기
      parameters:
        - name: Cookie
          in: header
          description: JWTtoken
          required: true
          schema:
            type: string
            format: Bearer Token        
      responses:
        '200':
          description: 해당 유저의 모든 1대1 리스트 기록 반환
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 1대1 질문 리스트 받아오기 성공
                  data: {
                          "inquiry_TYPE": "test",
                          "create_DATE": "2021-11-26T10:39:31.321",
                          "inquiry_ID": 228,
                          "inquiry_STATUS": "test",
                          "inquiry_TITLE": "test"
                         }    
  /user/inquiry/attachment:
    get:
      tags:
        - 1대1문의
      description: 해당 유저의 1대1 문의 첨부파일 반환하기
      parameters:
        - name: Cookie
          in: header
          description: JWTtoken
          required: true
          schema:
            type: string
            format: Bearer Token   
        - name: filename
          in: query
          schema:
            type: string
            format: string   
      responses:
        '200':
          description: 1대1 문의 첨부 파일 반환
          content:
            image/png:
              schema:
                type: object
                example:
                  code: 200
                  data: 첨부파일 이미지    

  /user/inquiry:
    post:
      tags:
        - 1대1문의
      description: 해당 유저의 특정 1대1문의 자세한 정보 반환
      parameters:
        - name: Cookie
          in: header
          description: user JWTtoken
          required: true
          schema:
            type: string
            format: Bearer Token      
      requestBody:
        content:
          application/json:
            schema:
              properties:
                inquiryId:
                  description: 질문 번호
                  type: number      
              example: {   
                          "id": 1
                        }
      responses:
        '200':
          description: 1대1 질문 받아오기 성공
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 1대1 질문 받아오기 성공
                  data: 
                    id: 228
                    userMaster:
                      userUuid: 82919d9e-9dc4-4048-9be2-a4973713de60
                      userType: null
                      providerId: sdfdfsffdbmnmsf
                      provider: kakao
                      email: sdfgsb@bmnaver.com
                      role: USER
                      birthday: '1995'
                      errors: []
                      nickname: sbvbmbnmxcvxv
                      name: null
                      older_than_14: true
                      service_agreement: true
                      collect_info: true
                      investPeriod: null
                      minitestReports: []
                      createDate: '2021-11-26T10:38:44.588'
                      refreshToken: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2Mzc4OTA3MzYsImV4cCI6MTYzODQ5NTUzNn0.vNbboT4X1aAvYUwZJzE-H7uDQsdK0ZaNtoFWmPBamyhUhS1KW2bNs3jJZMDLtLUobj32Dp7nAp0nsOZfFCc7Xg
                    inquiry_file:
                      - url: 01731c43-9f1d-44c4-85b7-c1454e66263c_kofia-공지사항.png
                        type: image/png
                        file: null
                        id: 20164
                        name: kofia-공지사항
                        size: 640351
                    status: test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6
                    title: test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6
                    type: test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6
                    content: test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6
                    answer: null
                    answer_time: null
                    createDate: '2021-11-26T10:39:31.321'
                    adminUuid: null
                           
  /user/inquiry/delete:
    post:
      tags:
        - 1대1문의
      description: 해당 유저의 1대1문의 지우기
      parameters:
        - name: Cookie
          in: header
          description: JWTtoken
          required: true
          schema:
            type: string
            format: Bearer Token      
      requestBody:
        content:
          application/json:
            schema:
              properties:
                inquiryId:
                  description: 질문 번호
                  type: number      
              example:    
                inquiryId : 228
      responses:
        '200':
          description: 해당 유저의 1대1 질문 삭제
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 제거 성공
                  data: 228                     
        '400':
          description: 해당 유저의 1대1 질문 삭제
          content:
            json:
              schema:
                type: object
                example:
                  code: 400
                  message: 해당 질문은 유저가 만든 질문이 아닙니다
                  data: fail     

  /user/myPage/getMiniTestList:
    get:
      tags:
        - 미니테스트
      description: 해당 유저의 미니테스트 리스트 받아오기
      parameters:
        - name: Cookie
          in: header
          description: JWTtoken
          required: true
          schema:
            type: string
            format: Bearer Token      
      responses:
        '200':
          description: 해당 유저의 모든 미니 테스트 리포트 반환
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 성공
                  data: 유저의 미니테스트 기록                     
  /user/myPage/getDiagnosisList:
    get:
      tags:
        - 자가진단
      description: 해당 유저의 자가진단 리스트 받아오기
      parameters:
        - name: Cookie
          in: header
          description: JWTtoken
          required: true
          schema:
            type: string
            format: Bearer Token      
      responses:
        '200':
          description: 해당 유저의 모든 미니 테스트 리포트 반환
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 성공
                  data: 유저의 미니테스트 기록                
  /user/delete:
    get:
      tags:
        - AUTH
      description: 회원 탈퇴
      parameters:
        - name: Cookie
          in: header
          description: JWTtoken
          required: true
          schema:
            type: string
            format: Bearer Token      
      responses:
        '200':
          description: 회원 탈퇴
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 성공
                  data: True



  /user/inquiry/modify:
    post:
      tags:
        - 1대1문의
      description: 해당 유저의 1대1문의 수정
      parameters:
        - name: Cookie
          in: header
          description: user JWTtoken
          required: true
          schema:
            type: string
            format: string      
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: 질문 번호
                  type: number
                title:
                  description: 제목
                type:
                  description: 질문 타입
                content:
                  description: 내용
                fileList:
                  description: 첨부파일
              example: {   
                          "status": "대기중",
                          "title": "두번째 질문이 있습니다",
                          "type": "error",
                          "content": "페이지가 안보입니다",
                          "fileList": ["제목없음.png","제목없음2.png"]
                        }
      responses:
        '200':
          description: 해당 유저의 1대1 수정
          content:
            json:
              schema:
                type: object
                example:
                  code: 200
                  message: 성공
                  data: "True"   
        '400':
          description: 수정 실패
          content:
            json:
              schema:
                type: object
                example:
                  code: 400
                  message: 유저가 생성한 질문이 아닙니다
                  data: 유저가 생성한 질문이 아닙니다    
                  

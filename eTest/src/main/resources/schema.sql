CREATE TABLE USER_MASTER(
    USER_UUID                VARCHAR(32)     NOT NULL, 
    GRADE                    VARCHAR(20)     NULL, 
    SEMESTER                 VARCHAR(20)     NULL, 
    NAME                     VARCHAR(100)    NULL, 
    CURRENT_CURRICULUM_ID    VARCHAR(32)     NULL, 
    EXAM_TYPE                VARCHAR(32)     NULL, 
    EXAM_START_DATE          TIMESTAMP       NULL, 
    EXAM_DUE_DATE            TIMESTAMP       NULL, 
    EXAM_TARGET_SCORE        INT             NULL, 
    CONSTRAINT pk_USER_MASTER PRIMARY KEY (USER_UUID)
);

CREATE TABLE CURRICULUM_MASTER(
    CURRICULUM_ID          VARCHAR(32)     NOT NULL, 
    SCHOOL_TYPE            VARCHAR(20)     NULL, 
    GRADE                  VARCHAR(20)     NULL, 
    SEMESTER               VARCHAR(20)     NULL, 
    CHAPTER                VARCHAR(100)    NULL, 
    SECTION                VARCHAR(100)    NULL, 
    SUB_SECTION            VARCHAR(100)    NULL, 
    CHAPTER_ID             VARCHAR(32)     NULL, 
    CURRICULUM_SEQUENCE    INT             NULL, 
    CONSTRAINT pk_CURRICULUM_MASTER PRIMARY KEY (CURRICULUM_ID)
);

CREATE TABLE UK_MASTER(
    UK_UUID           VARCHAR(32)      NOT NULL, 
    UK_NAME           VARCHAR(200)     NOT NULL, 
    UK_DESCRIPTION    VARCHAR(1000)    NULL, 
    TRAIN_UNSEEN      CHAR(1)          NOT NULL, 
    CURRICULUM_ID     VARCHAR(32)      NULL, 
    CONSTRAINT pk_UK_MASTER PRIMARY KEY (UK_UUID)
);

ALTER TABLE UK_MASTER
    ADD CONSTRAINT FK_UK_MASTER_CURRICULUM_ID_CUR FOREIGN KEY (CURRICULUM_ID)
        REFERENCES CURRICULUM_MASTER (CURRICULUM_ID);

CREATE TABLE UK_REL(
    BASE_UK_UUID          VARCHAR(32)    NOT NULL, 
    PRE_UK_UUID           VARCHAR(32)    NOT NULL, 
    RELATION_REFERENCE    VARCHAR(20)    NULL   
);

ALTER TABLE UK_REL
    ADD CONSTRAINT FK_UK_REL_BASE_UK_UUID_UK_MAST FOREIGN KEY (BASE_UK_UUID)
        REFERENCES UK_MASTER (UK_UUID);

ALTER TABLE UK_REL
    ADD CONSTRAINT FK_UK_REL_PRE_UK_UUID_UK_MASTE FOREIGN KEY (PRE_UK_UUID)
        REFERENCES UK_MASTER (UK_UUID);

CREATE TABLE TYPE_UK_MASTER(
    TYPE_UK_UUID           VARCHAR(32)      NOT NULL, 
    TYPE_UK_NAME           VARCHAR(200)     NOT NULL, 
    TYPE_UK_DESCRIPTION    VARCHAR(1000)    NULL, 
    CURRICULUM_ID          VARCHAR(32)      NULL, 
    CONSTRAINT pk_TYPE_UK_MASTER PRIMARY KEY (TYPE_UK_UUID)
);

ALTER TABLE TYPE_UK_MASTER
    ADD CONSTRAINT FK_TYPE_UK_MASTER_CURRICULUM_I FOREIGN KEY (CURRICULUM_ID)
        REFERENCES CURRICULUM_MASTER (CURRICULUM_ID);

CREATE TABLE TYPE_UK_REL(
    BASE_TYPE_UK_UUID     VARCHAR(32)    NOT NULL, 
    PRE_TYPE_UK_UUID      VARCHAR(32)    NOT NULL, 
    RELATION_REFERENCE    VARCHAR(20)    NULL   
);

ALTER TABLE TYPE_UK_REL
    ADD CONSTRAINT FK_TYPE_UK_REL_BASE_TYPE_UK_UU FOREIGN KEY (BASE_TYPE_UK_UUID)
        REFERENCES TYPE_UK_MASTER (TYPE_UK_UUID);

ALTER TABLE TYPE_UK_REL
    ADD CONSTRAINT FK_TYPE_UK_REL_PRE_TYPE_UK_UUI FOREIGN KEY (PRE_TYPE_UK_UUID)
        REFERENCES TYPE_UK_MASTER (TYPE_UK_UUID);

CREATE TABLE USER_KNOWLEDGE(
    USER_UUID      VARCHAR(32)    NOT NULL, 
    UK_UUID        VARCHAR(32)    NULL, 
    UK_MASTERY     FLOAT          NULL, 
    UPDATE_DATE    TIMESTAMP      NULL, 
    CONSTRAINT pk_USER_KNOWLEDGE PRIMARY KEY (USER_UUID, UK_UUID)
);

ALTER TABLE USER_KNOWLEDGE
    ADD CONSTRAINT FK_USER_KNOWLEDGE_UK_UUID_UK_M FOREIGN KEY (UK_UUID)
        REFERENCES UK_MASTER (UK_UUID);

ALTER TABLE USER_KNOWLEDGE
    ADD CONSTRAINT FK_USER_KNOWLEDGE_USER_UUID_US FOREIGN KEY (USER_UUID)
        REFERENCES USER_MASTER (USER_UUID);

CREATE TABLE USER_EMBEDDING(
    USER_UUID         VARCHAR(32)    NOT NULL, 
    USER_EMBEDDING    LONG     NULL, 
    UPDATE_DATE       TIMESTAMP      NULL, 
    CONSTRAINT pk_USER_EMBEDDING PRIMARY KEY (USER_UUID)
);

ALTER TABLE USER_EMBEDDING
    ADD CONSTRAINT FK_USER_EMBEDDING_USER_UUID_US FOREIGN KEY (USER_UUID)
        REFERENCES USER_MASTER (USER_UUID);

CREATE TABLE USER_EXAM_CURRICULUM_LOG(
    CARD_ID             VARCHAR(32)     NOT NULL, 
    CARD_TYPE           VARCHAR(32)     NOT NULL, 
    CARD_TITLE          VARCHAR(200)    NULL, 
    USER_UUID           VARCHAR(32)     NOT NULL, 
    RECOMMENDED_DATE    TIMESTAMP       NOT NULL, 
    SECTION_ID          VARCHAR(32)     NULL, 
    TYPE_UK_UUID        VARCHAR(32)     NULL, 
    CARD_SEQUENCE       INT             NOT NULL, 
    CONSTRAINT pk_USER_EXAM_CURRICULUM_LOG PRIMARY KEY (CARD_ID)
);


ALTER TABLE USER_EXAM_CURRICULUM_LOG
    ADD CONSTRAINT FK_USER_EXAM_CURRICULUM_LOG_US FOREIGN KEY (USER_UUID)
        REFERENCES USER_MASTER (USER_UUID);

ALTER TABLE USER_EXAM_CURRICULUM_LOG
    ADD CONSTRAINT FK_USER_EXAM_CURRICULUM_LOG_TY FOREIGN KEY (TYPE_UK_UUID)
        REFERENCES TYPE_UK_MASTER (TYPE_UK_UUID);

CREATE TABLE CARD_PROBLEM_MAPPING(
    MAPPING_ID       VARCHAR(32)    NOT NULL, 
    CARD_ID          VARCHAR(32)    NOT NULL, 
    UK_UUID          VARCHAR(32)    NOT NULL, 
    DIFFICULTY       VARCHAR(32)    NOT NULL, 
    IS_CORRECT       VARCHAR(32)    NULL, 
    PROB_SEQUENCE    INT            NOT NULL, 
    CONSTRAINT pk_CARD_PROBLEM_MAPPING PRIMARY KEY (MAPPING_ID)
);

ALTER TABLE CARD_PROBLEM_MAPPING
    ADD CONSTRAINT FK_CARD_PROBLEM_MAPPING_CARD_I FOREIGN KEY (CARD_ID)
        REFERENCES USER_EXAM_CURRICULUM_LOG (CARD_ID);

ALTER TABLE CARD_PROBLEM_MAPPING
    ADD CONSTRAINT FK_CARD_PROBLEM_MAPPING_UK_UUI FOREIGN KEY (UK_UUID)
        REFERENCES UK_MASTER (UK_UUID);

CREATE TABLE PROBLEM_DEMO(
    PROB_UUID         VARCHAR(32)    NOT NULL, 
    UK_UUID           VARCHAR(32)    NULL, 
    CHAPTER           VARCHAR(32)    NULL, 
    DIFFICULTY        VARCHAR(32)    NULL, 
    PROB_TYPE_UUID    VARCHAR(32)    NULL, 
    CONSTRAINT pk_PROBLEM_DEMO PRIMARY KEY (PROB_UUID)
);


ALTER TABLE PROBLEM_DEMO
    ADD CONSTRAINT FK_PROBLEM_DEMO_UK_UUID_UK_MAS FOREIGN KEY (UK_UUID)
        REFERENCES UK_MASTER (UK_UUID);

ALTER TABLE PROBLEM_DEMO
    ADD CONSTRAINT FK_PROBLEM_DEMO_CHAPTER_CURRIC FOREIGN KEY (CHAPTER)
        REFERENCES CURRICULUM_MASTER (CURRICULUM_ID);

ALTER TABLE PROBLEM_DEMO
    ADD CONSTRAINT FK_PROBLEM_DEMO_PROB_TYPE_UUID FOREIGN KEY (PROB_TYPE_UUID)
        REFERENCES TYPE_UK_MASTER (TYPE_UK_UUID);

CREATE TABLE PROBLEM_SET_DEMO(
    PROB_SET_UUID    VARCHAR(32)    NOT NULL, 
    PROB1_UUID       VARCHAR(32)    NULL, 
    PROB2_UUID       VARCHAR(32)    NULL, 
    PROB3_UUID       VARCHAR(32)    NULL, 
    CHAPTER          VARCHAR(32)    NULL, 
    PART             VARCHAR(20)    NULL, 
    CONSTRAINT pk_PROBLEM_SET_DEMO PRIMARY KEY (PROB_SET_UUID)
);


ALTER TABLE PROBLEM_SET_DEMO
    ADD CONSTRAINT FK_PROBLEM_SET_DEMO_PROB1_UUID FOREIGN KEY (PROB1_UUID)
        REFERENCES PROBLEM_DEMO (PROB_UUID);

ALTER TABLE PROBLEM_SET_DEMO
    ADD CONSTRAINT FK_PROBLEM_SET_DEMO_PROB2_UUID FOREIGN KEY (PROB2_UUID)
        REFERENCES PROBLEM_DEMO (PROB_UUID);

ALTER TABLE PROBLEM_SET_DEMO
    ADD CONSTRAINT FK_PROBLEM_SET_DEMO_PROB3_UUID FOREIGN KEY (PROB3_UUID)
        REFERENCES PROBLEM_DEMO (PROB_UUID);
        
------Contents Part------------
--DROP TABLE DIAGNOSIS_PROBLEM;
--DROP TABLE TEST_PROBLEM;
--DROP TABLE PROBLEM_CHOICE;
--DROP TABLE PROBLEM_UK_REL;
--DROP TABLE PROBLEM;

CREATE TABLE ETEST.PROBLEM (
	PROB_ID NUMBER(19) NOT NULL,
	ANSWER_TYPE VARCHAR(50 CHAR),
	CATEGORY VARCHAR(20 CHAR),
	CREATE_DATE TIMESTAMP(6),
	CREATOR_ID VARCHAR(32 CHAR),
	DIFFICULTY VARCHAR(20 CHAR),
	EDIT_DATE TIMESTAMP(6),
	EDITOR_ID VARCHAR(255 CHAR),
	IMG_SRC VARCHAR(256 CHAR),
	INTENTION VARCHAR(100 CHAR),
	PART VARCHAR(100 CHAR),
	QUESTION VARCHAR(4000 CHAR),
	SOLUTION VARCHAR(4000 CHAR),
	SOURCE VARCHAR(100 CHAR),
	TIME_RECOMMENDATION VARCHAR(255 CHAR),
	VALIDATE_DATE TIMESTAMP(6),
	VALIDATOR_ID VARCHAR(32 CHAR)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.PROBLEM_UK_REL (
	PROB_ID NUMBER(19) NOT NULL,
	UK_UUID VARCHAR(255 CHAR) NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.PROBLEM_CHOICE (
	CHOICE_NUM NUMBER(19) NOT NULL,
	PROB_ID NUMBER(19) NOT NULL,
	TEXT VARCHAR(256 CHAR),
	UK_UUID VARCHAR(255 CHAR)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.TEST_PROBLEM (
	PROB_ID NUMBER(19) NOT NULL,
	SEQUENCE NUMBER(19),
	SET_NUM NUMBER(19)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.DIAGNOSIS_PROBLEM (
	PROB_ID NUMBER(19) NOT NULL,
	SET_NUM NUMBER(19)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE UNIQUE INDEX ETEST.KOFIA_CON245200599 ON ETEST.DIAGNOSIS_PROBLEM (
	PROB_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;


CREATE UNIQUE INDEX ETEST.KOFIA_CON245400126 ON ETEST.PROBLEM (
	PROB_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;


CREATE UNIQUE INDEX ETEST.KOFIA_CON245700648 ON ETEST.PROBLEM_CHOICE (
	CHOICE_NUM ASC,
	PROB_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;


CREATE UNIQUE INDEX ETEST.KOFIA_CON246000644 ON ETEST.PROBLEM_UK_REL (
	PROB_ID ASC,
	UK_UUID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;


CREATE UNIQUE INDEX ETEST.KOFIA_CON246200749 ON ETEST.TEST_PROBLEM (
	PROB_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;




ALTER TABLE DIAGNOSIS_PROBLEM ADD CONSTRAINT KOFIA_CON245200599
PRIMARY KEY (
	PROB_ID
);


ALTER TABLE PROBLEM ADD CONSTRAINT KOFIA_CON245400126
PRIMARY KEY (
	PROB_ID
);


ALTER TABLE PROBLEM_CHOICE ADD CONSTRAINT KOFIA_CON245700648
PRIMARY KEY (
	CHOICE_NUM,
	PROB_ID
);


ALTER TABLE PROBLEM_UK_REL ADD CONSTRAINT KOFIA_CON246000644
PRIMARY KEY (
	PROB_ID,
	UK_UUID
);


ALTER TABLE TEST_PROBLEM ADD CONSTRAINT KOFIA_CON246200749
PRIMARY KEY (
	PROB_ID
);



ALTER TABLE PROBLEM_UK_REL ADD CONSTRAINT KOFIA_CON_FK_PROB_UK_REL_RPOB
FOREIGN KEY (PROB_ID) REFERENCES PROBLEM(PROB_ID) ON DELETE CASCADE;

ALTER TABLE PROBLEM_UK_REL ADD CONSTRAINT KOFIA_CON_FK_PROB_UK_REL_UK
FOREIGN KEY (UK_UUID) REFERENCES UK_MASTER(UK_UUID) ON DELETE CASCADE;

ALTER TABLE PROBLEM_CHOICE ADD CONSTRAINT KOFIA_CON_FK_PROB_CHOICE_PROB
FOREIGN KEY (PROB_ID) REFERENCES PROBLEM(PROB_ID) ON DELETE CASCADE;

ALTER TABLE PROBLEM_CHOICE ADD CONSTRAINT KOFIA_CON_FK_PROB_CHOICE_UK
FOREIGN KEY (UK_UUID) REFERENCES UK_MASTER(UK_UUID) ON DELETE CASCADE;

ALTER TABLE DIAGNOSIS_PROBLEM ADD CONSTRAINT KOFIA_CON_FK_DIAG_PROB_RPOB
FOREIGN KEY (PROB_ID) REFERENCES PROBLEM(PROB_ID) ON DELETE CASCADE;

ALTER TABLE TEST_PROBLEM ADD CONSTRAINT KOFIA_CON_FK_TEST_PROB_RPOB
FOREIGN KEY (PROB_ID) REFERENCES PROBLEM(PROB_ID) ON DELETE CASCADE;






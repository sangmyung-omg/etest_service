CREATE TABLE ETEST.ARTICLE (
	ARTICLE_ID NUMBER NOT NULL,
	ARTICLE_URL VARCHAR(32) NOT NULL,
	TITLE VARCHAR(128) NOT NULL,
	CREATE_DATE TIMESTAMP(6) NOT NULL,
	CREATOR_ID VARCHAR(32) NOT NULL,
	DESCRIPTION VARCHAR(10000) NOT NULL,
	IMG_SRC VARCHAR(32) NOT NULL,
	SOURCE VARCHAR(128)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.ARTICLE_BOOKMARK (
	USER_UUID VARCHAR(36) NOT NULL,
	ARTICLE_ID NUMBER NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.ARTICLE_UK_REL (
	ARTICLE_ID NUMBER NOT NULL,
	UK_ID NUMBER NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.BATCH_JOB_EXECUTION (
	JOB_EXECUTION_ID NUMBER(19) NOT NULL,
	VERSION NUMBER(19),
	JOB_INSTANCE_ID NUMBER(19) NOT NULL,
	CREATE_TIME TIMESTAMP(6) NOT NULL,
	START_TIME TIMESTAMP(6) DEFAULT NULL,
	END_TIME TIMESTAMP(6) DEFAULT NULL,
	STATUS VARCHAR(10 CHAR),
	EXIT_CODE VARCHAR(2500 CHAR),
	EXIT_MESSAGE VARCHAR(2500 CHAR),
	LAST_UPDATED TIMESTAMP(6),
	JOB_CONFIGURATION_LOCATION VARCHAR(2500 CHAR)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.BATCH_JOB_EXECUTION_CONTEXT (
	JOB_EXECUTION_ID NUMBER(19) NOT NULL,
	SHORT_CONTEXT VARCHAR(2500 CHAR) NOT NULL,
	SERIALIZED_CONTEXT CLOB
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
LOB (SERIALIZED_CONTEXT) STORE AS ETEST_LOB1864700
	( TABLESPACE USR ENABLE STORAGE IN ROW  )
NOPARALLEL;

CREATE TABLE ETEST.BATCH_JOB_EXECUTION_PARAMS (
	JOB_EXECUTION_ID NUMBER(19) NOT NULL,
	TYPE_CD VARCHAR(6 CHAR) NOT NULL,
	KEY_NAME VARCHAR(100 CHAR) NOT NULL,
	STRING_VAL VARCHAR(250 CHAR),
	DATE_VAL TIMESTAMP(6) DEFAULT NULL,
	LONG_VAL NUMBER(19),
	DOUBLE_VAL NUMBER,
	IDENTIFYING CHAR(1) NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.BATCH_JOB_INSTANCE (
	JOB_INSTANCE_ID NUMBER(19) NOT NULL,
	VERSION NUMBER(19),
	JOB_NAME VARCHAR(100 CHAR) NOT NULL,
	JOB_KEY VARCHAR(32 CHAR) NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.BATCH_STEP_EXECUTION (
	STEP_EXECUTION_ID NUMBER(19) NOT NULL,
	VERSION NUMBER(19) NOT NULL,
	STEP_NAME VARCHAR(100 CHAR) NOT NULL,
	JOB_EXECUTION_ID NUMBER(19) NOT NULL,
	START_TIME TIMESTAMP(6) NOT NULL,
	END_TIME TIMESTAMP(6) DEFAULT NULL,
	STATUS VARCHAR(10 CHAR),
	COMMIT_COUNT NUMBER(19),
	READ_COUNT NUMBER(19),
	FILTER_COUNT NUMBER(19),
	WRITE_COUNT NUMBER(19),
	READ_SKIP_COUNT NUMBER(19),
	WRITE_SKIP_COUNT NUMBER(19),
	PROCESS_SKIP_COUNT NUMBER(19),
	ROLLBACK_COUNT NUMBER(19),
	EXIT_CODE VARCHAR(2500 CHAR),
	EXIT_MESSAGE VARCHAR(2500 CHAR),
	LAST_UPDATED TIMESTAMP(6)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.BATCH_STEP_EXECUTION_CONTEXT (
	STEP_EXECUTION_ID NUMBER(19) NOT NULL,
	SHORT_CONTEXT VARCHAR(2500 CHAR) NOT NULL,
	SERIALIZED_CONTEXT CLOB
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
LOB (SERIALIZED_CONTEXT) STORE AS ETEST_LOB1864300
	( TABLESPACE USR ENABLE STORAGE IN ROW  )
NOPARALLEL;

CREATE TABLE ETEST.BOOK (
	BOOK_ID NUMBER NOT NULL,
	BOOK_SRC VARCHAR(32) NOT NULL,
	TITLE VARCHAR(128) NOT NULL,
	CREATE_DATE TIMESTAMP(6) NOT NULL,
	IMG_SRC VARCHAR(32) NOT NULL,
	DESCRIPTION VARCHAR(1024) NOT NULL,
	CODE_SET VARCHAR(512),
	CREATOR_ID VARCHAR(128)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.BOOK_BOOKMARK (
	USER_UUID VARCHAR(36) NOT NULL,
	BOOK_ID NUMBER NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.BOOK_HIT (
	BOOK_ID NUMBER NOT NULL,
	HIT NUMBER NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.CS_FAQ (
	FAQ_ID NUMBER NOT NULL,
	FAQ_TITLE VARCHAR(100),
	FAQ_CONTENT VARCHAR(1000)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.CS_INQUIRY (
	INQUIRY_ID NUMBER NOT NULL,
	INQUIRY_STATUS VARCHAR(100),
	INQUIRY_TITLE VARCHAR(100),
	INQUIRY_TYPE VARCHAR(100),
	INQUIRY_CONTENT VARCHAR(100),
	INQUIRY_URL VARCHAR(512),
	INQUIRY_ANSWER VARCHAR(2048),
	USER_UUID VARCHAR(36) NOT NULL,
	CREATE_DATE TIMESTAMP(6),
	INQUIRY_ANSWER_TIME TIMESTAMP(6),
	ADMIN_UUID VARCHAR(36)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.CS_INQUIRY_FILE (
	INQUIRY_FILE_ID NUMBER NOT NULL,
	INQUIRY_FILE_URL VARCHAR(100) NOT NULL,
	INQUIRY_FILE_TYPE VARCHAR(100),
	INQUIRY_ID NUMBER,
	INQUIRY_FILE_SIZE NUMBER,
	INQUIRY_FILE_NAME VARCHAR(255)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.CS_NOTICE (
	NOTICE_ID NUMBER NOT NULL,
	NOTICE_TITLE VARCHAR(100),
	NOTICE_DATE TIMESTAMP(6),
	NOTICE_CONTENT VARCHAR(2048)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.DIAGNOSIS_CURRICULUM (
	CURRICULUM_ID NUMBER NOT NULL,
	CHAPTER VARCHAR(100) NOT NULL,
	SECTION VARCHAR(100) NOT NULL,
	SUB_SECTION VARCHAR(100) NOT NULL,
	SUBJECT VARCHAR(100),
	SET_TYPE CHAR(1),
	STATUS VARCHAR(20) NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.DIAGNOSIS_PROBLEM (
	PROB_ID NUMBER NOT NULL,
	CURRICULUM_ID NUMBER NOT NULL,
	ORDER_NUM NUMBER
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;
COMMENT ON TABLE ETEST.DIAGNOSIS_PROBLEM IS '문제와 이미지 파일 경로의 상관 관계를 저장';
COMMENT ON COLUMN DIAGNOSIS_PROBLEM.PROB_ID IS '문제 ID';
COMMENT ON COLUMN DIAGNOSIS_PROBLEM.CURRICULUM_ID IS '분류 체계 ID (임시로 커리큘럼에)';
COMMENT ON COLUMN DIAGNOSIS_PROBLEM.ORDER_NUM IS '문제 순서';

CREATE TABLE ETEST.DIAGNOSIS_REPORT (
	DIAGNOSIS_ID VARCHAR(36) NOT NULL,
	USER_UUID VARCHAR(50) NOT NULL,
	GI_SCORE NUMBER,
	RISK_SCORE NUMBER,
	RISK_PROFILE_SCORE NUMBER,
	RISK_TRACING_SCORE NUMBER,
	RISK_LEVEL_SCORE NUMBER,
	RISK_CAPA_SCORE NUMBER,
	INVEST_SCORE NUMBER,
	INVEST_PROFILE_SCORE NUMBER,
	INVEST_TRACING_SCORE NUMBER,
	KNOWLEDGE_SCORE NUMBER,
	KNOWLEDGE_COMMON_SCORE NUMBER,
	KNOWLEDGE_TYPE_SCORE NUMBER,
	KNOWLEDGE_CHANGE_SCORE NUMBER,
	KNOWLEDGE_SELL_SCORE NUMBER,
	AVG_UK_MASTERY NUMBER,
	USER_MBTI VARCHAR(5),
	INVEST_ITEM_NUM NUMBER,
	STOCK_RATIO NUMBER,
	DIAGNOSIS_DATE TIMESTAMP(6) NOT NULL,
	RECOMMEND_BASIC_LIST VARCHAR(500),
	RECOMMEND_TYPE_LIST VARCHAR(500),
	RECOMMEND_ADVANCED_LIST VARCHAR(500)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.ERROR_REPORT (
	ERROR_ID NUMBER NOT NULL,
	PROB_ID NUMBER NOT NULL,
	USER_UUID VARCHAR(36) NOT NULL,
	REPORT_TYPE VARCHAR(32) NOT NULL,
	REPORT_TEXT VARCHAR(1024)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.HASHTAG (
	HASHTAG_ID NUMBER NOT NULL,
	NAME VARCHAR(128)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.HIT_STAT (
	STAT_DATE DATE NOT NULL,
	HIT_STAT_ID NUMBER NOT NULL,
	VIDEO_HIT NUMBER,
	BOOK_HIT NUMBER,
	WIKI_HIT NUMBER,
	ARTICLE_HIT NUMBER
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.META_CODE_MASTER (
	META_CODE_ID VARCHAR(32) NOT NULL,
	DOMAIN VARCHAR(100) NOT NULL,
	SEQUENCE NUMBER,
	CODE VARCHAR(100) NOT NULL,
	CODE_NAME VARCHAR(256) NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.MINITEST_REPORT (
	MINITEST_ID VARCHAR(36) NOT NULL,
	USER_UUID VARCHAR(36) NOT NULL,
	AVG_UK_MASTERY NUMBER NOT NULL,
	SET_NUM NUMBER NOT NULL,
	CORRECT_NUM NUMBER,
	WRONG_NUM NUMBER,
	DUNNO_NUM NUMBER,
	MINITEST_DATE TIMESTAMP(6) NOT NULL,
	MINITEST_UK_MASTERY VARCHAR(3000)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.PART (
	PART_ID NUMBER NOT NULL,
	PART_NAME VARCHAR(100) NOT NULL,
	ORDER_NUM NUMBER NOT NULL,
	PROBLEM_COUNT NUMBER NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.PROBLEM (
	PROB_ID NUMBER NOT NULL,
	ANSWER_TYPE VARCHAR(50) NOT NULL,
	QUESTION VARCHAR(40000) NOT NULL,
	SOLUTION VARCHAR(40000) NOT NULL,
	DIFFICULTY VARCHAR(20),
	CATEGORY VARCHAR(20),
	IMG_SRC VARCHAR(256),
	TIME_RECOMMENDATION NUMBER,
	CREATOR_ID VARCHAR(32),
	CREATE_DATE TIMESTAMP(6),
	VALIDATOR_ID VARCHAR(32),
	VALIDATE_DATE TIMESTAMP(6),
	EDITOR_ID VARCHAR(32),
	EDIT_DATE TIMESTAMP(6),
	SOURCE VARCHAR(512),
	INTENTION VARCHAR(100),
	QUESTION_INITIAL VARCHAR(40000),
	SOLUTION_INITIAL VARCHAR(40000)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;
COMMENT ON TABLE ETEST.PROBLEM IS '문제 내용을 저장';
COMMENT ON COLUMN PROBLEM.PROB_ID IS '문제 ID';
COMMENT ON COLUMN PROBLEM.ANSWER_TYPE IS '답안 유형';
COMMENT ON COLUMN PROBLEM.QUESTION IS '질문';
COMMENT ON COLUMN PROBLEM.SOLUTION IS '해설';
COMMENT ON COLUMN PROBLEM.DIFFICULTY IS '문제 난이도';
COMMENT ON COLUMN PROBLEM.CATEGORY IS '분류';
COMMENT ON COLUMN PROBLEM.IMG_SRC IS '이미지 경로';
COMMENT ON COLUMN PROBLEM.TIME_RECOMMENDATION IS '적정 풀이 시간';
COMMENT ON COLUMN PROBLEM.CREATOR_ID IS '생성자';
COMMENT ON COLUMN PROBLEM.CREATE_DATE IS '생성 날짜';
COMMENT ON COLUMN PROBLEM.VALIDATOR_ID IS '검수자';
COMMENT ON COLUMN PROBLEM.VALIDATE_DATE IS '검수 날짜';
COMMENT ON COLUMN PROBLEM.EDITOR_ID IS '수정자';
COMMENT ON COLUMN PROBLEM.EDIT_DATE IS '수정 날짜';
COMMENT ON COLUMN PROBLEM.SOURCE IS '문제 출처';
COMMENT ON COLUMN PROBLEM.INTENTION IS '출제 의도';
COMMENT ON COLUMN PROBLEM.QUESTION_INITIAL IS '질문 초성';
COMMENT ON COLUMN PROBLEM.SOLUTION_INITIAL IS '해설 초성';

CREATE TABLE ETEST.PROBLEM_CHOICE (
	PROB_ID NUMBER NOT NULL,
	CHOICE_NUM NUMBER NOT NULL,
	UK_ID NUMBER,
	CHOICE_SCORE NUMBER
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;
COMMENT ON TABLE ETEST.PROBLEM_CHOICE IS '문제와 이미지 파일 경로의 상관 관계를 저장';
COMMENT ON COLUMN PROBLEM_CHOICE.PROB_ID IS '문제 ID';
COMMENT ON COLUMN PROBLEM_CHOICE.CHOICE_NUM IS '문제 보기 번호';
COMMENT ON COLUMN PROBLEM_CHOICE.UK_ID IS 'UK_ID';

CREATE TABLE ETEST.PROBLEM_UK_REL (
	PROB_ID NUMBER NOT NULL,
	UK_ID NUMBER NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;
COMMENT ON TABLE ETEST.PROBLEM_UK_REL IS '문제와 지식 추적 UK의 상관 관계를 저장';
COMMENT ON COLUMN PROBLEM_UK_REL.PROB_ID IS '문제 ID';
COMMENT ON COLUMN PROBLEM_UK_REL.UK_ID IS 'UK_ID';

CREATE TABLE ETEST.STATEMENT (
	STATEMENT_ID VARCHAR(100) NOT NULL,
	USER_ID VARCHAR(100) NOT NULL,
	ACTION_TYPE VARCHAR(100) NOT NULL,
	SOURCE_TYPE VARCHAR(100) NOT NULL,
	SOURCE_ID VARCHAR(100),
	TIMESTAMP VARCHAR(100) NOT NULL,
	PLATFORM VARCHAR(100),
	CURSOR_TIME NUMBER,
	IS_CORRECT NUMBER,
	IS_DELETED NUMBER,
	USER_ANSWER VARCHAR(500),
	DURATION VARCHAR(100),
	EXTENSION VARCHAR(2000),
	STATEMENT_DATE TIMESTAMP(6)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.TEST_PROBLEM (
	PROB_ID NUMBER NOT NULL,
	PART_ID NUMBER,
	SUBJECT VARCHAR(100),
	STATUS VARCHAR(20) NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;
COMMENT ON TABLE ETEST.TEST_PROBLEM IS '문제와 이미지 파일 경로의 상관 관계를 저장';
COMMENT ON COLUMN TEST_PROBLEM.PROB_ID IS '문제 ID';

CREATE TABLE ETEST.UK_MASTER (
	UK_ID NUMBER NOT NULL,
	UK_NAME VARCHAR(200) NOT NULL,
	UK_DESCRIPTION VARCHAR(1000),
	TRAIN_UNSEEN CHAR(1) NOT NULL,
	CURRICULUM_ID VARCHAR(255 CHAR),
	PART VARCHAR(50),
	EXTERNAL_LINK VARCHAR(2000)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.UK_REL (
	BASE_UK_ID NUMBER NOT NULL,
	PRE_UK_ID NUMBER NOT NULL,
	RELATION_REFERENCE VARCHAR(32)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.USER_KNOWLEDGE (
	USER_UUID VARCHAR(36) NOT NULL,
	UK_MASTERY NUMBER,
	UPDATE_DATE TIMESTAMP(6),
	UK_ID VARCHAR(255 CHAR) NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.USER_MASTER (
	USER_UUID VARCHAR(36) NOT NULL,
	USER_TYPE VARCHAR(100),
	EMAIL VARCHAR(100) DEFAULT 'test@test.com' NOT NULL,
	GENDER VARCHAR(100) DEFAULT 'male' NOT NULL,
	PROVIDER VARCHAR(100) DEFAULT 'naver' NOT NULL,
	ROLE VARCHAR(100) DEFAULT 'USER' NOT NULL,
	BIRTHDAY TIMESTAMP(6) DEFAULT '2021-03-03' NOT NULL,
	COLLECT_INFO VARCHAR(10) DEFAULT '0' NOT NULL,
	SERVICE_AGREEMENT VARCHAR(10) DEFAULT '1' NOT NULL,
	OLDER_THAN_14 VARCHAR(10) DEFAULT '1' NOT NULL,
	ACCOUNT_ACTIVE VARCHAR(10) DEFAULT '1' NOT NULL,
	EVENT_SMS_AGREEMENT VARCHAR(10) DEFAULT '1' NOT NULL,
	PROVIDER_ID VARCHAR(1000) DEFAULT '1234' NOT NULL,
	PASSWORD VARCHAR(1000) DEFAULT '1234' NOT NULL,
	CREATE_DATE TIMESTAMP(6),
	NICK_NAME VARCHAR(200) DEFAULT '-' NOT NULL,
	NAME VARCHAR(100)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.VIDEO (
	VIDEO_ID VARCHAR(32) NOT NULL,
	VIDEO_SRC VARCHAR(256) NOT NULL,
	ORIGINAL_FILE_SRC VARCHAR(256),
	TITLE VARCHAR(512) NOT NULL,
	IMG_SRC VARCHAR(32) NOT NULL,
	CURRICULUM_ID NUMBER NOT NULL,
	TOTAL_TIME NUMBER NOT NULL,
	START_TIME NUMBER,
	END_TIME NUMBER,
	CREATE_DATE DATE,
	REGISTER_DATE DATE,
	END_DATE DATE,
	SEQUENCE NUMBER NOT NULL,
	CODE_SET VARCHAR(512)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.VIDEO_BOOKMARK (
	USER_UUID VARCHAR(36) NOT NULL,
	VIDEO_ID VARCHAR(32) NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.VIDEO_CURRICULUM (
	CURRICULUM_ID NUMBER NOT NULL,
	SUBJECT VARCHAR(128) NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.VIDEO_HASHTAG (
	HASHTAG_ID NUMBER NOT NULL,
	VIDEO_ID VARCHAR(32)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.VIDEO_HIT (
	HIT NUMBER NOT NULL,
	VIDEO_ID VARCHAR(32)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.VIDEO_UK_REL (
	UK_ID NUMBER NOT NULL,
	VIDEO_ID VARCHAR(32)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.WIKI (
	WIKI_ID NUMBER NOT NULL,
	TITLE VARCHAR(128) NOT NULL,
	CREATE_DATE TIMESTAMP(6) NOT NULL,
	CREATOR_ID VARCHAR(32) NOT NULL,
	DESCRIPTION VARCHAR(10000) NOT NULL,
	SUMMARY VARCHAR(256) NOT NULL,
	SOURCE VARCHAR(128)
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.WIKI_BOOKMARK (
	USER_UUID VARCHAR(36) NOT NULL,
	WIKI_ID NUMBER NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE TABLE ETEST.WIKI_UK_REL (
	WIKI_ID NUMBER NOT NULL,
	UK_ID NUMBER NOT NULL
)
TABLESPACE USR
PCTFREE 10
INITRANS 2
STORAGE (
	MAXEXTENTS UNLIMITED
)
LOGGING
NOPARALLEL;

CREATE UNIQUE INDEX ETEST.PK_ARTICLE ON ETEST.ARTICLE (
	ARTICLE_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_ARTICLE_BOOKMARK ON ETEST.ARTICLE_BOOKMARK (
	USER_UUID ASC,
	ARTICLE_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_ARTICLE_UK_REL ON ETEST.ARTICLE_UK_REL (
	ARTICLE_ID ASC,
	UK_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1310900784 ON ETEST.BATCH_JOB_EXECUTION (
	JOB_EXECUTION_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1313000184 ON ETEST.BATCH_JOB_EXECUTION_CONTEXT (
	JOB_EXECUTION_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1310400051 ON ETEST.BATCH_JOB_INSTANCE (
	JOB_INSTANCE_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.JOB_INST_UN ON ETEST.BATCH_JOB_INSTANCE (
	JOB_NAME ASC,
	JOB_KEY ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1311900252 ON ETEST.BATCH_STEP_EXECUTION (
	STEP_EXECUTION_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1312600476 ON ETEST.BATCH_STEP_EXECUTION_CONTEXT (
	STEP_EXECUTION_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_BOOK ON ETEST.BOOK (
	BOOK_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_BOOK_BOOKMARK ON ETEST.BOOK_BOOKMARK (
	USER_UUID ASC,
	BOOK_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1316500348 ON ETEST.BOOK_HIT (
	BOOK_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_FAQ_ID ON ETEST.CS_FAQ (
	FAQ_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_INQUIRY_ID ON ETEST.CS_INQUIRY (
	INQUIRY_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_NOTICE_ID ON ETEST.CS_NOTICE (
	NOTICE_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1287100143 ON ETEST.DIAGNOSIS_CURRICULUM (
	CURRICULUM_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_DIAGNOSIS_PROBLEM ON ETEST.DIAGNOSIS_PROBLEM (
	PROB_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1320900473 ON ETEST.DIAGNOSIS_REPORT (
	DIAGNOSIS_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_ERROR_REPORT ON ETEST.ERROR_REPORT (
	ERROR_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1305500873 ON ETEST.HASHTAG (
	HASHTAG_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1308600903 ON ETEST.HIT_STAT (
	STAT_DATE ASC,
	HIT_STAT_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1314800322 ON ETEST.META_CODE_MASTER (
	META_CODE_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_MINITEST_REPORT ON ETEST.MINITEST_REPORT (
	MINITEST_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_PART ON ETEST.PART (
	PART_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_PROBLEM ON ETEST.PROBLEM (
	PROB_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1306400760 ON ETEST.PROBLEM_CHOICE (
	PROB_ID ASC,
	CHOICE_NUM ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_STATEMENT_MASTER ON ETEST.STATEMENT (
	STATEMENT_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1302000673 ON ETEST.TEST_PROBLEM (
	PROB_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_UK_MASTER ON ETEST.UK_MASTER (
	UK_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_USER_KNOWLEDGE ON ETEST.USER_KNOWLEDGE (
	USER_UUID ASC,
	UK_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_USER_MASTER ON ETEST.USER_MASTER (
	USER_UUID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1318100934 ON ETEST.VIDEO (
	VIDEO_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.ETEST_CON1319900934 ON ETEST.VIDEO_BOOKMARK (
	USER_UUID ASC,
	VIDEO_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_VIDEO_CURRICULUM ON ETEST.VIDEO_CURRICULUM (
	CURRICULUM_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_WIKI ON ETEST.WIKI (
	WIKI_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_WIKI_BOOKMARK ON ETEST.WIKI_BOOKMARK (
	USER_UUID ASC,
	WIKI_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

CREATE UNIQUE INDEX ETEST.PK_WIKI_UK_REL ON ETEST.WIKI_UK_REL (
	WIKI_ID ASC,
	UK_ID ASC
)
LOGGING
TABLESPACE USR
PCTFREE 10
INITRANS 2;

ALTER TABLE ARTICLE ADD CONSTRAINT PK_ARTICLE
PRIMARY KEY (
	ARTICLE_ID
);

ALTER TABLE ARTICLE_BOOKMARK ADD CONSTRAINT PK_ARTICLE_BOOKMARK
PRIMARY KEY (
	USER_UUID,
	ARTICLE_ID
);

ALTER TABLE ARTICLE_UK_REL ADD CONSTRAINT PK_ARTICLE_UK_REL
PRIMARY KEY (
	ARTICLE_ID,
	UK_ID
);

ALTER TABLE BATCH_JOB_EXECUTION ADD CONSTRAINT ETEST_CON1310900784
PRIMARY KEY (
	JOB_EXECUTION_ID
);

ALTER TABLE BATCH_JOB_EXECUTION_CONTEXT ADD CONSTRAINT ETEST_CON1313000184
PRIMARY KEY (
	JOB_EXECUTION_ID
);

ALTER TABLE BATCH_JOB_INSTANCE ADD CONSTRAINT ETEST_CON1310400051
PRIMARY KEY (
	JOB_INSTANCE_ID
);

ALTER TABLE BATCH_JOB_INSTANCE ADD CONSTRAINT JOB_INST_UN
UNIQUE (
	JOB_NAME,
	JOB_KEY
);

ALTER TABLE BATCH_STEP_EXECUTION ADD CONSTRAINT ETEST_CON1311900252
PRIMARY KEY (
	STEP_EXECUTION_ID
);

ALTER TABLE BATCH_STEP_EXECUTION_CONTEXT ADD CONSTRAINT ETEST_CON1312600476
PRIMARY KEY (
	STEP_EXECUTION_ID
);

ALTER TABLE BOOK ADD CONSTRAINT PK_BOOK
PRIMARY KEY (
	BOOK_ID
);

ALTER TABLE BOOK_BOOKMARK ADD CONSTRAINT PK_BOOK_BOOKMARK
PRIMARY KEY (
	USER_UUID,
	BOOK_ID
);

ALTER TABLE BOOK_HIT ADD CONSTRAINT ETEST_CON1316500348
PRIMARY KEY (
	BOOK_ID
);

ALTER TABLE CS_FAQ ADD CONSTRAINT PK_FAQ_ID
PRIMARY KEY (
	FAQ_ID
);

ALTER TABLE CS_INQUIRY ADD CONSTRAINT PK_INQUIRY_ID
PRIMARY KEY (
	INQUIRY_ID
);

ALTER TABLE CS_NOTICE ADD CONSTRAINT PK_NOTICE_ID
PRIMARY KEY (
	NOTICE_ID
);

ALTER TABLE DIAGNOSIS_CURRICULUM ADD CONSTRAINT ETEST_CON1287100143
PRIMARY KEY (
	CURRICULUM_ID
);

ALTER TABLE DIAGNOSIS_PROBLEM ADD CONSTRAINT PK_DIAGNOSIS_PROBLEM
PRIMARY KEY (
	PROB_ID
);

ALTER TABLE DIAGNOSIS_REPORT ADD CONSTRAINT ETEST_CON1320900473
PRIMARY KEY (
	DIAGNOSIS_ID
);

ALTER TABLE ERROR_REPORT ADD CONSTRAINT PK_ERROR_REPORT
PRIMARY KEY (
	ERROR_ID
);

ALTER TABLE HASHTAG ADD CONSTRAINT ETEST_CON1305500873
PRIMARY KEY (
	HASHTAG_ID
);

ALTER TABLE HIT_STAT ADD CONSTRAINT ETEST_CON1308600903
PRIMARY KEY (
	STAT_DATE,
	HIT_STAT_ID
);

ALTER TABLE META_CODE_MASTER ADD CONSTRAINT ETEST_CON1314800322
PRIMARY KEY (
	META_CODE_ID
);

ALTER TABLE MINITEST_REPORT ADD CONSTRAINT PK_MINITEST_REPORT
PRIMARY KEY (
	MINITEST_ID
);

ALTER TABLE PART ADD CONSTRAINT PK_PART
PRIMARY KEY (
	PART_ID
);

ALTER TABLE PROBLEM ADD CONSTRAINT PK_PROBLEM
PRIMARY KEY (
	PROB_ID
);

ALTER TABLE PROBLEM_CHOICE ADD CONSTRAINT ETEST_CON1306400760
PRIMARY KEY (
	PROB_ID,
	CHOICE_NUM
);

ALTER TABLE STATEMENT ADD CONSTRAINT PK_STATEMENT_MASTER
PRIMARY KEY (
	STATEMENT_ID
);

ALTER TABLE TEST_PROBLEM ADD CONSTRAINT ETEST_CON1302000673
PRIMARY KEY (
	PROB_ID
);

ALTER TABLE UK_MASTER ADD CONSTRAINT PK_UK_MASTER
PRIMARY KEY (
	UK_ID
);

ALTER TABLE USER_KNOWLEDGE ADD CONSTRAINT PK_USER_KNOWLEDGE
PRIMARY KEY (
	USER_UUID,
	UK_ID
);

ALTER TABLE USER_MASTER ADD CONSTRAINT PK_USER_MASTER
PRIMARY KEY (
	USER_UUID
);

ALTER TABLE VIDEO ADD CONSTRAINT ETEST_CON1318100934
PRIMARY KEY (
	VIDEO_ID
);

ALTER TABLE VIDEO_BOOKMARK ADD CONSTRAINT ETEST_CON1319900934
PRIMARY KEY (
	USER_UUID,
	VIDEO_ID
);

ALTER TABLE VIDEO_CURRICULUM ADD CONSTRAINT PK_VIDEO_CURRICULUM
PRIMARY KEY (
	CURRICULUM_ID
);

ALTER TABLE WIKI ADD CONSTRAINT PK_WIKI
PRIMARY KEY (
	WIKI_ID
);

ALTER TABLE WIKI_BOOKMARK ADD CONSTRAINT PK_WIKI_BOOKMARK
PRIMARY KEY (
	USER_UUID,
	WIKI_ID
);

ALTER TABLE WIKI_UK_REL ADD CONSTRAINT PK_WIKI_UK_REL
PRIMARY KEY (
	WIKI_ID,
	UK_ID
);

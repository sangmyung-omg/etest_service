<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration>
<configuration>
    <!-- root log level-->
    <springProperty scope="context" name="SERVICE_LOG_LEVEL" source="logging.level.service"/>
    <!-- log file root path -->
	<property name="LOG_PATH" value="./logs/" />
	<!-- log file name -->
	<property name="LOG_FILE_NAME" value="log" />
	<!-- err log file name -->
	<property name="ERR_LOG_FILE_NAME" value="err_log" />
	<!-- pattern -->
	<property name="LOG_PATTERN" value="%d{HH:mm:ss.SSS} [%-5level] [%thread] [%logger{36}] - %m%n" />
	<!-- max file size (MB) -->
	<property name="MAX_FILE_SIZE" value="20MB" />
	<!-- max history save days (day) -->
	<property name="MAX_SAVE_DAYS" value="28" />

    <!-- Console Appender -->
	<springProfile name="default, dev, prod">
		<!-- Stdout -->
		<appender name="STDOUT"
			class="ch.qos.logback.core.ConsoleAppender">
			<layout class="ch.qos.logback.classic.PatternLayout">
				<Pattern>${LOG_PATTERN}</Pattern>
			</layout>
		</appender>		
	</springProfile>

    <!-- File Appender General-->
	<springProfile name="prod">
		<appender name="FILE_ALL"
			class="ch.qos.logback.core.rolling.RollingFileAppender">
			<!-- 파일경로 설정 -->
			<file>${LOG_PATH}/${LOG_FILE_NAME}.log</file>
			<!-- 출력패턴 설정 -->
			<encoder
				class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<pattern>${LOG_PATTERN}</pattern>
			</encoder>
			<!-- Rolling 정책 -->
			<rollingPolicy
				class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
				<fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<!-- 파일당 최고 용량 kb, mb, gb -->
					<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
				<!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거 -->
				<maxHistory>${MAX_SAVE_DAYS}</maxHistory>
				<!--<MinIndex>1</MinIndex> <MaxIndex>10</MaxIndex> -->
			</rollingPolicy>
		</appender>
	</springProfile>

    <!-- File Appender for Admin -->
    <springProfile name="prod">
		<appender name="FILE_Admin" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${LOG_PATH}/Admin/${LOG_FILE_NAME}.log</file>
			<encoder
				class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<pattern>${LOG_PATTERN}</pattern>
			</encoder>
			<rollingPolicy
				class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<fileNamePattern>${LOG_PATH}/Admin/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
				<maxHistory>${MAX_SAVE_DAYS}</maxHistory>
			</rollingPolicy>
		</appender>
	</springProfile>

    <!-- File Appender for Auth -->
    <springProfile name="prod">
		<appender name="FILE_Auth" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${LOG_PATH}/Auth/${LOG_FILE_NAME}.log</file>
			<encoder
				class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<pattern>${LOG_PATTERN}</pattern>
			</encoder>
			<rollingPolicy
				class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<fileNamePattern>${LOG_PATH}/Auth/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
				<maxHistory>${MAX_SAVE_DAYS}</maxHistory>
			</rollingPolicy>
		</appender>
	</springProfile>

    <!-- File Appender for Auth -->
    <springProfile name="prod">
		<appender name="FILE_Auth" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${LOG_PATH}/Auth/${LOG_FILE_NAME}.log</file>
			<encoder
				class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<pattern>${LOG_PATTERN}</pattern>
			</encoder>
			<rollingPolicy
				class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<fileNamePattern>${LOG_PATH}/Auth/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
				<maxHistory>${MAX_SAVE_DAYS}</maxHistory>
			</rollingPolicy>
		</appender>
	</springProfile>

    <!-- File Appender for Auth -->
    <springProfile name="prod">
		<appender name="FILE_Auth" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${LOG_PATH}/Auth/${LOG_FILE_NAME}.log</file>
			<encoder
				class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<pattern>${LOG_PATTERN}</pattern>
			</encoder>
			<rollingPolicy
				class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<fileNamePattern>${LOG_PATH}/Auth/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
				<maxHistory>${MAX_SAVE_DAYS}</maxHistory>
			</rollingPolicy>
		</appender>
	</springProfile>

    <!-- 에러 따로 모으기 -->
	<springProfile name="prod">
		<appender name="ERROR"
			class="ch.qos.logback.core.rolling.RollingFileAppender">		
			<filter class="ch.qos.logback.classic.filter.LevelFilter">
				<level>error</level>
				<onMatch>ACCEPT</onMatch>
				<onMismatch>DENY</onMismatch>
			</filter>
			<!-- 파일경로 설정 -->
			<file>${LOG_PATH}/${ERR_LOG_FILE_NAME}.log</file>
			<!-- 출력패턴 설정 -->
			<encoder
				class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<pattern>${LOG_PATTERN}</pattern>
			</encoder>
			<!-- Rolling 정책 -->
			<rollingPolicy
				class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
				<fileNamePattern>${LOG_PATH}/${ERR_LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<!-- 파일당 최고 용량 kb, mb, gb -->
					<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
				<!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거 -->
				<maxHistory>${MAX_SAVE_DAYS}</maxHistory>
				<!--<MinIndex>1</MinIndex> <MaxIndex>10</MaxIndex> -->
			</rollingPolicy>
		</appender>
	</springProfile>

    <!-- 기본 log level을 설정한다. -->
	<root level="INFO">
		<springProfile name="default, dev, prod">
			<appender-ref ref="STDOUT" />
		</springProfile>
		<springProfile name="prod">
			<appender-ref ref="FILE_ALL" />
			<appender-ref ref="ERROR" />
		</springProfile>
	</root>

    <!-- KOFIA console logger stdout -->
    <springProfile name="default, dev, prod">
        <logger name="com.tmax.eTest" level="${SERVICE_LOG_LEVEL}" additivity="false">
        <appender-ref ref="STDOUT" />
        </logger>
    </springProfile>

    <!-- KOFIA file logger settings -->
    <springProfile name="prod">
	    <!-- KOFIA general logger -->
        <logger name="com.tmax.eTest" level="${SERVICE_LOG_LEVEL}" additivity="false">
                <appender-ref ref="FILE_ALL" />
                <appender-ref ref="ERROR" />
        </logger>
        <!-- Admin logger -->
        <logger name="com.tmax.eTest.Admin" level="${SERVICE_LOG_LEVEL}" additivity="true">
            <appender-ref ref="FILE_RECOMMEND"/>
        </logger>
        <!-- AnalysisReport logger -->
        <logger name="com.tmax.eTest.AnalysisReport" level="${SERVICE_LOG_LEVEL}" additivity="true">
            <appender-ref ref="FILE_AR"/>
        </logger>
        <!-- AdditionalLearning logger -->
        <logger name="com.tmax.eTest.AdditionalLearning" level="${SERVICE_LOG_LEVEL}" additivity="true">
            <appender-ref ref="FILE_AL"/>
        </logger>
	</springProfile>

</configuration>
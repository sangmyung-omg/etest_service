------- Begin of ETEST.BATCH_JOB_EXECUTION-------

insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (13, 2, 0, TO_DATE('2021/08/26 17:11:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:11:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:11:21', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy281.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:104)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:11:21', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (14, 2, 0, TO_DATE('2021/08/26 17:11:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:11:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:11:41', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:106)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:11:41', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (30, 2, 0, TO_DATE('2021/08/26 17:37:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:37:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:37:40', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:116)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:37:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (6, 2, 0, TO_DATE('2021/08/26 16:52:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:52:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:52:27', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy229.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:100)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 16:52:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (7, 2, 0, TO_DATE('2021/08/26 16:53:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:53:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:53:17', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:101)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 16:53:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (8, 2, 0, TO_DATE('2021/08/26 16:59:51', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:59:51', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:59:51', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'java.lang.ClassCastException: class java.util.Date cannot be cast to class java.sql.Date (java.util.Date is in module java.base of loader ''bootstrap''; java.sql.Date is in module java.sql of loader ''platform'')
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:96)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodI', TO_DATE('2021/08/26 16:59:51', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (11, 2, 0, TO_DATE('2021/08/26 17:10:41', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:10:41', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:10:43', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:104)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:10:43', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (16, 2, 0, TO_DATE('2021/08/26 17:19:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:19:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:19:25', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy281.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:111)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:19:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (41, 2, 0, TO_DATE('2021/08/26 17:51:31', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:51:31', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:51:31', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:51:31', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (64, 2, 0, TO_DATE('2021/08/26 18:07:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:07:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:07:09', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:07:09', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (70, 2, 0, TO_DATE('2021/08/26 18:09:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:09:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:09:58', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:09:58', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (71, 2, 0, TO_DATE('2021/08/26 18:14:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:14:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:14:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:14:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (72, 2, 0, TO_DATE('2021/08/26 18:15:04', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:15:04', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:15:04', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:15:04', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (75, 2, 0, TO_DATE('2021/08/26 18:23:31', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:23:31', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:23:31', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:23:31', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (85, 2, 0, TO_DATE('2021/08/26 18:29:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:29:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:29:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:29:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (86, 2, 2, TO_DATE('2021/08/26 18:30:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:30:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:30:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/26 18:30:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (87, 2, 0, TO_DATE('2021/08/26 18:30:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:30:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:30:58', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:30:58', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (88, 2, 0, TO_DATE('2021/08/26 18:31:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:31:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:31:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:31:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (89, 2, 0, TO_DATE('2021/08/26 18:31:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:31:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:31:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:31:22', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (90, 2, 0, TO_DATE('2021/08/26 18:31:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:31:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:31:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:31:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (91, 2, 0, TO_DATE('2021/08/26 18:32:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:32:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:32:44', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:32:44', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (92, 2, 3, TO_DATE('2021/08/26 18:32:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:32:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:32:51', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/26 18:32:51', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (94, 2, 0, TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (4, 2, 0, TO_DATE('2021/08/26 16:50:43', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:50:43', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:50:43', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:89)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at', TO_DATE('2021/08/26 16:50:43', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (10, 2, 0, TO_DATE('2021/08/26 17:07:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:07:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:07:38', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:103)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:07:38', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (83, 2, 0, TO_DATE('2021/08/26 18:28:49', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:28:49', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:28:49', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:28:49', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (84, 2, 1, TO_DATE('2021/08/26 18:28:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:28:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:28:54', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/26 18:28:54', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (96, 2, 0, TO_DATE('2021/08/26 18:36:07', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:36:07', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:36:07', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:36:07', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (97, 2, 4, TO_DATE('2021/08/26 18:36:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:36:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:36:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/26 18:36:11', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (98, 2, 0, TO_DATE('2021/08/26 18:42:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:42:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:42:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:42:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (99, 2, 0, TO_DATE('2021/08/26 18:43:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:43:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:43:37', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:43:37', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (100, 2, 0, TO_DATE('2021/08/26 18:43:42', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:43:42', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:43:42', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:43:42', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (101, 2, 0, TO_DATE('2021/08/26 18:44:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:44:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (102, 2, 0, TO_DATE('2021/08/26 18:44:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:06', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:44:06', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (103, 2, 0, TO_DATE('2021/08/26 18:44:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:44:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (104, 2, 0, TO_DATE('2021/08/26 18:44:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:44:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (105, 2, 0, TO_DATE('2021/08/26 18:44:32', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:32', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:32', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:44:32', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (106, 2, 0, TO_DATE('2021/08/26 18:44:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:44:38', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:44:38', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (107, 2, 0, TO_DATE('2021/08/26 18:45:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:45:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:45:09', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:45:09', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (108, 2, 0, TO_DATE('2021/08/26 18:46:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:46:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:46:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:46:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (0, 2, 0, TO_DATE('2021/08/26 16:41:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:41:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:41:04', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:93)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repea', TO_DATE('2021/08/26 16:41:04', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (1, 2, 0, TO_DATE('2021/08/26 16:47:42', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:47:42', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:47:42', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:88)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at', TO_DATE('2021/08/26 16:47:42', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (2, 2, 0, TO_DATE('2021/08/26 16:48:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:48:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:48:06', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:88)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at', TO_DATE('2021/08/26 16:48:06', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (3, 2, 0, TO_DATE('2021/08/26 16:48:47', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:48:48', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:48:48', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:88)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at', TO_DATE('2021/08/26 16:48:48', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (12, 2, 0, TO_DATE('2021/08/26 17:11:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:11:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:11:09', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy229.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:104)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:11:09', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (31, 2, 0, TO_DATE('2021/08/26 17:38:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:38:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:38:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/26 17:38:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (36, 2, 0, TO_DATE('2021/08/26 17:45:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:45:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:45:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:45:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (38, 2, 0, TO_DATE('2021/08/26 17:49:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:49:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:49:09', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:49:09', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (40, 2, 0, TO_DATE('2021/08/26 17:51:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:51:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:51:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:51:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (56, 2, 0, TO_DATE('2021/08/26 18:04:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:04:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (58, 2, 0, TO_DATE('2021/08/26 18:04:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:04:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (67, 2, 0, TO_DATE('2021/08/26 18:07:42', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:07:42', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:07:43', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:07:43', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (68, 2, 0, TO_DATE('2021/08/26 18:09:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:09:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:09:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:09:24', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (69, 2, 0, TO_DATE('2021/08/26 18:09:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:09:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:09:44', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:09:44', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (77, 2, 0, TO_DATE('2021/08/26 18:24:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:24:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:24:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:24:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (78, 2, 0, TO_DATE('2021/08/26 18:24:31', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:24:31', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:24:31', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:24:31', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (79, 2, 0, TO_DATE('2021/08/26 18:24:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:24:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:24:44', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:24:44', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (80, 2, 0, TO_DATE('2021/08/26 18:24:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:24:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:24:53', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:24:53', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (81, 2, 0, TO_DATE('2021/08/26 18:26:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:26:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:26:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:26:13', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (82, 2, 0, TO_DATE('2021/08/26 18:26:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:26:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:26:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:26:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (37, 2, 0, TO_DATE('2021/08/26 17:46:56', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:46:56', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:46:56', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:46:56', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (39, 2, 0, TO_DATE('2021/08/26 17:50:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:50:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:50:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:50:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (95, 2, 4, TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'java.lang.ClassCastException: class java.lang.String cannot be cast to class java.sql.Date (java.lang.String is in module java.base of loader ''bootstrap''; java.sql.Date is in module java.sql of loader ''platform'')
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:103)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMe', TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (109, 2, 0, TO_DATE('2021/08/26 18:46:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:46:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:46:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:46:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (110, 2, 5, TO_DATE('2021/08/26 18:46:41', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:46:41', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:46:43', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/26 18:46:43', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (111, 2, 0, TO_DATE('2021/08/26 18:49:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:49:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:49:44', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:49:44', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (112, 2, 6, TO_DATE('2021/08/26 18:49:46', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:49:46', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:49:47', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/26 18:49:47', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (113, 2, 7, TO_DATE('2021/08/26 18:50:07', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:50:07', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:50:07', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/26 18:50:07', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (114, 2, 0, TO_DATE('2021/08/26 18:52:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:52:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:52:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:52:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (115, 2, 8, TO_DATE('2021/08/26 18:52:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:52:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:52:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/26 18:52:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (116, 2, 0, TO_DATE('2021/08/26 18:53:07', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:53:07', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:53:07', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:53:07', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (117, 2, 0, TO_DATE('2021/08/26 18:53:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:53:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:53:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:53:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (118, 2, 0, TO_DATE('2021/08/26 18:53:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:53:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:53:38', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:53:38', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (119, 2, 9, TO_DATE('2021/08/26 18:53:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:53:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:53:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/26 18:53:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (120, 2, 0, TO_DATE('2021/08/26 19:05:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:05:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:05:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:05:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (121, 2, 0, TO_DATE('2021/08/26 19:08:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:08:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:08:38', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:08:38', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (122, 2, 0, TO_DATE('2021/08/26 19:10:51', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:10:51', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:10:51', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:10:51', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (123, 2, 0, TO_DATE('2021/08/26 19:11:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:11:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:11:06', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:11:06', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (124, 2, 0, TO_DATE('2021/08/26 19:12:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:12:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:12:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:12:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (125, 2, 0, TO_DATE('2021/08/26 19:12:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:12:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:12:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:12:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (126, 2, 0, TO_DATE('2021/08/26 19:13:54', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:13:54', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:13:54', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:13:54', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (127, 2, 0, TO_DATE('2021/08/26 19:14:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:14:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:14:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:14:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (128, 2, 0, TO_DATE('2021/08/26 19:15:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:15:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:15:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:15:13', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (129, 2, 0, TO_DATE('2021/08/26 19:16:28', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:16:28', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:16:28', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:16:28', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (130, 2, 0, TO_DATE('2021/08/26 19:17:36', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:17:36', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:17:37', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:17:37', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (131, 2, 0, TO_DATE('2021/08/26 19:18:36', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:18:36', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:18:36', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:18:36', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (132, 2, 0, TO_DATE('2021/08/26 19:18:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:18:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:18:58', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:18:58', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (133, 2, 0, TO_DATE('2021/08/26 19:19:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:19:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:19:06', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:19:06', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (134, 2, 0, TO_DATE('2021/08/26 19:19:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:19:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:19:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:19:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (135, 2, 0, TO_DATE('2021/08/26 19:25:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:25:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:25:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:25:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (136, 2, 0, TO_DATE('2021/08/26 19:26:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:26:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:26:28', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:26:28', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (137, 2, 0, TO_DATE('2021/08/26 19:29:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:29:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:29:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:29:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (138, 2, 0, TO_DATE('2021/08/26 19:30:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:30:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:30:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:30:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (139, 2, 0, TO_DATE('2021/08/26 19:30:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:30:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:30:38', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:30:38', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (140, 2, 0, TO_DATE('2021/08/26 19:30:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:30:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:30:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:30:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (19, 2, 0, TO_DATE('2021/08/26 17:23:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:23:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:23:17', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy229.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:110)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:23:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (20, 2, 0, TO_DATE('2021/08/26 17:23:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:23:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:23:59', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy311.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:110)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:23:59', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (21, 2, 0, TO_DATE('2021/08/26 17:24:29', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:24:29', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:24:30', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:108)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	a', TO_DATE('2021/08/26 17:24:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (22, 2, 0, TO_DATE('2021/08/26 17:25:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:25:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:25:59', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:108)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	a', TO_DATE('2021/08/26 17:25:59', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (23, 2, 0, TO_DATE('2021/08/26 17:26:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:26:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:26:17', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:108)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	a', TO_DATE('2021/08/26 17:26:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (24, 2, 0, TO_DATE('2021/08/26 17:27:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:27:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:27:59', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:106)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:27:59', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (5, 2, 0, TO_DATE('2021/08/26 16:51:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:51:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:51:37', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:99)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repea', TO_DATE('2021/08/26 16:51:37', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (9, 2, 0, TO_DATE('2021/08/26 17:02:46', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:02:46', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:02:48', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:103)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:02:48', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (25, 2, 0, TO_DATE('2021/08/26 17:31:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:31:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:31:55', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:105)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:31:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (26, 2, 0, TO_DATE('2021/08/26 17:32:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:32:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:32:13', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy229.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:106)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:32:13', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (27, 2, 0, TO_DATE('2021/08/26 17:33:33', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:33:33', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:33:33', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy281.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:107)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:33:33', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (32, 2, 0, TO_DATE('2021/08/26 17:39:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:39:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:39:09', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:39:09', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (33, 2, 0, TO_DATE('2021/08/26 17:39:56', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:39:56', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:39:56', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:39:56', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (35, 2, 0, TO_DATE('2021/08/26 17:42:46', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:42:46', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:42:46', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:42:46', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (51, 2, 0, TO_DATE('2021/08/26 18:01:34', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:01:34', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:01:34', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:01:34', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (52, 2, 0, TO_DATE('2021/08/26 18:02:36', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:02:36', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:02:36', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:02:36', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (54, 2, 0, TO_DATE('2021/08/26 18:04:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:04:11', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (55, 2, 0, TO_DATE('2021/08/26 18:04:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:04:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (57, 2, 0, TO_DATE('2021/08/26 18:04:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:39', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:04:39', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (63, 2, 0, TO_DATE('2021/08/26 18:06:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:06:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:06:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:06:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (65, 2, 0, TO_DATE('2021/08/26 18:07:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:07:28', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:07:28', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:07:28', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (66, 2, 0, TO_DATE('2021/08/26 18:07:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:07:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:07:38', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:07:38', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (73, 2, 0, TO_DATE('2021/08/26 18:15:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:15:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:15:53', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:15:53', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (74, 2, 0, TO_DATE('2021/08/26 18:17:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:17:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:17:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:17:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (76, 2, 0, TO_DATE('2021/08/26 18:24:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:24:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:24:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:24:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (93, 2, 0, TO_DATE('2021/08/26 18:34:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:34:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:34:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:34:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (15, 2, 0, TO_DATE('2021/08/26 17:17:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:17:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:17:00', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy229.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:106)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:17:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (17, 2, 0, TO_DATE('2021/08/26 17:19:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:19:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:19:46', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:111)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:19:46', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (18, 2, 0, TO_DATE('2021/08/26 17:21:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:21:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:21:01', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:109)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:21:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (28, 2, 0, TO_DATE('2021/08/26 17:35:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:35:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:35:01', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy333.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:117)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:35:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (29, 2, 0, TO_DATE('2021/08/26 17:35:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:35:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:35:26', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:118)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:35:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (34, 2, 0, TO_DATE('2021/08/26 17:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:41:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (42, 2, 0, TO_DATE('2021/08/26 17:52:08', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:52:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:52:09', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:52:09', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (43, 2, 0, TO_DATE('2021/08/26 17:52:31', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:52:31', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:52:31', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:52:31', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (44, 2, 0, TO_DATE('2021/08/26 17:56:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:56:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:56:06', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:56:06', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (45, 2, 0, TO_DATE('2021/08/26 17:56:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:56:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:56:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:56:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (46, 2, 0, TO_DATE('2021/08/26 17:57:32', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:57:32', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:57:32', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:57:32', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (47, 2, 0, TO_DATE('2021/08/26 17:57:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:57:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:57:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:57:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (48, 2, 0, TO_DATE('2021/08/26 17:58:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:58:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:58:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:58:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (49, 2, 0, TO_DATE('2021/08/26 17:58:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:58:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:58:37', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 17:58:37', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (50, 2, 0, TO_DATE('2021/08/26 18:00:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:00:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:00:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:00:23', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (53, 2, 0, TO_DATE('2021/08/26 18:03:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:03:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:03:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:03:22', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (59, 2, 0, TO_DATE('2021/08/26 18:04:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:04:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (60, 2, 0, TO_DATE('2021/08/26 18:04:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:04:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:04:59', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (61, 2, 0, TO_DATE('2021/08/26 18:05:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:05:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:05:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:05:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (62, 2, 0, TO_DATE('2021/08/26 18:05:36', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:05:36', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:05:36', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 18:05:36', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (150, 2, 0, TO_DATE('2021/08/26 19:44:04', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:44:04', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:44:04', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:44:04', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (181, 2, 0, TO_DATE('2021/08/27 11:30:57', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:30:57', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:30:57', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:30:57', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (188, 2, 0, TO_DATE('2021/08/27 11:39:47', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:39:47', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:39:47', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:39:47', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (331, 2, 147, TO_DATE('2021/08/30 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 14:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 14:59:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (478, 2, 296, TO_DATE('2021/08/30 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (488, 2, 306, TO_DATE('2021/08/30 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (521, 2, 340, TO_DATE('2021/09/01 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (524, 2, 344, TO_DATE('2021/09/01 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (530, 2, 350, TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (540, 2, 360, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (541, 2, 361, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (551, 2, 371, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (592, 2, 414, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (610, 2, 432, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 17:59:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (612, 2, 434, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (617, 2, 440, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (623, 2, 447, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (648, 2, 469, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (660, 2, 481, TO_DATE('2021/09/03 02:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (661, 2, 482, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (673, 2, 494, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (674, 2, 495, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (694, 2, 515, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (178, 2, 0, TO_DATE('2021/08/27 11:28:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:28:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:28:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:28:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (179, 2, 10, TO_DATE('2021/08/27 11:28:29', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:28:29', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:28:31', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:28:31', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (183, 2, 0, TO_DATE('2021/08/27 11:35:56', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:35:56', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:35:56', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:35:56', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (185, 2, 0, TO_DATE('2021/08/27 11:36:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:36:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:36:39', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:36:39', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (297, 2, 0, TO_DATE('2021/08/27 11:41:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:41:59', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (322, 1, 0, TO_DATE('2021/08/27 11:49:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:49:13', 'YYYY/MM/DD HH24:MI:SS'), null, 'STARTED', 'UNKNOWN', null, TO_DATE('2021/08/27 11:49:13', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (416, 2, 233, TO_DATE('2021/08/30 16:24:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (417, 2, 234, TO_DATE('2021/08/30 16:24:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (418, 2, 235, TO_DATE('2021/08/30 16:24:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (419, 2, 236, TO_DATE('2021/08/30 16:24:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (420, 2, 237, TO_DATE('2021/08/30 16:24:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (421, 2, 238, TO_DATE('2021/08/30 16:24:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (422, 2, 239, TO_DATE('2021/08/30 16:24:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (423, 2, 240, TO_DATE('2021/08/30 16:24:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (424, 2, 241, TO_DATE('2021/08/30 16:25:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (481, 2, 299, TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (499, 2, 317, TO_DATE('2021/08/31 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (503, 2, 321, TO_DATE('2021/08/31 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (567, 2, 387, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (573, 2, 393, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (577, 2, 397, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (578, 2, 398, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (586, 2, 406, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (596, 2, 418, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (597, 2, 419, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (599, 2, 421, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (615, 2, 438, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (625, 2, 449, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (653, 2, 474, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (671, 2, 492, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (688, 2, 509, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (696, 2, 517, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (700, 2, 522, TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (724, 2, 548, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (381, 2, 198, TO_DATE('2021/08/30 16:21:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (382, 2, 199, TO_DATE('2021/08/30 16:21:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (383, 2, 200, TO_DATE('2021/08/30 16:21:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (384, 2, 201, TO_DATE('2021/08/30 16:21:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (487, 2, 305, TO_DATE('2021/08/30 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (502, 2, 320, TO_DATE('2021/08/31 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (516, 2, 335, TO_DATE('2021/09/01 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (574, 2, 394, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (620, 2, 443, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (665, 2, 486, TO_DATE('2021/09/03 03:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (707, 2, 530, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (144, 2, 0, TO_DATE('2021/08/26 19:40:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:40:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:40:37', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:40:37', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (149, 2, 0, TO_DATE('2021/08/26 19:43:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:43:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:43:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:43:11', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (169, 2, 0, TO_DATE('2021/08/26 19:55:34', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:55:34', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:55:34', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:55:34', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (172, 2, 0, TO_DATE('2021/08/27 11:20:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:20:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:20:53', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:20:53', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (173, 2, 0, TO_DATE('2021/08/27 11:20:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:20:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:20:58', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:20:58', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (210, 2, 0, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (296, 2, 116, TO_DATE('2021/08/27 11:41:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (298, 2, 117, TO_DATE('2021/08/27 11:42:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (299, 2, 118, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (300, 2, 119, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (301, 2, 120, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (302, 2, 121, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (303, 2, 122, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (304, 2, 123, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (305, 2, 124, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (306, 2, 125, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (307, 2, 126, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (308, 2, 127, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (309, 2, 128, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (310, 2, 129, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (311, 2, 130, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (312, 2, 131, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (313, 2, 132, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (314, 2, 133, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (315, 2, 134, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (316, 2, 0, TO_DATE('2021/08/27 11:42:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:42:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (504, 2, 322, TO_DATE('2021/08/31 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (514, 2, 333, TO_DATE('2021/09/01 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (518, 2, 337, TO_DATE('2021/09/01 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (529, 2, 349, TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (555, 2, 375, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (556, 2, 376, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (575, 2, 395, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (584, 2, 404, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (593, 2, 415, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (601, 2, 423, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (643, 2, 463, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (672, 2, 493, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (677, 2, 498, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (699, 2, 520, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (704, 2, 526, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (157, 2, 0, TO_DATE('2021/08/26 19:47:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:47:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:47:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:47:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (175, 2, 0, TO_DATE('2021/08/27 11:21:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:21:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:21:39', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:21:39', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (209, 2, 30, TO_DATE('2021/08/27 11:41:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (211, 2, 31, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (212, 2, 32, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (213, 2, 33, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (214, 2, 34, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (215, 2, 35, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (216, 2, 36, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (217, 2, 37, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (218, 2, 38, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (219, 2, 39, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (220, 2, 40, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (221, 2, 41, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (222, 2, 42, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (223, 2, 43, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (224, 2, 44, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (225, 2, 45, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (226, 2, 46, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (227, 2, 47, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (228, 2, 48, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (229, 2, 49, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (230, 2, 50, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (231, 2, 51, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (232, 2, 52, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (233, 2, 53, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (234, 2, 54, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (235, 2, 55, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (236, 2, 56, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (237, 2, 57, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (238, 2, 58, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (239, 2, 59, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (240, 2, 60, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (241, 2, 61, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (242, 2, 62, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (243, 2, 63, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (244, 2, 64, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (245, 2, 65, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (246, 2, 66, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (247, 2, 67, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (248, 2, 68, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (249, 2, 69, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (250, 2, 70, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (251, 2, 71, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (252, 2, 72, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (253, 2, 73, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (254, 2, 74, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (255, 2, 75, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (256, 2, 76, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (257, 2, 77, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (258, 2, 78, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (259, 2, 79, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (260, 2, 80, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (261, 2, 81, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (262, 2, 82, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (263, 2, 83, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (264, 2, 84, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (265, 2, 85, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (266, 2, 86, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (267, 2, 87, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (268, 2, 88, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (269, 2, 89, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (270, 2, 90, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (271, 2, 91, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (272, 2, 92, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (273, 2, 93, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (274, 2, 94, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (275, 2, 95, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (276, 2, 96, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (277, 2, 97, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (278, 2, 98, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (279, 2, 99, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (280, 2, 100, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (281, 2, 101, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (282, 2, 102, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (283, 2, 103, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (284, 2, 104, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (285, 2, 105, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (286, 2, 106, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (287, 2, 107, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (288, 2, 108, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (143, 2, 0, TO_DATE('2021/08/26 19:40:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:40:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:40:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:40:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (159, 2, 0, TO_DATE('2021/08/26 19:49:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:49:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:49:37', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:49:37', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (161, 2, 0, TO_DATE('2021/08/26 19:50:28', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:50:28', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:50:28', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:50:28', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (162, 2, 0, TO_DATE('2021/08/26 19:51:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:51:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:51:04', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:51:04', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (163, 2, 0, TO_DATE('2021/08/26 19:51:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:51:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:51:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:51:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (164, 2, 0, TO_DATE('2021/08/26 19:52:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:52:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:52:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:52:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (165, 2, 0, TO_DATE('2021/08/26 19:53:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:53:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:53:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:53:02', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (166, 2, 0, TO_DATE('2021/08/26 19:53:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:53:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:53:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:53:18', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (167, 2, 0, TO_DATE('2021/08/26 19:53:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:53:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:53:53', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:53:53', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (168, 2, 0, TO_DATE('2021/08/26 19:54:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:54:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:54:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:54:24', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (187, 2, 0, TO_DATE('2021/08/27 11:37:47', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:37:47', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:37:47', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:37:47', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (289, 2, 109, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (290, 2, 110, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (291, 2, 111, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (292, 2, 112, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (293, 2, 113, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (294, 2, 114, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (295, 2, 115, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (318, 2, 0, TO_DATE('2021/08/27 11:46:52', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:46:52', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:46:52', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:46:52', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (319, 2, 136, TO_DATE('2021/08/27 11:47:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:47:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:47:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:47:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (320, 2, 137, TO_DATE('2021/08/27 11:48:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:48:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:48:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:48:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (321, 2, 138, TO_DATE('2021/08/27 11:49:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:49:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:49:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:49:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (324, 2, 140, TO_DATE('2021/08/27 16:57:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 16:57:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 16:57:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 16:57:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (325, 2, 141, TO_DATE('2021/08/27 16:57:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 16:57:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 16:57:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 16:57:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (326, 2, 142, TO_DATE('2021/08/27 16:57:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 16:57:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 16:57:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 16:57:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (332, 2, 148, TO_DATE('2021/08/30 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 15:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 15:59:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (333, 2, 149, TO_DATE('2021/08/30 16:02:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:02:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:02:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:02:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (334, 2, 150, TO_DATE('2021/08/30 16:02:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:02:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:02:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:02:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (335, 2, 151, TO_DATE('2021/08/30 16:03:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:03:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:03:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:03:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (336, 2, 152, TO_DATE('2021/08/30 16:03:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:03:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:03:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:03:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (406, 2, 223, TO_DATE('2021/08/30 16:23:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (407, 2, 224, TO_DATE('2021/08/30 16:23:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (408, 2, 225, TO_DATE('2021/08/30 16:23:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (409, 2, 226, TO_DATE('2021/08/30 16:23:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (410, 2, 227, TO_DATE('2021/08/30 16:23:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (411, 2, 228, TO_DATE('2021/08/30 16:23:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (412, 2, 229, TO_DATE('2021/08/30 16:23:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (413, 2, 230, TO_DATE('2021/08/30 16:24:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (414, 2, 231, TO_DATE('2021/08/30 16:24:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (415, 2, 232, TO_DATE('2021/08/30 16:24:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:24:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (483, 2, 301, TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (489, 2, 307, TO_DATE('2021/08/31 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (490, 2, 308, TO_DATE('2021/08/31 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (491, 2, 309, TO_DATE('2021/08/31 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (497, 2, 315, TO_DATE('2021/08/31 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (498, 2, 316, TO_DATE('2021/08/31 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (506, 2, 324, TO_DATE('2021/08/31 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (511, 2, 329, TO_DATE('2021/08/31 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (512, 2, 330, TO_DATE('2021/08/31 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (520, 2, 339, TO_DATE('2021/09/01 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (527, 2, 347, TO_DATE('2021/09/01 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (531, 2, 351, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (533, 2, 353, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (543, 2, 363, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (548, 2, 368, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (552, 2, 372, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (564, 2, 384, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (565, 2, 385, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (566, 2, 386, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (569, 2, 389, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (570, 2, 390, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (571, 2, 391, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (585, 2, 405, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (589, 2, 410, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (598, 2, 420, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (600, 2, 422, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (611, 2, 433, TO_DATE('2021/09/02 17:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 17:59:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (613, 2, 435, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (614, 2, 436, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (640, 2, 460, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (655, 2, 477, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (690, 2, 511, TO_DATE('2021/09/03 08:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:58:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 08:58:59', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (698, 2, 519, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 09:59:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (344, 2, 161, TO_DATE('2021/08/30 16:08:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:08:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (345, 2, 162, TO_DATE('2021/08/30 16:08:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:08:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (346, 2, 163, TO_DATE('2021/08/30 16:08:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:08:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (347, 2, 164, TO_DATE('2021/08/30 16:08:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:08:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (348, 2, 165, TO_DATE('2021/08/30 16:08:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:08:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (349, 2, 166, TO_DATE('2021/08/30 16:08:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:08:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (350, 2, 167, TO_DATE('2021/08/30 16:08:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:08:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (351, 2, 168, TO_DATE('2021/08/30 16:18:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:18:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (352, 2, 169, TO_DATE('2021/08/30 16:18:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:18:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (353, 2, 170, TO_DATE('2021/08/30 16:18:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:18:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (354, 2, 171, TO_DATE('2021/08/30 16:18:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:18:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (355, 2, 172, TO_DATE('2021/08/30 16:18:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:18:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (356, 2, 173, TO_DATE('2021/08/30 16:18:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:18:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (357, 2, 174, TO_DATE('2021/08/30 16:18:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:18:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (358, 2, 175, TO_DATE('2021/08/30 16:19:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (359, 2, 176, TO_DATE('2021/08/30 16:19:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (360, 2, 177, TO_DATE('2021/08/30 16:19:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (361, 2, 178, TO_DATE('2021/08/30 16:19:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (362, 2, 179, TO_DATE('2021/08/30 16:19:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (363, 2, 180, TO_DATE('2021/08/30 16:19:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (364, 2, 181, TO_DATE('2021/08/30 16:19:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (365, 2, 182, TO_DATE('2021/08/30 16:19:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (366, 2, 183, TO_DATE('2021/08/30 16:19:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (367, 2, 184, TO_DATE('2021/08/30 16:19:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (368, 2, 185, TO_DATE('2021/08/30 16:19:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (369, 2, 186, TO_DATE('2021/08/30 16:19:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:19:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (433, 2, 250, TO_DATE('2021/08/30 16:25:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (434, 2, 251, TO_DATE('2021/08/30 16:25:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (435, 2, 252, TO_DATE('2021/08/30 16:25:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (436, 2, 253, TO_DATE('2021/08/30 16:26:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (437, 2, 254, TO_DATE('2021/08/30 16:26:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (438, 2, 255, TO_DATE('2021/08/30 16:26:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (439, 2, 256, TO_DATE('2021/08/30 16:26:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (440, 2, 257, TO_DATE('2021/08/30 16:26:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (441, 2, 258, TO_DATE('2021/08/30 16:26:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (442, 2, 259, TO_DATE('2021/08/30 16:26:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (455, 2, 272, TO_DATE('2021/08/30 16:27:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (456, 2, 273, TO_DATE('2021/08/30 16:27:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (457, 2, 274, TO_DATE('2021/08/30 16:27:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (486, 2, 304, TO_DATE('2021/08/30 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (492, 2, 310, TO_DATE('2021/08/31 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (582, 2, 402, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (588, 2, 409, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (590, 2, 411, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (627, 2, 451, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (644, 2, 464, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (654, 2, 475, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (668, 2, 489, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (681, 2, 502, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (686, 2, 508, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (703, 2, 525, TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (705, 2, 527, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (713, 2, 536, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (142, 2, 0, TO_DATE('2021/08/26 19:37:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:37:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:37:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:37:19', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (176, 2, 0, TO_DATE('2021/08/27 11:22:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:22:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:22:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:22:19', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (184, 2, 0, TO_DATE('2021/08/27 11:36:32', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:36:32', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:36:32', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:36:32', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (317, 2, 0, TO_DATE('2021/08/27 11:45:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:45:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:45:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:45:19', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (327, 2, 143, TO_DATE('2021/08/30 11:00:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 11:00:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 11:00:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 11:00:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (370, 2, 187, TO_DATE('2021/08/30 16:20:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:20:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (371, 2, 188, TO_DATE('2021/08/30 16:20:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:20:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (372, 2, 189, TO_DATE('2021/08/30 16:20:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:20:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (373, 2, 190, TO_DATE('2021/08/30 16:20:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:20:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (374, 2, 191, TO_DATE('2021/08/30 16:20:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:20:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (375, 2, 192, TO_DATE('2021/08/30 16:20:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:20:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (376, 2, 193, TO_DATE('2021/08/30 16:20:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:20:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (377, 2, 194, TO_DATE('2021/08/30 16:20:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:20:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (378, 2, 195, TO_DATE('2021/08/30 16:20:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:20:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (379, 2, 196, TO_DATE('2021/08/30 16:21:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (380, 2, 197, TO_DATE('2021/08/30 16:21:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (468, 2, 285, TO_DATE('2021/08/30 16:28:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (469, 2, 286, TO_DATE('2021/08/30 16:28:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (470, 2, 287, TO_DATE('2021/08/30 16:29:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:29:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (471, 2, 288, TO_DATE('2021/08/30 16:29:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:29:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (472, 2, 289, TO_DATE('2021/08/30 16:29:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:29:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (473, 2, 290, TO_DATE('2021/08/30 16:29:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:29:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (474, 2, 292, TO_DATE('2021/08/30 16:29:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:29:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (475, 2, 293, TO_DATE('2021/08/30 16:29:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:29:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (476, 2, 294, TO_DATE('2021/08/30 16:29:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:29:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (477, 2, 295, TO_DATE('2021/08/30 16:29:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:29:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (479, 2, 297, TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (495, 2, 313, TO_DATE('2021/08/31 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (545, 2, 365, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (553, 2, 373, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (609, 2, 430, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (669, 2, 490, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (684, 2, 505, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (706, 2, 528, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (712, 2, 535, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (718, 2, 542, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (720, 2, 544, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (151, 2, 0, TO_DATE('2021/08/26 19:44:43', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:44:43', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:44:43', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:44:43', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (152, 2, 0, TO_DATE('2021/08/26 19:45:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:45:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:45:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:45:27', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (153, 2, 0, TO_DATE('2021/08/26 19:46:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:46:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:46:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:46:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (154, 2, 0, TO_DATE('2021/08/26 19:46:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:46:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:46:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:46:16', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (155, 2, 0, TO_DATE('2021/08/26 19:46:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:46:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:46:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:46:23', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (156, 2, 0, TO_DATE('2021/08/26 19:47:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:47:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:47:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:47:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (171, 2, 0, TO_DATE('2021/08/27 11:19:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:19:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:19:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:19:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (182, 2, 0, TO_DATE('2021/08/27 11:32:33', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:32:33', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:32:33', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:32:33', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (329, 2, 145, TO_DATE('2021/08/30 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (330, 2, 146, TO_DATE('2021/08/30 14:00:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 14:00:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 14:00:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 14:00:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (484, 2, 302, TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (508, 2, 326, TO_DATE('2021/08/31 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (513, 2, 332, TO_DATE('2021/09/01 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (525, 2, 345, TO_DATE('2021/09/01 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (528, 2, 348, TO_DATE('2021/09/01 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (532, 2, 352, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (542, 2, 362, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (557, 2, 377, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (568, 2, 388, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (595, 2, 417, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (606, 2, 428, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (607, 2, 429, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (619, 2, 442, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (642, 2, 462, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (652, 2, 473, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (667, 2, 488, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (678, 2, 499, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (679, 2, 500, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (683, 2, 504, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (719, 2, 543, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (148, 2, 0, TO_DATE('2021/08/26 19:42:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:42:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:42:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:42:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (180, 2, 0, TO_DATE('2021/08/27 11:30:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:30:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:30:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:30:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (190, 2, 0, TO_DATE('2021/08/27 11:41:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:09', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:41:09', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (328, 2, 144, TO_DATE('2021/08/30 13:30:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 13:30:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 13:30:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 13:30:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (458, 2, 275, TO_DATE('2021/08/30 16:28:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (459, 2, 276, TO_DATE('2021/08/30 16:28:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (460, 2, 277, TO_DATE('2021/08/30 16:28:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (461, 2, 278, TO_DATE('2021/08/30 16:28:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (462, 2, 279, TO_DATE('2021/08/30 16:28:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (463, 2, 280, TO_DATE('2021/08/30 16:28:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (464, 2, 281, TO_DATE('2021/08/30 16:28:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (465, 2, 282, TO_DATE('2021/08/30 16:28:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (466, 2, 283, TO_DATE('2021/08/30 16:28:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (467, 2, 284, TO_DATE('2021/08/30 16:28:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:28:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (496, 2, 314, TO_DATE('2021/08/31 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (501, 2, 319, TO_DATE('2021/08/31 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (510, 2, 328, TO_DATE('2021/08/31 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (522, 2, 341, TO_DATE('2021/09/01 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (523, 2, 343, TO_DATE('2021/09/01 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (526, 2, 346, TO_DATE('2021/09/01 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (549, 2, 369, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (550, 2, 370, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (561, 2, 381, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (562, 2, 382, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (616, 2, 439, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (618, 2, 441, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (657, 2, 476, TO_DATE('2021/09/03 01:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (693, 2, 514, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (701, 2, 523, TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (711, 2, 534, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (722, 2, 545, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (145, 2, 0, TO_DATE('2021/08/26 19:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:41:16', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (146, 2, 0, TO_DATE('2021/08/26 19:41:36', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:41:36', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:41:36', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:41:36', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (160, 2, 0, TO_DATE('2021/08/26 19:49:47', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:49:47', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:49:48', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:49:48', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (174, 2, 0, TO_DATE('2021/08/27 11:21:04', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:21:04', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:21:04', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:21:04', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (177, 2, 0, TO_DATE('2021/08/27 11:27:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:27:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:27:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:27:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (189, 2, 11, TO_DATE('2021/08/27 11:41:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (191, 2, 12, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (192, 2, 13, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (193, 2, 14, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (194, 2, 15, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (195, 2, 16, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (196, 2, 17, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (197, 2, 18, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (198, 2, 19, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (199, 2, 20, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (200, 2, 21, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (201, 2, 22, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (202, 2, 23, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (203, 2, 24, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (204, 2, 25, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (205, 2, 26, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (206, 2, 27, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (207, 2, 28, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (208, 1, 29, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), null, 'STARTED', 'UNKNOWN', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (323, 2, 139, TO_DATE('2021/08/27 12:33:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 12:33:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 12:33:41', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/27 12:33:41', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (425, 2, 242, TO_DATE('2021/08/30 16:25:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (426, 2, 243, TO_DATE('2021/08/30 16:25:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (427, 2, 244, TO_DATE('2021/08/30 16:25:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (428, 2, 245, TO_DATE('2021/08/30 16:25:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (429, 2, 246, TO_DATE('2021/08/30 16:25:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (430, 2, 247, TO_DATE('2021/08/30 16:25:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (431, 2, 248, TO_DATE('2021/08/30 16:25:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (432, 2, 249, TO_DATE('2021/08/30 16:25:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:25:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (485, 2, 303, TO_DATE('2021/08/30 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (494, 2, 312, TO_DATE('2021/08/31 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (505, 2, 323, TO_DATE('2021/08/31 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (507, 2, 325, TO_DATE('2021/08/31 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (515, 2, 334, TO_DATE('2021/09/01 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (517, 2, 336, TO_DATE('2021/09/01 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (554, 2, 374, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (563, 2, 383, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (591, 2, 413, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (594, 2, 416, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (621, 2, 444, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (649, 2, 470, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (670, 2, 491, TO_DATE('2021/09/03 04:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (676, 2, 497, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (680, 2, 501, TO_DATE('2021/09/03 06:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:58:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 06:58:59', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (687, 2, 507, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (691, 2, 512, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (695, 2, 516, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (697, 2, 518, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (702, 2, 524, TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (714, 2, 538, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (716, 2, 540, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (723, 2, 547, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (147, 2, 0, TO_DATE('2021/08/26 19:42:07', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:42:07', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:42:07', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:42:07', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (337, 2, 153, TO_DATE('2021/08/30 16:04:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:04:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (338, 2, 154, TO_DATE('2021/08/30 16:04:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:04:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (339, 2, 155, TO_DATE('2021/08/30 16:04:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:04:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (340, 2, 157, TO_DATE('2021/08/30 16:04:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:04:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (341, 2, 158, TO_DATE('2021/08/30 16:04:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:04:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (342, 2, 159, TO_DATE('2021/08/30 16:04:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:04:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (343, 2, 160, TO_DATE('2021/08/30 16:04:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:04:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (385, 2, 202, TO_DATE('2021/08/30 16:21:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (386, 2, 203, TO_DATE('2021/08/30 16:21:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (387, 2, 204, TO_DATE('2021/08/30 16:21:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (388, 2, 205, TO_DATE('2021/08/30 16:21:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (389, 2, 206, TO_DATE('2021/08/30 16:21:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:21:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (390, 2, 207, TO_DATE('2021/08/30 16:22:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (391, 2, 208, TO_DATE('2021/08/30 16:22:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (392, 2, 209, TO_DATE('2021/08/30 16:22:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (393, 2, 210, TO_DATE('2021/08/30 16:22:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (394, 2, 211, TO_DATE('2021/08/30 16:22:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (395, 2, 212, TO_DATE('2021/08/30 16:22:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (396, 2, 213, TO_DATE('2021/08/30 16:22:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (397, 2, 214, TO_DATE('2021/08/30 16:22:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (398, 2, 215, TO_DATE('2021/08/30 16:22:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (399, 2, 216, TO_DATE('2021/08/30 16:22:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (400, 2, 217, TO_DATE('2021/08/30 16:22:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (401, 2, 218, TO_DATE('2021/08/30 16:22:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:22:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (402, 2, 219, TO_DATE('2021/08/30 16:23:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (403, 2, 220, TO_DATE('2021/08/30 16:23:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (404, 2, 221, TO_DATE('2021/08/30 16:23:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (405, 2, 222, TO_DATE('2021/08/30 16:23:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:23:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (544, 2, 364, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (587, 2, 407, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (603, 2, 425, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (604, 2, 426, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (624, 2, 448, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (626, 2, 450, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (628, 2, 452, TO_DATE('2021/09/02 21:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 21:59:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (641, 2, 461, TO_DATE('2021/09/02 22:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (650, 2, 471, TO_DATE('2021/09/03 00:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:58:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 00:58:59', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (666, 2, 487, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (685, 2, 506, TO_DATE('2021/09/03 07:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:58:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 07:58:59', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (710, 2, 533, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (715, 2, 539, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (141, 2, 0, TO_DATE('2021/08/26 19:35:32', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:35:32', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:35:32', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:35:32', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (158, 2, 0, TO_DATE('2021/08/26 19:48:46', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:48:46', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 19:48:46', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/26 19:48:46', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (186, 2, 0, TO_DATE('2021/08/27 11:36:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:36:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:36:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:36:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (500, 2, 318, TO_DATE('2021/08/31 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (519, 2, 338, TO_DATE('2021/09/01 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (576, 2, 396, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (605, 2, 427, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (622, 2, 445, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (647, 2, 467, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (662, 2, 483, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (675, 2, 496, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (692, 2, 513, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (709, 2, 532, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (725, 2, 549, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 16:59:01', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (509, 2, 327, TO_DATE('2021/08/31 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (546, 2, 366, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (547, 2, 367, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (559, 2, 379, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (560, 2, 380, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (583, 2, 403, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (602, 2, 424, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (645, 2, 465, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (646, 2, 466, TO_DATE('2021/09/02 23:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (659, 2, 480, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (717, 2, 541, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (721, 2, 546, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (170, 2, 0, TO_DATE('2021/08/27 11:18:57', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:18:57', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:18:57', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'NOOP', 'All steps already completed or no steps configured for this job.', TO_DATE('2021/08/27 11:18:57', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (443, 2, 260, TO_DATE('2021/08/30 16:26:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:40', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (444, 2, 261, TO_DATE('2021/08/30 16:26:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:45', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (445, 2, 262, TO_DATE('2021/08/30 16:26:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:50', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (446, 2, 263, TO_DATE('2021/08/30 16:26:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:26:55', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (447, 2, 264, TO_DATE('2021/08/30 16:27:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (448, 2, 265, TO_DATE('2021/08/30 16:27:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:05', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (449, 2, 266, TO_DATE('2021/08/30 16:27:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:10', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (450, 2, 267, TO_DATE('2021/08/30 16:27:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:15', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (451, 2, 268, TO_DATE('2021/08/30 16:27:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:20', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (452, 2, 269, TO_DATE('2021/08/30 16:27:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:25', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (453, 2, 270, TO_DATE('2021/08/30 16:27:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:30', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (454, 2, 271, TO_DATE('2021/08/30 16:27:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 16:27:35', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (480, 2, 298, TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (482, 2, 300, TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (493, 2, 311, TO_DATE('2021/08/31 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/08/31 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (558, 2, 378, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (572, 2, 392, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (581, 2, 401, TO_DATE('2021/09/02 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (608, 2, 431, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (651, 2, 472, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (656, 2, 478, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (658, 2, 479, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (663, 2, 484, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (664, 2, 485, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (682, 2, 503, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (689, 2, 510, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);
insert into "ETEST"."BATCH_JOB_EXECUTION" ("JOB_EXECUTION_ID", "VERSION", "JOB_INSTANCE_ID", "CREATE_TIME", "START_TIME", "END_TIME", "STATUS", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED", "JOB_CONFIGURATION_LOCATION" ) values (708, 2, 531, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 'COMPLETED', null, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), null);

------- End of ETEST.BATCH_JOB_EXECUTION -------------- Begin of ETEST.BATCH_JOB_EXECUTION_CONTEXT-------

insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (13, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (14, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (30, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (62, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (83, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (84, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (100, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (101, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (102, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (103, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (149, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (176, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (178, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (179, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (184, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (210, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (297, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (493, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (504, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (522, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (529, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (556, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (562, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (581, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (597, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (601, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (613, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (656, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (664, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (672, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (688, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (696, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (711, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (715, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (724, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (6, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (7, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (8, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (11, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (16, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (32, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (40, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (58, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (69, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (120, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (160, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (173, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (209, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (211, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (212, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (213, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (214, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (215, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (216, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (217, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (218, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (219, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (220, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (221, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (222, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (223, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (224, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (225, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (226, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (227, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (228, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (229, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (230, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (231, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (232, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (233, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (234, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (235, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (236, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (237, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (238, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (239, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (240, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (241, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (242, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (243, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (244, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (245, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (246, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (247, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (248, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (249, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (250, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (251, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (252, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (253, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (254, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (255, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (256, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (257, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (258, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (259, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (260, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (261, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (262, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (263, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (264, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (265, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (266, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (267, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (268, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (269, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (270, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (271, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (272, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (273, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (274, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (275, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (276, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (277, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (278, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (279, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (280, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (281, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (282, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (283, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (284, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (285, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (286, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (287, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (288, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (289, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (290, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (291, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (292, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (293, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (294, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (295, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (323, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (505, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (507, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (515, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (546, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (574, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (585, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (589, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (620, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (645, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (647, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (657, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (661, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (665, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (698, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (702, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (717, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (35, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (54, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (67, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (77, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (93, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (131, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (187, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (296, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (298, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (299, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (300, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (301, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (302, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (303, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (304, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (305, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (306, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (307, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (308, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (309, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (310, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (311, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (312, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (313, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (314, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (315, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (332, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (385, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (386, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (387, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (388, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (389, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (390, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (391, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (392, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (393, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (394, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (395, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (396, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (397, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (398, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (399, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (400, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (401, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (402, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (403, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (404, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (405, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (512, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (520, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (533, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (543, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (552, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (555, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (560, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (561, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (566, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (573, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (578, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (600, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (603, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (618, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (662, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (663, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (682, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (699, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (710, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (4, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (10, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (36, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (37, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (61, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (81, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (82, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (99, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (111, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (112, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (113, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (121, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (125, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (134, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (181, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (344, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (345, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (346, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (347, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (348, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (349, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (350, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (433, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (434, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (435, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (436, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (437, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (438, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (439, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (440, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (441, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (442, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (482, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (487, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (488, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (489, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (517, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (541, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (542, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (548, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (554, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (567, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (582, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (625, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (627, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (642, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (658, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (668, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (690, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (694, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (700, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (719, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (725, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (0, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (1, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (2, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (3, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (12, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (42, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (43, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (44, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (45, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (46, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (47, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (48, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (49, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (50, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (60, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (106, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (107, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (108, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (109, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (110, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (148, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (172, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (190, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (316, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (337, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (338, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (339, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (340, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (341, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (342, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (343, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (351, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (352, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (353, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (354, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (355, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (356, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (357, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (358, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (359, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (360, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (361, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (362, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (363, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (364, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (365, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (366, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (367, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (368, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (369, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (455, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (456, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (457, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (478, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (479, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (483, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (592, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (602, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (610, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (614, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (650, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (704, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (705, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (718, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (720, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (39, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (55, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (72, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (94, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (95, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (98, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (118, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (119, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (128, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (130, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (145, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (146, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (157, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (183, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (189, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (191, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (192, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (193, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (194, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (195, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (196, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (197, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (198, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (199, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (200, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (201, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (202, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (203, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (204, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (205, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (206, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (207, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (208, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (317, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (425, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (426, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (427, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (428, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (429, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (430, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (431, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (432, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (486, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (506, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (532, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (571, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (599, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (611, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (649, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (652, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (707, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (712, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (723, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (66, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (76, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (324, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (325, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (326, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (381, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (382, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (383, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (384, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (490, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (550, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (553, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (559, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (575, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (616, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (624, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (669, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (693, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (706, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (722, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (19, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (20, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (21, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (22, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (23, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (24, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (25, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (26, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (27, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (57, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (59, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (105, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (117, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (123, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (127, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (136, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (137, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (138, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (139, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (140, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (151, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (152, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (153, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (154, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (155, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (156, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (159, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (171, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (177, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (186, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (318, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (319, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (320, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (321, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (329, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (330, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (333, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (334, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (335, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (336, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (458, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (459, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (460, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (461, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (462, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (463, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (464, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (465, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (466, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (467, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (485, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (496, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (497, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (514, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (519, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (526, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (528, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (531, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (565, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (584, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (593, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (594, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (596, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (598, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (605, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (607, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (640, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (643, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (644, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (653, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (667, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (670, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (675, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (687, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (697, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (708, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (709, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (716, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (34, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (52, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (53, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (63, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (64, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (116, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (124, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (147, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (174, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (175, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (180, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (327, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (328, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (491, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (501, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (502, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (511, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (516, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (549, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (570, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (587, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (588, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (621, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (628, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (674, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (680, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (684, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (695, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (701, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (713, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (5, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (9, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (71, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (126, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (133, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (185, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (322, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (370, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (371, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (372, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (373, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (374, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (375, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (376, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (377, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (378, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (379, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (380, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (416, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (417, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (418, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (419, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (420, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (421, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (422, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (423, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (424, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (443, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (444, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (445, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (446, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (447, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (448, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (449, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (450, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (451, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (452, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (453, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (454, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (468, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (469, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (470, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (471, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (472, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (473, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (474, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (475, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (476, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (477, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (480, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (481, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (499, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (500, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (503, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (508, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (527, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (558, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (564, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (569, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (576, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (586, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (590, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (604, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (608, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (626, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (671, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (677, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (686, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (689, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (691, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (703, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (41, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (70, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (85, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (86, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (87, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (88, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (89, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (90, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (91, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (92, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (135, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (141, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (158, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (495, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (510, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (513, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (521, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (544, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (551, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (609, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (622, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (673, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (679, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (681, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (685, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (692, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (721, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (15, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (17, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (18, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (29, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (31, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (33, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (51, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (65, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (73, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (74, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (96, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (97, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (114, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (115, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (142, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (143, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (144, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (161, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (162, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (163, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (164, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (165, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (166, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (167, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (168, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (169, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (170, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (182, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (406, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (407, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (408, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (409, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (410, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (411, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (412, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (413, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (414, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (415, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (484, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (494, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (498, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (518, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (523, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (525, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (545, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (568, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (577, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (591, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (595, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (606, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (615, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (619, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (646, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (659, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (683, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (714, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (28, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (38, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (56, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (68, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (75, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (78, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (79, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (80, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (104, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (122, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (129, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (132, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (150, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (188, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (331, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (492, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (509, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (524, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (530, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (540, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (547, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (557, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (563, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (572, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (583, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (612, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (617, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (623, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (641, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (648, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (651, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (654, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (655, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (660, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (666, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (676, '{"@class":"java.util.HashMap"}', null);
insert into "ETEST"."BATCH_JOB_EXECUTION_CONTEXT" ("JOB_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (678, '{"@class":"java.util.HashMap"}', null);

------- End of ETEST.BATCH_JOB_EXECUTION_CONTEXT -------------- Begin of ETEST.BATCH_JOB_EXECUTION_PARAMS-------

insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (84, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1629970133590, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (179, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (179, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630031309747, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (493, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (493, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630353540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (504, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (504, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630393140001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (522, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (522, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630461540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (529, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (529, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630490340005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (556, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (556, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630515540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (562, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (562, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630522740001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (581, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (581, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630544340009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (597, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (597, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630562340018, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (601, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (601, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630565940017, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (613, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (613, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630576740004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (656, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (656, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630601940001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (664, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (664, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630609140013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (672, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (672, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630612740001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (688, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (688, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630623540019, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (696, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (696, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630630740002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (711, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (711, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630645140014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (715, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (715, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630652340001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (724, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (724, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630655940008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (209, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (209, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032075964, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (211, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (211, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032076147, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (212, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (212, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032076275, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (213, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (213, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032076399, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (214, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (214, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032076524, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (215, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (215, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032076667, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (216, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (216, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032076792, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (217, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (217, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032076947, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (218, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (218, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032077088, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (219, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (219, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032077213, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (220, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (220, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032077338, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (221, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (221, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032077480, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (222, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (222, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032077622, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (223, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (223, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032077763, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (224, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (224, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032077920, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (225, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (225, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032078031, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (226, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (226, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032078157, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (227, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (227, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032078297, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (228, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (228, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032078425, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (229, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (229, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032078552, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (230, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (230, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032078694, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (231, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (231, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032078806, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (232, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (232, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032078948, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (233, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (233, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032079279, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (234, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (234, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032079389, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (235, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (235, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032079528, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (236, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (236, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032079671, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (237, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (237, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032079812, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (238, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (238, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032080018, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (239, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (239, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032080156, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (240, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (240, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032080294, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (241, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (241, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032080433, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (242, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (242, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032080574, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (243, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (243, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032080717, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (244, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (244, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032080842, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (245, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (245, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032080984, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (246, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (246, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032081127, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (247, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (247, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032081253, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (248, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (248, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032081395, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (249, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (249, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032081521, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (250, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (250, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032081647, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (251, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (251, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032081786, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (252, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (252, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032081926, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (253, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (253, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032082052, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (254, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (254, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032082195, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (255, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (255, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032082338, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (256, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (256, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032082479, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (257, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (257, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032082623, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (258, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (258, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032082764, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (259, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (259, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032082889, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (260, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (260, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032083029, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (261, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (261, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032083154, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (262, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (262, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032083263, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (263, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (263, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032083374, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (264, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (264, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032083498, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (265, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (265, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032083655, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (266, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (266, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032083797, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (267, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (267, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032083923, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (268, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (268, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032084032, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (269, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (269, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032084174, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (270, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (270, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032084315, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (271, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (271, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032084440, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (272, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (272, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032084583, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (273, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (273, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032084709, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (274, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (274, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032084834, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (275, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (275, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032084974, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (276, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (276, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032085100, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (277, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (277, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032085240, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (278, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (278, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032085382, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (279, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (279, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032085494, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (280, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (280, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032085638, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (281, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (281, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032085781, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (282, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (282, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032085922, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (283, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (283, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032086033, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (284, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (284, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032086160, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (285, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (285, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032086268, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (286, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (286, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032086410, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (287, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (287, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032086536, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (288, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (288, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032086678, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (289, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (289, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032086819, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (290, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (290, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032086989, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (291, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (291, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032087147, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (292, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (292, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032087258, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (293, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (293, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032087398, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (294, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (294, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032087542, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (295, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (295, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032087669, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (296, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (296, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032119547, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (298, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (298, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032120959, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (299, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (299, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032121101, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (300, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (300, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032121210, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (301, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (301, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032121337, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (302, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (302, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032121493, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (303, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (303, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032121651, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (304, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (304, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032121791, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (305, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (305, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032121934, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (306, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (306, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032122060, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (307, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (307, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032122201, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (308, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (308, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032122343, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (309, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (309, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032122470, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (310, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (310, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032122627, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (311, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (311, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032122785, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (312, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (312, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032122929, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (313, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (313, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032123072, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (314, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (314, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032123182, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (315, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (315, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032123325, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (323, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (323, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032540011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (323, 'LONG', 'run.id', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (323, 'STRING', 'version', '1', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (332, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (332, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630306740014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (385, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (385, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308095007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (386, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (386, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308100002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (387, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (387, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308105013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (388, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (388, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308110008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (389, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (389, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308115002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (390, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (390, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308120003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (391, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (391, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308125004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (392, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (392, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308130003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (393, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (393, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308135001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (394, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (394, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308140007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (395, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (395, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308145012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (396, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (396, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308150011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (397, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (397, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308155004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (398, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (398, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308160002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (399, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (399, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308165012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (400, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (400, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308170002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (401, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (401, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308175006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (402, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (402, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308180009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (403, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (403, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308185005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (404, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (404, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308190005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (405, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (405, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308195015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (505, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (505, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630396740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (507, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (507, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630403940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (512, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (512, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630421940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (515, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (515, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630436340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (520, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (520, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630454340001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (533, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (533, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630493940013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (543, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (543, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630501140010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (546, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (546, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630504740016, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (552, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (552, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630511940002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (555, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (555, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630515540007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (560, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (560, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630519140013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (561, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (561, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630522740005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (566, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (566, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630526340004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (573, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (573, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630537140011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (574, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (574, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630537140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (578, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (578, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630540740003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (585, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (112, 'STRING', 'nowDate', '2021-08-26', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (112, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1629971386596, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (113, 'STRING', 'nowDate', '2021-08-26', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (113, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1629971407780, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (344, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (344, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307305003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (345, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (345, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307310005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (346, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (346, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307315008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (347, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (347, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307320013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (348, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (348, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307325002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (349, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (349, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307330014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (350, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (350, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307335003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (433, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (433, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308345007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (434, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (434, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308350014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (435, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (435, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308355011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (436, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (436, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308360003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (437, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (437, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308365000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (438, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (438, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308370015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (439, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (439, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308375013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (440, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (440, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308380004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (441, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (441, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308385005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (442, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (442, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308390007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (482, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (482, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630317540007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (487, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (487, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630331940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (488, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (488, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630335540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (489, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (489, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630339140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (517, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (517, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630443540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (541, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (541, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630497540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (542, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (542, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630497540014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (548, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (548, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630504740002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (554, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (554, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630511940010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (567, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (567, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630529940016, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (582, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (582, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630547940005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (585, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630547940016, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (589, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (589, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630555140012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (600, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (600, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630565940003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (603, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (603, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630569540002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (618, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (618, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630580340003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (620, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (620, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630583940008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (625, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (625, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630587540009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (627, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (627, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630587540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (642, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (642, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630591140002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (645, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (645, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630594740010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (647, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (647, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630594740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (657, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (657, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630601939850, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (658, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (658, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630601940006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (661, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (661, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630605540001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (663, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (663, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630605540005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (665, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (665, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630609139921, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (668, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (668, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630609140009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (682, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (682, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630619940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (690, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (690, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630627139872, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (694, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (694, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630630740005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (698, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (698, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630630740045, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (699, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (699, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630634340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (700, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (700, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630634339970, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (702, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (702, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630637940011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (710, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (710, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630645140003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (717, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (717, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630652340011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (719, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (719, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630655940005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (725, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (725, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630655940198, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (110, 'STRING', 'nowDate', '2021-08-26', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (110, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1629971201922, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (337, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (337, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307045015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (338, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (338, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307050014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (339, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (339, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307055011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (340, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (340, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307065003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (341, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (341, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307070007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (342, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (342, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307075004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (343, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (343, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307080006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (351, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (351, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307905014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (352, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (352, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307910009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (353, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (353, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307915002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (354, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (354, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307920005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (355, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (355, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307925010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (356, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (356, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307930005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (357, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (357, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307935006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (358, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (358, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307940013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (359, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (359, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307945003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (360, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (360, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307950012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (361, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (361, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307955010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (362, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (362, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307960014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (363, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (363, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307965001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (364, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (364, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307970001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (365, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (365, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307975006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (366, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (366, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307980002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (367, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (367, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307985011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (368, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (368, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307990004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (369, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (369, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630307995005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (455, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (455, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308460002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (456, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (456, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308465014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (457, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (457, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308470016, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (478, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (478, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630310340007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (479, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (479, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630313940003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (483, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (483, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630321140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (592, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (592, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630558740003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (602, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (602, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630565940029, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (610, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (610, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630573140075, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (614, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (614, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630576740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (650, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (650, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630598339884, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (662, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (662, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630605540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (704, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (704, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630637940001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (705, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (705, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630641540015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (718, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (718, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630652340016, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (720, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (720, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630655940002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (95, 'STRING', 'nowDate', '2021-08-26', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (119, 'STRING', 'nowDate', '2021-08-26', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (119, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1629971630062, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (189, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (189, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032069824, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (191, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (191, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032071223, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (192, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (192, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032071364, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (193, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (193, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032071491, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (194, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (194, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032071681, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (195, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (195, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032071900, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (196, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (196, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032072040, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (197, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (197, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032072168, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (198, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (198, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032072296, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (199, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (199, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032072455, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (200, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (200, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032072581, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (201, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (201, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032072738, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (202, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (202, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032072863, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (203, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (203, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032072972, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (204, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (204, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032073114, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (205, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (205, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032073254, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (206, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (206, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032073395, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (207, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (207, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032073535, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (208, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (208, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032073658, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (425, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (425, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308305014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (426, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (426, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308310013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (427, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (427, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308315014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (428, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (428, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308320006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (429, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (429, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308325016, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (430, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (430, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308330008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (431, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (431, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308335003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (432, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (432, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308340003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (486, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (486, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630328340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (506, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (506, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630400340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (532, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (532, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630493940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (571, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (571, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630533540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (599, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (599, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630565940001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (611, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (611, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630573141492, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (649, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (649, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630598340006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (652, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (652, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630598340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (707, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (707, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630641540010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (712, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (712, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630648740009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (723, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (723, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630655940012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (324, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (324, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630051020008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (325, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (325, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630051025014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (326, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (326, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630051030010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (381, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (381, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308070015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (382, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (382, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308075015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (383, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (383, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308080012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (384, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (384, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308085013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (490, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (490, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630342740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (550, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (550, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630508340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (553, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (553, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630511940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (559, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (559, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630519140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (575, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (575, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630537140003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (616, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (616, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630580340002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (624, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (624, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630583940074, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (669, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (669, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630612740011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (693, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (693, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630627140012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (706, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (706, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630641540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (722, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (722, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630655940001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (319, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (319, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032420018, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (320, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (320, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032480016, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (321, 'STRING', 'nowDate', '2021-08-27', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (321, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630032540011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (329, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (329, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630299540014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (330, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (330, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630299600008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (333, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (333, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630306970004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (334, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (334, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630306975012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (335, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (335, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630306980001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (336, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (336, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630306985015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (458, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (458, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308480006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (459, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (459, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308485011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (460, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (460, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308490001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (461, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (461, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308495011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (462, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (462, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308500012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (463, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (463, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308505000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (464, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (464, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308510015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (465, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (465, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308515014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (466, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (466, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308520008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (467, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (467, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308525007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (485, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (485, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630324740003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (496, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (496, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630364340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (497, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (497, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630367940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (514, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (514, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630432740001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (519, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (519, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630450740001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (526, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (526, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630479540002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (528, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (528, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630486740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (531, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (531, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630493940011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (565, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (565, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630526340001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (584, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (584, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630547940003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (593, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (593, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630558740006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (594, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (594, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630562340003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (596, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (596, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630562340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (598, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (598, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630565940002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (605, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (605, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630569540001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (607, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (607, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630573140015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (640, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (640, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630591140018, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (643, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (643, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630591140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (644, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (644, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630591140004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (653, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (653, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630598340014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (667, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (667, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630609140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (670, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (670, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630612739830, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (675, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (675, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630616340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (687, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (687, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630623540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (697, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (697, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630630740009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (708, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (708, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630645140006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (709, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (709, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630645140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (716, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (716, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630652340002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (327, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (327, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630288800004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (328, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (328, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630297800005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (491, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (491, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630346340001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (501, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (501, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630382340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (502, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (502, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630385940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (511, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (511, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630418340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (516, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (516, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630439940001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (549, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (549, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630508340012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (570, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (570, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630533540004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (587, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (587, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630551540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (588, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (588, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630551540036, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (621, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (621, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630583940001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (628, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (628, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630587540224, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (674, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (674, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630616340010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (680, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (680, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630619939876, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (684, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (684, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630623540011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (695, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (695, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630630740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (701, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (701, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630634340008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (713, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (713, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630648740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (370, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (370, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308015011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (371, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (371, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308020005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (372, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (372, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308025007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (373, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (373, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308030006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (374, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (374, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308035004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (375, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (375, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308040015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (376, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (376, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308045017, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (377, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (377, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308050009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (378, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (378, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308055015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (379, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (379, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308060004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (380, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (380, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308065004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (416, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (416, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308260009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (417, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (417, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308265010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (418, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (418, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308270002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (419, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (419, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308275011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (420, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (420, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308280014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (421, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (421, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308285014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (422, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (422, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308290012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (423, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (423, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308295002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (424, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (424, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308300016, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (443, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (443, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308400015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (444, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (444, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308405011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (445, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (445, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308410013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (446, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (446, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308415003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (447, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (447, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308420014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (448, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (448, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308425004, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (449, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (449, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308430008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (450, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (450, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308435014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (451, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (451, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308440008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (452, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (452, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308445003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (453, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (453, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308450012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (454, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (454, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308455010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (468, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (468, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308530009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (469, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (469, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308535005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (470, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (470, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308540005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (471, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (471, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308545010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (472, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (472, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308550010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (473, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (473, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308555005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (474, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (474, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308565014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (475, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (475, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308570001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (476, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (476, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308575005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (477, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (477, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308580009, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (480, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (480, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630313940015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (481, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (481, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630317540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (499, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (499, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630375140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (500, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (500, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630378740001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (503, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (503, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630389540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (508, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (508, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630407540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (527, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (527, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630483140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (558, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (558, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630519140010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (564, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (564, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630526340010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (569, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (569, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630529940006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (576, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (576, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630540740010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (586, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (586, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630551540014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (590, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (590, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630555140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (604, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (604, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630569540012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (608, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (608, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630573140002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (626, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (626, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630587540003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (671, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (671, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630612740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (677, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (677, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630616339900, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (686, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (686, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630623540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (689, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (689, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630627140008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (691, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (691, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630627140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (703, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (703, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630637940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (86, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1629970227135, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (92, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1629970370109, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (495, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (495, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630360740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (510, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (510, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630414740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (513, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (513, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630429140001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (521, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (521, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630457940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (544, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (544, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630501140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (551, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (551, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630508340013, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (609, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (609, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630573140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (622, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (622, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630583940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (673, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (673, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630612740003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (679, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (679, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630619940008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (681, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (681, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630619940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (685, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (685, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630623539863, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (692, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (692, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630627140001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (721, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (721, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630655940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (97, 'STRING', 'nowDate', '2021-08-26', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (115, 'STRING', 'nowDate', '2021-08-26', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (115, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1629971546376, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (406, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (406, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308205012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (407, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (407, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308210006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (408, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (408, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308215002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (409, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (409, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308220006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (410, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (410, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308225010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (411, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (411, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308230001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (412, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (412, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308235001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (413, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (413, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308240003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (414, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (414, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308245001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (415, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (415, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630308250015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (484, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (484, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630321140015, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (494, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (494, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630357140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (498, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (498, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630371540000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (518, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (518, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630447140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (523, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (523, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630468740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (525, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (525, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630475940002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (545, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (545, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630501140011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (568, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (568, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630529940001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (577, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (577, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630540740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (591, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (591, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630555140001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (595, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (595, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630562340001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (606, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (606, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630569540014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (615, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (615, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630580340011, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (619, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (619, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630580340014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (646, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (646, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630594739853, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (659, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (659, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630605540010, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (683, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (683, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630619940005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (714, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (714, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630648740014, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (331, 'STRING', 'nowDate', '2021-08-30', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (331, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630303140005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (492, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (492, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630349940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (509, 'STRING', 'nowDate', '2021-08-31', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (509, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630411140001, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (524, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (524, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630472340003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (530, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (530, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630490340002, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (540, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (540, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630497540008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (547, 'STRING', 'nowDate', '2021-09-01', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (547, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630504740000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (557, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (557, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630515540006, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (563, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (563, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630522740008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (572, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (572, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630533540007, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (583, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (583, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630547940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (612, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (612, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630576740008, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (617, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (617, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630580340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (623, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (623, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630583940012, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (641, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (641, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630591139780, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (648, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (648, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630594740003, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (651, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (651, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630598340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (654, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (654, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630601940005, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (655, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (655, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630601940000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (660, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (660, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630605539859, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (666, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (666, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630609140000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (676, 'STRING', 'nowDate', '2021-09-02', TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (676, 'LONG', 'time', null, TO_DATE('1970/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630616340000, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (678, 'STRING', 'nowDate', '2021-09-03', TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 0, 0, 'Y');
insert into "ETEST"."BATCH_JOB_EXECUTION_PARAMS" ("JOB_EXECUTION_ID", "TYPE_CD", "KEY_NAME", "STRING_VAL", "DATE_VAL", "LONG_VAL", "DOUBLE_VAL", "IDENTIFYING" ) values (678, 'LONG', 'time', null, TO_DATE('1970/01/01 09:00:00', 'YYYY/MM/DD HH24:MI:SS'), 1630616340002, 0, 'Y');

------- End of ETEST.BATCH_JOB_EXECUTION_PARAMS -------------- Begin of ETEST.BATCH_JOB_INSTANCE-------

insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (1, 0, 'statJob', '930a91857afbd66bdb12975229331f55');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (10, 0, 'statJob', '28ba1e8cc22e06099206ce63073345bc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (311, 0, 'statJob', '389b6299d5344ebf17dde50ce5d20a98');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (322, 0, 'statJob', '563f78f870ce9af79ed442e3a1c0b7fd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (341, 0, 'statJob', '1e252f64cc6d5648cfd30cdd787a725f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (349, 0, 'statJob', 'a60e3a9c918039a86993043d8cbb6e25');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (376, 0, 'statJob', '056fdaa9d2a2b5a2ad93444c1c6b3950');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (382, 0, 'statJob', '6f8aec55e2ebb0846c92ef82d0a42fcc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (401, 0, 'statJob', 'd11b402ef9bf2840a166e844f9a95771');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (419, 0, 'statJob', '42f86ff32278e65f22011ab3b559016b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (423, 0, 'statJob', 'ba50d5e734f40f6a20f34572561210ec');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (435, 0, 'statJob', '4dcec496bab0677a2cf01f872d28bd1e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (476, 0, 'statJob', '99417941e8e6abf1986e03a795e73089');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (485, 0, 'statJob', '4bdbf5b7b966596f8947652927eaadfc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (493, 0, 'statJob', '3cfe0e57f144a57afc0d590a9f38996f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (509, 0, 'statJob', 'a940f1ec405619beba419f4b8ccde083');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (517, 0, 'statJob', '97c6948f8665c90790c4f315fc0d8556');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (534, 0, 'statJob', 'f17656c96b859e2a4e7f6dca310bb263');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (539, 0, 'statJob', '99b86d27f45aac2a1bc165d5dbea4d6d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (548, 0, 'statJob', 'f20a0e3efab92628c99a5144a1dccbb1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (30, 0, 'statJob', 'd9c959f081256262f92bea9701c02397');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (31, 0, 'statJob', 'f1494a76ab674d9f1ef3d6496f9698a9');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (32, 0, 'statJob', '182d31f5f9a15b371a1c2dade3b55ca5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (33, 0, 'statJob', '8bd3e71d3415333456e0b01b1d66301a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (34, 0, 'statJob', '4a7503ae30bb2878dc2105fc5d691792');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (35, 0, 'statJob', '880004d73754188bb7826264032d9303');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (36, 0, 'statJob', '251279534b40b903c727f7e211cd4b57');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (37, 0, 'statJob', 'c55534760864c0600347b5d0adf29659');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (38, 0, 'statJob', '9608513094e1c2397f7c3e0910c0de17');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (39, 0, 'statJob', '2f62a81484fc6a533b17b9cce03bb12d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (40, 0, 'statJob', '9766a96d11c319b83e6dc00e3756ee95');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (41, 0, 'statJob', 'b91cbb9680a28cb21246ae00e0653782');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (42, 0, 'statJob', '60e9d1f7e60faf8f1661fadd742c3f86');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (43, 0, 'statJob', 'c821c4df736736ca37dfb53cb7854586');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (44, 0, 'statJob', 'a1e804bd74f9aada4fa0e8b266fcda02');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (45, 0, 'statJob', '003420c137493d844832d50edb898f39');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (46, 0, 'statJob', '563619edc93a400fd0b83eee11c0f4ec');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (47, 0, 'statJob', '2a9f89b36068ebf393ce74cfc695f800');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (48, 0, 'statJob', 'd0fcc2dff75caebd1075574f78bc329b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (49, 0, 'statJob', 'fd8bfc95bfc751b77b356cd9f77ccc75');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (50, 0, 'statJob', '2a00687e00b940715e5469638dd97a46');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (51, 0, 'statJob', 'b3e8ddd39f447840834ec04f9fb9f747');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (52, 0, 'statJob', '14ed190496cc13e742b5029565eb967e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (53, 0, 'statJob', 'e35eabd399fcdee17341ae364eb472a3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (54, 0, 'statJob', '2bb6efbc4446804fa8a71091dfaaa2ad');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (55, 0, 'statJob', 'e3f4293efa15a6ba8caf13e6113b484e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (56, 0, 'statJob', 'dd6fc3f1d508af25d1f12a6a34155d62');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (57, 0, 'statJob', '36a3dca614e0c23a6aaae9c794f19db8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (58, 0, 'statJob', '88280b7698b1dd71c99a92a68a302dd2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (59, 0, 'statJob', '54291bfda52496640d57e6b8e859b8fb');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (60, 0, 'statJob', '8302b6cc2e6ab24631226f5de834057a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (61, 0, 'statJob', '62b28286459a5f8247a68beae9210601');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (62, 0, 'statJob', '887effa9999d1ef9665a3c2de765a042');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (63, 0, 'statJob', 'b913b48f3f7b55f70e3c5dcbd3dc7bc1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (64, 0, 'statJob', '3cc594d1144b11bf155c8b2296a3a43d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (65, 0, 'statJob', '4ce85101eb1f8d72237d18f0c4955064');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (66, 0, 'statJob', 'b3a2376c0d215c240e0799134d514bcd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (67, 0, 'statJob', 'c0b1ce350ab08fb481ca15a495045516');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (68, 0, 'statJob', '1f665eb5d8b56c4afece80aa411eb14a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (69, 0, 'statJob', 'b0fb4624d5edde7112f0c4cfcfb2b2e9');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (70, 0, 'statJob', 'ceff2960ed279a21d1df93b403ed0d1d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (71, 0, 'statJob', 'bccb7b12a2f7837c274d9dc46f4d6709');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (72, 0, 'statJob', '07c1a4409dc4e738866c40b14717d6e5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (73, 0, 'statJob', '70e5838032fa8033635d317029d83731');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (74, 0, 'statJob', '972df879a324abfe979a0b73c225da45');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (75, 0, 'statJob', '98ecc81a6297767ac6e33cb0a9bd7e85');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (76, 0, 'statJob', 'd982825eabae39232e7f96f586ecb441');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (77, 0, 'statJob', '8e80d3fc34ba200c33bf709bf165773d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (78, 0, 'statJob', 'e5725e209e159fe7e6749b34fa59cbb9');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (79, 0, 'statJob', 'fd27ea517021f945d0dfa83741187b4b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (80, 0, 'statJob', 'd50e6395757e1486a4f117665c9fe5de');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (81, 0, 'statJob', '05510e3889804dfa3f6251a5ca9d83f3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (82, 0, 'statJob', 'd433852749bf26647abbeb2e9872d006');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (83, 0, 'statJob', 'e13877e469ef4e57ef6153e73ffc8982');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (84, 0, 'statJob', '99b1a398523e653e198c6ed3450e3454');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (85, 0, 'statJob', '8e26d8a3f0ebde5b2925e831b28c22e9');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (86, 0, 'statJob', '0913a85d61558424ffea73a187744b37');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (87, 0, 'statJob', '313f221fa16c0975549d41a2a9558c17');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (88, 0, 'statJob', 'a7228ecd588f918c600fbc22fb953cc8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (89, 0, 'statJob', '90f6170f8f29c098caaa2e4ee4435889');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (90, 0, 'statJob', 'e87f10b485cc201b6e33dcdb237792a1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (91, 0, 'statJob', 'c486d33c891bf57f60dbe4cc592999a6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (92, 0, 'statJob', 'a1a38c2c88ac9d25ef015f93d8bfd156');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (93, 0, 'statJob', '393b85e1cf60b14eeaf6243be0d3d5c1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (94, 0, 'statJob', 'cb58dadf6688842ffa9fbff1637a395b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (95, 0, 'statJob', 'c2ec3b39b5410659838eb8cab4a60263');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (96, 0, 'statJob', '1dea2a90b547de5826a441c142302731');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (97, 0, 'statJob', 'bf8e64472d05b761c4f4609c79845156');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (98, 0, 'statJob', 'dfafd508a3173a972db31fc08f0154f5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (99, 0, 'statJob', '1af3da006a33b68cd9de991589aa1448');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (100, 0, 'statJob', 'c5a1ddfdc24675a9eefb49f241ceb69d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (101, 0, 'statJob', '6d17bd7e5f7f5e6acf0257d54b205e78');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (102, 0, 'statJob', '6c9e9d3db6d3fa8c232d7cb047f15e56');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (103, 0, 'statJob', '09efd389ea3019ff1ce0f076c2d98c4d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (104, 0, 'statJob', 'd6425c327e23a76e7407055d1579a330');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (105, 0, 'statJob', '5ca746c850d2a251eb090868d055b972');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (106, 0, 'statJob', 'e37fd8cbddd0671f885d121d031db0c5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (107, 0, 'statJob', 'fca8ca9b623e71fea061150c71d08d3f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (108, 0, 'statJob', '59f07e15b910ede5a069a2a71af492b0');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (109, 0, 'statJob', 'ebcd6405f4f701565046d9cfcafab326');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (110, 0, 'statJob', '070cc8bb7ff381adec2800f07d73d7dd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (111, 0, 'statJob', '18f060e88d7d0c26478697454f4868b0');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (112, 0, 'statJob', '4fd0743cc3811126a055024c34015f7a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (113, 0, 'statJob', 'c746e0c5442f828cb6469fcf4769b7b4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (114, 0, 'statJob', 'ce6e446e65cdb5b6bf7ba0532aabdd23');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (115, 0, 'statJob', '6a0ccae8f13defd5eebff8d2ad82fb40');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (139, 0, 'statJob', 'ab19b3fa8ae9ce43d359098ca37365a3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (323, 0, 'statJob', '90f89ea2a1a6d9aa6bb81c95f3b6a70d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (325, 0, 'statJob', '336c04cfea5db0b711d67db5b4e7b859');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (334, 0, 'statJob', '27547984465b2b60332bc24000378ea6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (366, 0, 'statJob', 'ee19a44c4168dfea641ba650d86a272f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (394, 0, 'statJob', 'a16dbfade555c7f9dc200565e7a4dbc9');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (405, 0, 'statJob', '020fcd2132fe90af5b9c676146789fd8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (410, 0, 'statJob', 'bb5c182a2938c37a1ce5c8a04e640ac2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (443, 0, 'statJob', '37641e653a10cf0fcccf0c393e816354');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (465, 0, 'statJob', 'db1b8333d8d63b74a90d4edde62b8225');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (467, 0, 'statJob', '2fb9f86d65b8ae3ebc49faa102bb6a2f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (478, 0, 'statJob', 'ba2c02cdbfaf037b755b927581b89140');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (482, 0, 'statJob', 'cd69dabb75d302f3d38d3b562638d165');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (486, 0, 'statJob', '40d806534783b764866db38b355318ce');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (519, 0, 'statJob', '84445ebf26cc084ec3fca89f1a478896');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (524, 0, 'statJob', '958ff6b2145cb6253b029ade55c6aca1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (541, 0, 'statJob', '175a9c9fee797c7293a1aa5b337d5570');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (116, 0, 'statJob', 'dd0d5a1247f192b224c2283f466e4392');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (117, 0, 'statJob', '00f0b999dccc779cb833d17183563104');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (118, 0, 'statJob', 'd3cc6d23f67397dccb85c7482e4a89d2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (119, 0, 'statJob', 'fe177f865a4eb83a2b291e14729b61c8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (120, 0, 'statJob', 'd47552b9857572c8b0d9f3a6af68df63');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (121, 0, 'statJob', '8bdce92ad6c3ce950f14d37f43188551');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (122, 0, 'statJob', 'c963168858d3d8f63adbc1d0a2887ddb');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (123, 0, 'statJob', '6f86ae1e90cb3ea7c159245ac6cc9983');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (124, 0, 'statJob', '323fc3bd50e5c77c53506419694bdde6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (125, 0, 'statJob', '65ff440b0dcc41b59618319a175087a6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (126, 0, 'statJob', 'f07e492c05a55fbb2ecb9260d5e192b2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (127, 0, 'statJob', '528c4237df59b57e736816ddd0527c33');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (128, 0, 'statJob', '7cfec306e9fc20f872957e2303571f71');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (129, 0, 'statJob', '26c00b4cd3ead1554891dd96ea5706ff');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (130, 0, 'statJob', '71acd88b520f6e67c8c763e3fb8b85b3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (131, 0, 'statJob', '0a087ef9009061b8a21bcc341c2e1dd0');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (132, 0, 'statJob', 'a297ca11e809d3905059a4c99b97db04');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (133, 0, 'statJob', '8bd695a4acd3607107fee3f3cd86311f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (134, 0, 'statJob', '9241e4e39898cdd5b4f05c9df9cda81a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (148, 0, 'statJob', '533dd0e9908c0911466f4f92f6a3db42');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (202, 0, 'statJob', '280ed1ff0922485cac7ba30b95be4b2e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (203, 0, 'statJob', '5ee02099748ecaf5f9eef4b4631c7f1c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (204, 0, 'statJob', '5b4b89391f688c8ed8b1b9118023169b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (205, 0, 'statJob', '831455891fadef9dc1e10c6d5212f18d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (206, 0, 'statJob', 'c9b285d3b3028895e5a6800a7f48bcad');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (207, 0, 'statJob', '84c6b03120f4531501b5a8710f071a6d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (208, 0, 'statJob', 'e76fb8a9b3c6358e53a8b83a62f80e96');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (209, 0, 'statJob', 'fd760f274ef9a2d62fcb0055a809a280');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (210, 0, 'statJob', 'ee4321ace32609f169f1709dd03e1968');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (211, 0, 'statJob', 'aeefbca54882f0ed6493dc3563374584');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (212, 0, 'statJob', 'c75dd8f83a7e20a52b64f19e65be152d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (213, 0, 'statJob', 'c5adc2a4705c61098097768d5b9097ec');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (214, 0, 'statJob', '6096693eef739f08343d7dbfb26fb73a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (215, 0, 'statJob', 'd2553c2c7f6f25dd741d14a4d765bf58');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (216, 0, 'statJob', '776cd0de15a4c1de16ae6202ba5def3e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (217, 0, 'statJob', 'a470baef3c07d6f7a3f360d781462835');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (218, 0, 'statJob', 'd78ae09c2e290d11f14add6266e3409f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (219, 0, 'statJob', '624399a077a014af5070eb63dfe679e5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (220, 0, 'statJob', 'fc3deffd7888e97e412624a554730a06');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (221, 0, 'statJob', 'd510a5629df7cbb872d56b2e6728ea68');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (222, 0, 'statJob', '84154a9039200a946cba6fca9f26f8a6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (330, 0, 'statJob', 'd9b7dc098aa25fa8cc009059ad498dc5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (339, 0, 'statJob', '1e6e06edab7f31f73a2f92e104f6890e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (353, 0, 'statJob', '999f175bbe22f072af348c5cbd7ecaa8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (363, 0, 'statJob', '41e1685fef66eaca4c9f7468a9e20e7d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (372, 0, 'statJob', 'cb8483af01cb7aa0ac050dc1ffa9cb08');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (375, 0, 'statJob', 'f1707881f260b77f9757870ed32bd50f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (380, 0, 'statJob', '9ec7572e985954a85849278183db571a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (381, 0, 'statJob', '49b8c7138e000f52d8eb8b1f35a3cbf5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (386, 0, 'statJob', 'ebb5568cbaac4efc598d1fffa19f8104');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (393, 0, 'statJob', '426247fe4251e2d150edadd4ab6e4291');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (398, 0, 'statJob', '1545a414382f9578368293bee51e10b1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (422, 0, 'statJob', 'd45e2a74b16bb52115fbd3e0c84b6017');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (425, 0, 'statJob', 'cc05e9f52d95736cf3046f5160ab3ebc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (441, 0, 'statJob', '7958cc3dae8b52a50837a440fc0e9985');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (483, 0, 'statJob', '531dd9a611bb243f2a9dc28221c9a2c7');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (484, 0, 'statJob', '9a3c986ded4f27afca5eece43ef4b931');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (503, 0, 'statJob', 'b72903106a3069ac94088c7023de3055');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (520, 0, 'statJob', '5907dd7fa8f8e5c010c3e3f564b45334');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (522, 0, 'statJob', '255ee4320675cd53e1d79ae241d477fa');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (533, 0, 'statJob', '8a777762025d53e424cf193326d56523');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (6, 0, 'statJob', 'aabc35d40cb659b0d10d5b0ed8133a8f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (7, 0, 'statJob', '9da5eaef8c93bc722eb49457cd4e124c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (161, 0, 'statJob', '3512059fe16216e94bf6444fae32937d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (162, 0, 'statJob', 'e789f20793bb28b83e0b7a3a59a8b08f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (163, 0, 'statJob', '39f9cf5ba615a29c663a2d460175f107');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (164, 0, 'statJob', 'e5600204e9b148af7fd86834ed342cd6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (165, 0, 'statJob', '9aad8a72a56c80f9875e16c1714b8a60');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (166, 0, 'statJob', 'df97613d7f5001001a4e1d18cf95e791');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (167, 0, 'statJob', '23f3917749efa75bd66b383f8a2b09d5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (250, 0, 'statJob', '5e0f0f354362a2c641c6dc7028486edc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (251, 0, 'statJob', '5f3065a5d48655bbbd6158e91e10858b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (252, 0, 'statJob', 'a225f542535145072d4de26631f7edda');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (253, 0, 'statJob', '9dbab9b69443ec673c5ae36777a9f1d6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (254, 0, 'statJob', '0d74121e16b0eb7266af143e2a8b016a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (255, 0, 'statJob', '6a435017d1d9204895928092a4b5ff2b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (256, 0, 'statJob', 'ab8353000a04992dd79afd2206e46487');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (257, 0, 'statJob', '5e8fa8b6d325d8f679139da4f4532994');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (258, 0, 'statJob', '82a25340459b7dcc0b3e5c88bbcff03c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (259, 0, 'statJob', '9120203210d8b5e7ca3d8b917c64fe49');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (300, 0, 'statJob', 'c75f4dc9327736c5fb7eccdfb8af464c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (305, 0, 'statJob', 'd1dec0655e57790cf2db1e6b2650ddb6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (306, 0, 'statJob', 'e359989fe926a422e2575af89f839578');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (307, 0, 'statJob', 'bf877916ed7a1b214842c0158ffb3cc4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (336, 0, 'statJob', '6237da2c1f69b4d43fa1819748e28654');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (361, 0, 'statJob', 'a4dbaf248752132aa694544e933723ce');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (362, 0, 'statJob', '1e3cb66a35103641fdd57040f410ba34');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (368, 0, 'statJob', '3169292e6ed9340da8d6d2ead40c2c3b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (374, 0, 'statJob', '294517099f8d53ccaacb7bc9372c1216');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (387, 0, 'statJob', 'b23948877cfa1e1ae67940c60b615a8b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (402, 0, 'statJob', '3c060febc075271f0d273046cb2ea842');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (449, 0, 'statJob', 'd0ac80e58997e8f30a7b33d7193432fb');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (451, 0, 'statJob', 'dcc6e0678b282fc2445838919f5cbf35');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (462, 0, 'statJob', 'da5b09fb5f291207541eccc6a900b0da');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (479, 0, 'statJob', 'eda6be2583313215df72e6cedcd811c1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (489, 0, 'statJob', '7a34582c089c6b2a0bfed0f530cc5c3d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (511, 0, 'statJob', '53202d4499918c88ff97940c2f45003c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (515, 0, 'statJob', '25c5b8c7bf7a9d1909a3bea63cf478b6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (543, 0, 'statJob', '1bb4a79a8347537d8dd5f65dc6f04f09');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (549, 0, 'statJob', 'ee67aa152945573d551c7331c4e0bc0e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (0, 0, 'statJob', 'd41d8cd98f00b204e9800998ecf8427e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (5, 0, 'statJob', 'adaebf03d1818a301c37bbc7246e786e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (153, 0, 'statJob', 'bcbb99c8b36b16c88f5ba4c35332c916');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (154, 0, 'statJob', '13c8723b7ff76c2deb9c50c0b0518857');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (155, 0, 'statJob', 'b393e388b4b8a4bca7267eabdb50ebdb');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (157, 0, 'statJob', '92a2b792f19ea3b610debbb609a1ad24');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (158, 0, 'statJob', '27a15fb6ca93fd9a7d7d99f65e3df054');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (159, 0, 'statJob', '2d95ec7fbd50bd4a51314df78e2bab53');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (160, 0, 'statJob', '5395c53cf566ac2f01911068b79185e3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (168, 0, 'statJob', '07dbe4a9e42c8401acf3f73f60cc47e4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (169, 0, 'statJob', 'aa217d1d7c090289999268429a614ce6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (170, 0, 'statJob', '7e403c9148a0ef520fcf35f166a1ac9f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (171, 0, 'statJob', 'e698a35c65cf5a56af5da5346a6f77ec');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (172, 0, 'statJob', 'f98e022bec5025d272dd8c128097c707');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (173, 0, 'statJob', '807102436ceb24f96ef85c32f2805bc4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (174, 0, 'statJob', '27fc5bb1e38b002dc8c1c610fdb9e21c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (175, 0, 'statJob', '89a6208c38d0245ff32a5fc76bd2d118');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (176, 0, 'statJob', '2e1345a967e4398c93c8e99f61c80fb2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (177, 0, 'statJob', '73c0b3a9b93f3e70fff5b39a1b1a838a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (178, 0, 'statJob', '899480f6ff4697641edf2412b0bc900f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (179, 0, 'statJob', '476356531f5e092039b5763730a2f133');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (180, 0, 'statJob', '9fa8dd284684bb0b35600ed1405645a9');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (181, 0, 'statJob', '25be4917edf0077e87c8ceee71d387d3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (182, 0, 'statJob', '283648c8a0482473213ebe4b9272d030');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (183, 0, 'statJob', 'f2b68f5008cedd316e7343f6c01c21db');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (184, 0, 'statJob', '3769d4c55cbf130984398e68a45ba7bc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (185, 0, 'statJob', 'efa312be0b2d7746547f5472c2df55c1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (186, 0, 'statJob', '5cb20767d4c999814255b6275e0b0024');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (272, 0, 'statJob', '11f3696fcb5a611528f4f99f4941a955');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (273, 0, 'statJob', '557accf7d67cdea318fe23daa5827038');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (274, 0, 'statJob', '53dcb503d9cc7c5bacfd3feeb648b7d8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (296, 0, 'statJob', '4edb33b36e7e436590fcffbe6bd24d9d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (297, 0, 'statJob', 'bf50e1760d089faf40f08c9519eb2cf4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (301, 0, 'statJob', '1a655f96e075a74375dcf9252e689a59');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (414, 0, 'statJob', 'e20478ad9c7e4bde1c468e6d832ec972');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (424, 0, 'statJob', 'ca9bebb59ce38017619f834c127c4124');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (432, 0, 'statJob', 'fdc8ff3c35370651fad6bea03d8a1349');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (436, 0, 'statJob', '9d04a34c1205fe01e966d6f3dbb5639e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (471, 0, 'statJob', '08792d6bc35a0d86e4e5bd1e71b3d1d0');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (526, 0, 'statJob', '40c52603ad2669cb717d0000cf3850aa');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (527, 0, 'statJob', 'a7bec1cd4d724af789e703deb397be3d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (542, 0, 'statJob', 'e8380af729de5dfa3f4310c5077bc7d3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (544, 0, 'statJob', 'e83427648e7c169f7b9bb81b941fad64');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (4, 0, 'statJob', '564499babbc1b49a565e570fbc2716fc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (9, 0, 'statJob', '66f5876a2724a9743089df8f933856ce');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (11, 0, 'statJob', '61c2ea6d3cd6cc9181bc9d238a9775e4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (12, 0, 'statJob', 'ad6bfcc988e69a731ab42fada375f8de');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (13, 0, 'statJob', 'ca30cb49058002b054c9db5753689543');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (14, 0, 'statJob', '901eed3adde301ffc3a1d0aca7c561f3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (15, 0, 'statJob', 'af45666c63774f74cea75509809ceffb');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (16, 0, 'statJob', 'ac7b75b985c62a57aa89de6668d73a51');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (17, 0, 'statJob', 'f27e41618cb8bf7bce743d36742dc1d0');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (18, 0, 'statJob', '656047a5b8d52024fcd483b8f1ba5df4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (19, 0, 'statJob', 'e7f2e572711a1fba46b65157efe784ac');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (20, 0, 'statJob', 'd68a200cdcd84dd5bb9fcde27bb11dfe');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (21, 0, 'statJob', 'd2946be95079801a1e66aa3fa28caa0a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (22, 0, 'statJob', '30f4beab97122c0765e1b1fbf0baa398');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (23, 0, 'statJob', '10b59c9c71c1c881a1f141f596638854');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (24, 0, 'statJob', '333c731fdce6d3281a582b5d6385b61e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (25, 0, 'statJob', 'daf33f289d2f20b56ce929ed0861b31d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (26, 0, 'statJob', '14b27452ec6861e9f2b2fdbd5866f946');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (27, 0, 'statJob', '2353eeb8b4aca51121db7276f3be5153');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (28, 0, 'statJob', '468448400a3c3a56a1cf4ffd6ee3194b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (29, 0, 'statJob', '28a2a4c8a520554d02f73aca35276960');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (242, 0, 'statJob', 'aeff8f882bdd120d44a084b104c7bde2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (243, 0, 'statJob', 'eaf68ab650dadfa2f7b95161a75f1163');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (244, 0, 'statJob', 'b95865961b6aff24b29fd9f3cced784a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (245, 0, 'statJob', 'b3ccdc3e4e43174f63edcd156d5e0b09');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (246, 0, 'statJob', 'fc69bd90d200525b9cdd091bca9bfa07');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (247, 0, 'statJob', 'ccf94b148cd7ab0814d4f5206126140b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (248, 0, 'statJob', '01316be8a41d3092c92eee9f045f8284');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (249, 0, 'statJob', 'a72bdffa18010fce5a7a7fb0d502c304');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (304, 0, 'statJob', 'c7b7352df735898b3e0488fcaa85e9f2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (324, 0, 'statJob', '2c1dc8b946d473eb2f88a92fbb08bb91');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (352, 0, 'statJob', 'bfba648044b50193ab724f3c658c1823');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (391, 0, 'statJob', '53fcdda04648b48ade5d5204eb47aa0f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (421, 0, 'statJob', '4e90d00477319f91a94254acf73453f4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (433, 0, 'statJob', 'b17811f98620cda60e93b8a6e53edba2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (470, 0, 'statJob', '391480d1c7d5059a2dbeece1bc9b818e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (473, 0, 'statJob', '5d24e887dfb310abaa1df08cb185818f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (530, 0, 'statJob', '51d77bdbb71f4807875c6418699686c1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (535, 0, 'statJob', 'ac9412d39d70d628859052a83ed8d639');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (547, 0, 'statJob', '68fc2648a9028a44a3ea57c36341e7eb');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (140, 0, 'statJob', 'ea3e246829fe2cf92bc981777ef3cb15');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (141, 0, 'statJob', '26de76350bf74367f19ee26a47ffc371');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (142, 0, 'statJob', '63c07a9539794a6269b678d9f5b98fa7');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (198, 0, 'statJob', '3d4f4a9099ed1d49da0b1a96305a6fab');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (199, 0, 'statJob', 'b695ef93b323349858185273e02b1c59');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (200, 0, 'statJob', '882bad1b785dd047f3ac5800110fe425');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (201, 0, 'statJob', '13353feb299182c83a049c70bbac2176');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (308, 0, 'statJob', '0d5cea92a485d54bba499ae239570bd8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (370, 0, 'statJob', '971afdb3297876e7c9a3bbd6533f9c96');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (373, 0, 'statJob', 'fbd9755115f41619be2a442df035941b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (379, 0, 'statJob', 'bdb5a2f7d5b43fcb3516cf346da0315f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (395, 0, 'statJob', 'f60a0b496a0bac8d522b1d069d4b635f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (439, 0, 'statJob', '5c467eef732ed35b30538b84f433fd21');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (448, 0, 'statJob', '211ba2eb4c9d2ce3543b0fb6df7dcce9');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (490, 0, 'statJob', '1a41c414fdf24b462c0b6496617af0ab');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (514, 0, 'statJob', '3cedc56d7b9cba4afd5a8ee503d01bb1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (528, 0, 'statJob', '6700b98773e265f8f1d41b55be9dcdbb');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (545, 0, 'statJob', '0812fb7eec479a06e5f16340a7170cc1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (136, 0, 'statJob', 'fc15d132f1dcf02a622b929c21de2e0d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (137, 0, 'statJob', 'fd080acb92bab99289770e0ac42e2ea5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (138, 0, 'statJob', '0250b2374c357929105d156b06525f7a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (145, 0, 'statJob', '9ca78dbc0fab3340a9c345ffab227f5c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (146, 0, 'statJob', 'feabb642ef3cf57abe1de7c572ecb77a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (149, 0, 'statJob', '21d5532caca1bbc5354762a91e9e4b54');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (150, 0, 'statJob', 'fe53efacfc9cc586f95d6c014cf3fb71');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (151, 0, 'statJob', '0bbda11572771db9374e3b5963fcb55d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (152, 0, 'statJob', '6e82edd478f764ec857d7850a9ec4d76');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (275, 0, 'statJob', '37f93f7572213f325183d917d0ff374e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (276, 0, 'statJob', '17a2b3593482171f873de5fa48afb159');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (277, 0, 'statJob', '4c4686dc697b4a756cb1a5770bf4ab11');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (278, 0, 'statJob', 'b955d92a5a0a596180d2465c72a428e4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (279, 0, 'statJob', 'f373d51efb4ca0bf13e1a82140dd464b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (280, 0, 'statJob', 'ad203a872b232262f7c508d6e3dcb6e8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (281, 0, 'statJob', 'cdceb260c2d5be7486d630583ff77050');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (282, 0, 'statJob', '1cfd0b41dffb1736aeafddc2e9357feb');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (283, 0, 'statJob', '1956aacb325d9e3833afbbbe2127464b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (284, 0, 'statJob', '9d0683adecd6b98e3534a84e3a3517a3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (303, 0, 'statJob', '7fda92692e893ac30331db8768c75d54');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (314, 0, 'statJob', '6842ca9bd09538da66e5783b53f305b7');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (315, 0, 'statJob', 'bacedbe4232bb909882c9f1871141ce9');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (333, 0, 'statJob', '2595144a851472762afd895d7bb27e63');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (338, 0, 'statJob', '1f9267e3abf75bf7dbb5deb8d3b04318');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (346, 0, 'statJob', '694d0c0a5608302214c2bd08373c165e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (348, 0, 'statJob', '74397b93d6b30c6c816d037f15a3b544');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (351, 0, 'statJob', '0ecd3f49ebd10843b12ab564c1dba6a6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (385, 0, 'statJob', 'f8e6053ea739faa254c133c1523b9bb5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (404, 0, 'statJob', '072bec849bf3fe540415afe4c4339637');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (415, 0, 'statJob', '58de240d286653f1201bda055387321c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (416, 0, 'statJob', '720620c4f4f12b908e58af3efd74c814');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (418, 0, 'statJob', '27bff22e6238bc3d9639718be5c120d3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (420, 0, 'statJob', 'e65f04c15d8fe251730ed1f70c19e2de');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (427, 0, 'statJob', 'bd882276be61e72d2e14fa964a7dd74e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (429, 0, 'statJob', '89f27596f570a50a35bece8b89b9bbe0');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (460, 0, 'statJob', '729f4e40a1f7803973b982bf9b94842d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (463, 0, 'statJob', '61dbc8732defb44831096be3658eef70');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (464, 0, 'statJob', 'fa2958c0773292579e0dc5df33051f35');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (474, 0, 'statJob', 'd91c91fe5a8d7fbd6faa091051cfd601');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (488, 0, 'statJob', '2c5495091541c58794c7b39f22cbe597');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (491, 0, 'statJob', 'f1e7ef395e9d0af4d39ef961a40d66aa');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (496, 0, 'statJob', 'f551cbc67b37a8f9c9e2b844574f158b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (507, 0, 'statJob', '841a0ba6f016aad103b1b1483fcff000');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (518, 0, 'statJob', 'e2df21cb67de41fdf6b0440887354651');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (531, 0, 'statJob', '4367964edd4d0f8ecd93f70ce22276a4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (532, 0, 'statJob', '0c9bc03ee280af372f82cfbace694e20');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (540, 0, 'statJob', '58f71c08db7dc8255ba79478c75aa8ff');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (143, 0, 'statJob', '8b83d12934f5e7e580b719ab9b6e58f8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (144, 0, 'statJob', '40c0a3cd716b21c7e4164f76f39aff36');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (309, 0, 'statJob', 'bef90e3d2164fbfdf2fc9f95ab203fcd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (319, 0, 'statJob', 'c733cbd9c418b63dcb9c20052192be01');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (320, 0, 'statJob', '9cfaeedf3e6126b9223e91b5be7a560c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (329, 0, 'statJob', 'c52b8f9599f49fb492bec68f677a195d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (335, 0, 'statJob', '51e030055b35aad62667a70978a87361');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (369, 0, 'statJob', 'b33ae4a8db7abbc7e6670e1226b89772');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (390, 0, 'statJob', 'e3e4a2a50e3107d63fccd6cb69932b4f');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (407, 0, 'statJob', 'ee7a6a166344a4038ac3bc151f14a94c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (409, 0, 'statJob', '994a874df006a0f9f26a5e5b836d6ff8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (444, 0, 'statJob', '84937db8cdd20de3d61f13afd16a7230');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (452, 0, 'statJob', '81d1930faeb2814ac894ebd8d5473e3e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (495, 0, 'statJob', '44e6e7e47b8105279ae41c22e44d3717');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (501, 0, 'statJob', '9488c6acd629ca813a78b87ff5202c50');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (505, 0, 'statJob', '81be551be18747f406fa52cf1f4b4a8a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (516, 0, 'statJob', 'a440886909b18a62a2daf00dfb5e2a75');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (523, 0, 'statJob', '55853cd20e5fb68d4c77e483eb897d84');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (536, 0, 'statJob', 'b83397eabf1e3632df1d6e7659ae2a9c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (187, 0, 'statJob', '895ebaad5b2cf7d7f259c553d17a3b51');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (188, 0, 'statJob', '65446af5e3b91065f60b970994c50522');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (189, 0, 'statJob', '54b140556fd545b59c29e2620b7f34ac');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (190, 0, 'statJob', '672d62923d5aa1c8e67b781d1bf03d90');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (191, 0, 'statJob', 'cec69da1a7dced38e32fa65251d149c1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (192, 0, 'statJob', '7f2ea36c00b6e1ae30d28496eb6644b8');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (193, 0, 'statJob', '04bc114c79e3182aa457453b37188cf5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (194, 0, 'statJob', 'dcefe4eb8337296ae3461356d177c4ff');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (195, 0, 'statJob', 'f7fbc560257f6a38db57d4f4e0696ecd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (196, 0, 'statJob', '2d836a4a7ccefd85092fda32d24c2a08');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (197, 0, 'statJob', '9e3f33a17fecfd74242974c44d1c4f92');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (233, 0, 'statJob', '4701fb7b5d2969a7f8fba73c146290b2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (234, 0, 'statJob', '48b0d05ddd8e4c2246bf1a5924275df4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (235, 0, 'statJob', 'a4db961ab7f8abb664485af1a2d0cf61');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (236, 0, 'statJob', '0d1a2881f407e999dccc68265985987e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (237, 0, 'statJob', '511df3e1e825b5a1e9b984f522eb9a8d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (238, 0, 'statJob', 'af94fc865e3cd7110b2695c569c1ed03');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (239, 0, 'statJob', '30f016f8bdea5b48b5e402c2af9b6bab');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (240, 0, 'statJob', 'bce20d6da09467714e91eaa1f8bbdd57');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (241, 0, 'statJob', '10cffbc2aaa21195939431b2324d3895');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (260, 0, 'statJob', '0d63d6cfcd05357cede00fe8ee5dbabd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (261, 0, 'statJob', '22069e21e8431ea67cd8e26b30eaa31c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (262, 0, 'statJob', 'dd9897ecf1c9bfe1f145492eb96cba6c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (263, 0, 'statJob', 'b9af6bba56e3794ea3d40703c69a73fd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (264, 0, 'statJob', 'fb5767bd38ba327a680d492638b16641');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (265, 0, 'statJob', '8099f238f887c9ad2abc461128e45d8d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (266, 0, 'statJob', '89ce6b0877ef391da17e4f2a97c20625');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (267, 0, 'statJob', '32875e8f541cd852f6d641ebc0f06acc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (268, 0, 'statJob', '26c6758ae9a0e94445fca9c22245be4b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (269, 0, 'statJob', '4120a133bc4d0ffa5fa3ef8d74f6b17a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (270, 0, 'statJob', 'cdfc1fc9eed5d5b07b6e79044ef94a4e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (271, 0, 'statJob', '3c2b0ce49cc5600383c7ba12ae307bd1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (285, 0, 'statJob', '6fa27b105750aeceaa1f72481bb15d58');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (286, 0, 'statJob', 'dbc97ff94fb207b2836351a90f7d7b1b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (287, 0, 'statJob', '214431e0f5c6a9dd23c756be6d8fb2eb');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (288, 0, 'statJob', '0646455457be438f3dfbfdb2eb4d80a2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (289, 0, 'statJob', 'aadfe4e09f43d89f3fe41e6311ea3c23');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (290, 0, 'statJob', '3be0d918ca68d48b2748c67832060b79');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (292, 0, 'statJob', 'f4ed4a86ef096050f38f30819879fac1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (293, 0, 'statJob', '90e0bb51e1039e0256a8fecbea32dac5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (294, 0, 'statJob', '718d9e0ec2ac6716e66f21c9c169c751');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (295, 0, 'statJob', '0717043d5721e2a245cfb6aacfa9d59c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (298, 0, 'statJob', 'f3a82d8add94ec99e9b4fee66ef6defd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (299, 0, 'statJob', 'bbfe6b5ae838bcc5b6e41af1f818c59c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (317, 0, 'statJob', '2d76e877b76260b62c3c4822995566bb');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (318, 0, 'statJob', '7e98298e45c054d880256b9b1ee64e03');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (321, 0, 'statJob', 'a5393c1e685c1c9698773c1127e23de7');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (326, 0, 'statJob', '3b767636f7876c7edfffb973a1073484');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (347, 0, 'statJob', '3a79967e231240a0a814b025d434afda');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (378, 0, 'statJob', '11c75866f68f554685c91ef047ad9d3b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (384, 0, 'statJob', 'a5b3c928813fe2edb623631dc58d7271');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (389, 0, 'statJob', '22ce73b9101e71629e8e6ca8e06d97fd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (396, 0, 'statJob', '4e3378e46d7bff0d6bc4cd47056ddc09');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (406, 0, 'statJob', '1df48fae733a21cca83ba122cfabcfdf');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (411, 0, 'statJob', '744f1dcbf691dc7fcf7fda56a35385c9');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (426, 0, 'statJob', '95a273521da9ed80751e605a17eb7f38');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (431, 0, 'statJob', 'ea8a93784d1274b70a5db42cc5d413c2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (450, 0, 'statJob', '37824089ca599cb10f19bf9a46d3bea2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (492, 0, 'statJob', 'bbc6e8c2b9d5e62f569380329a894f06');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (498, 0, 'statJob', 'bf68fe7730a21fb2f1dbf8c8c74d88ec');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (508, 0, 'statJob', 'a23ecf48789d381a8f5eeb7a5c8b6ab4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (510, 0, 'statJob', '43beaa3ef880c69413686cfe23327267');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (512, 0, 'statJob', '4d96ff54c239d4329c8894f5c06ed4a6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (525, 0, 'statJob', 'ca13a77ee9cb41e05e4fe9f35594a212');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (2, 0, 'statJob', '5604bfd98e4c1669b94241a4535da4dc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (3, 0, 'statJob', '7b7e611c10540fac92d1669d6559942a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (313, 0, 'statJob', '6c6caa97b5ab75819d1a8c3d7db74dbc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (328, 0, 'statJob', '69f69bb78c465b40170e5ab9248e6627');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (332, 0, 'statJob', '5dda5a7db1d0a9da985f80d152dcdebc');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (340, 0, 'statJob', '87ebd17fc6a664d047379bc0fbce7d7e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (364, 0, 'statJob', '6d91be7302a248e21d4b852822d5808d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (371, 0, 'statJob', '308a5828946b140082d195a78d47a986');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (430, 0, 'statJob', 'bf4adae638c993e50cf6ceb4fd5c2b05');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (445, 0, 'statJob', 'f6eadfc42103d3b0b21daa813cf69aef');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (494, 0, 'statJob', '5861c14c282595eb2de072d9fc297888');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (500, 0, 'statJob', '730608d085f9241f8377727b170dd664');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (502, 0, 'statJob', '33b1415bf099179894092dea2769d7c5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (506, 0, 'statJob', '59fa3e59b766759694c4fa4e290aa57e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (513, 0, 'statJob', '458c7216f6c8230771f55b6046014a49');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (546, 0, 'statJob', 'f630e980a8fd268e82b8967025cb92e5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (8, 0, 'statJob', 'aef6f3da3cb24dba5cf3467f3f788660');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (223, 0, 'statJob', '49e232df556a936a557eef570c2cb6da');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (224, 0, 'statJob', '9f0199867ddb3219bc49d77874164f5a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (225, 0, 'statJob', '4f2f1f7f0318c781d70cb8973bfd78b6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (226, 0, 'statJob', '568a9da1e58b69ea637965ac49e99329');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (227, 0, 'statJob', 'd68433c8d56de813944f2e39a25ef1fa');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (228, 0, 'statJob', '18f2f9b40498b657eeecbb448f7e809e');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (229, 0, 'statJob', '75846ec6b3b5fddd7df3cd3b599dfb48');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (230, 0, 'statJob', '9d6656cb9970726bf3afc910dd2b6ced');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (231, 0, 'statJob', '60da01b60972ebc50ed0b06d7ba02521');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (232, 0, 'statJob', 'aa1d7ceda54bb0de0c6ce2c1f3e4e434');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (302, 0, 'statJob', 'eeade93245cfc606fdf282406e0b1dfa');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (312, 0, 'statJob', '9905381c93f99ff0d419d7053ff26a5d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (316, 0, 'statJob', '18de1684c17c463a9a88e3e26201c021');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (337, 0, 'statJob', 'aba249887d51dcd173f13a662ad8aca4');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (343, 0, 'statJob', '9ed1de2f7b1efd0f0c1492fc13c9b196');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (345, 0, 'statJob', '54e2e6ba319ae0264ac4635b8286706b');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (365, 0, 'statJob', 'f89d45c6a216ad7953b23fcf90b97041');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (388, 0, 'statJob', '579c58c163952b90f5f3fc07cd3065f5');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (397, 0, 'statJob', 'a8cb80284bd241a78a6310537fa10711');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (413, 0, 'statJob', '080de8c249339b218c1a735bdaadccb1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (417, 0, 'statJob', 'ebfb99f78db7fcefa38af35ae7b31605');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (428, 0, 'statJob', '8c382664eedf69d532f7b8c600eadf9a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (438, 0, 'statJob', '6120915b2d0be95bdf36c0e25af4a07d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (442, 0, 'statJob', '5a88a90196329f213c79eb0c2f0bcf15');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (466, 0, 'statJob', '44fe0979bbea54f77f8c00dc90df4237');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (480, 0, 'statJob', 'dcbb7cb61d9198c394c5c31ce6a349fd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (504, 0, 'statJob', '5d1f889c2a8c5a2fd91979b575ad3c9d');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (538, 0, 'statJob', 'dd9db73ba44ef901a3072153d25a0af1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (147, 0, 'statJob', '3a979c3dbcca72beae6146d59035f5a7');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (310, 0, 'statJob', 'c8a3bc44c1ef34046ddc9784f018fb8c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (327, 0, 'statJob', '85a38530c49465959b42cb5541c2ac86');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (344, 0, 'statJob', '3bac261ec6cf1e976dbb00a676802c57');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (350, 0, 'statJob', 'b46daef4a0674d7007366e9589edaef3');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (360, 0, 'statJob', '087e2b80d023e66b178b1ee809a77a5c');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (367, 0, 'statJob', 'ff5e9413b7a25bb53e9dd04687a8807a');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (377, 0, 'statJob', '29b619f2cdc56b8e2b19accbb5a691b2');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (383, 0, 'statJob', '3baa5f8825e6a17746ce63101a7f4000');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (392, 0, 'statJob', 'ec0aef97af428d33834dcc2083351b65');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (403, 0, 'statJob', '9be3403b3027f4f123461e2347ca99c6');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (434, 0, 'statJob', '789e983e685708b851a8c98569240d33');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (440, 0, 'statJob', '5a9dc0fb6498d9959eb61294a5de45ef');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (447, 0, 'statJob', '997605b50a350d3116f648be09176efd');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (461, 0, 'statJob', 'cfecf19ef06c479285eb5b2d6e6f1529');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (469, 0, 'statJob', '46b6d312de075665ce9521107c3ae948');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (472, 0, 'statJob', 'c402e701b63d1003e3e9e56d06a029a1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (475, 0, 'statJob', 'c9da70c73cbf3268647c27bea0a3f871');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (477, 0, 'statJob', '2fa54855cbb47c5834bf90604a89fa79');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (481, 0, 'statJob', '5796c141ffcf12c86b01b82b8048bbc1');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (487, 0, 'statJob', '253b60e5b3fd1661e36c4dd2d07a0a07');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (497, 0, 'statJob', '915d1d0ca2fdc6296773bde474fcc319');
insert into "ETEST"."BATCH_JOB_INSTANCE" ("JOB_INSTANCE_ID", "VERSION", "JOB_NAME", "JOB_KEY" ) values (499, 0, 'statJob', 'bb6b007f8fee8bd50e90406066ff43a0');

------- End of ETEST.BATCH_JOB_INSTANCE -------------- Begin of ETEST.BATCH_STEP_EXECUTION-------

insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (13, 2, 'statStep', 13, TO_DATE('2021/08/26 17:11:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:11:21', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy281.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:104)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:11:21', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (14, 2, 'statStep', 14, TO_DATE('2021/08/26 17:11:39', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:11:41', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:106)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:11:41', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (30, 2, 'statStep', 30, TO_DATE('2021/08/26 17:37:38', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:37:40', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:116)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:37:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (6, 2, 'statStep', 6, TO_DATE('2021/08/26 16:52:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:52:27', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy229.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:100)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 16:52:27', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (7, 2, 'statStep', 7, TO_DATE('2021/08/26 16:53:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:53:17', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:101)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 16:53:17', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (8, 2, 'statStep', 8, TO_DATE('2021/08/26 16:59:51', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:59:51', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.ClassCastException: class java.util.Date cannot be cast to class java.sql.Date (java.util.Date is in module java.base of loader ''bootstrap''; java.sql.Date is in module java.sql of loader ''platform'')
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:96)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodI', TO_DATE('2021/08/26 16:59:51', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (11, 2, 'statStep', 11, TO_DATE('2021/08/26 17:10:41', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:10:43', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:104)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:10:43', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (16, 2, 'statStep', 16, TO_DATE('2021/08/26 17:19:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:19:25', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy281.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:111)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:19:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (33, 3, 'statStep', 86, TO_DATE('2021/08/26 18:30:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:30:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/26 18:30:27', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (34, 3, 'statStep', 92, TO_DATE('2021/08/26 18:32:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:32:51', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/26 18:32:51', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (37, 3, 'statStep', 110, TO_DATE('2021/08/26 18:46:42', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:46:43', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/26 18:46:43', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (38, 3, 'statStep', 112, TO_DATE('2021/08/26 18:49:46', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:49:47', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/26 18:49:47', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (39, 3, 'statStep', 113, TO_DATE('2021/08/26 18:50:07', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:50:07', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/26 18:50:07', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (41, 3, 'statStep', 119, TO_DATE('2021/08/26 18:53:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:53:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/26 18:53:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (151, 3, 'statStep', 300, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (152, 3, 'statStep', 301, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (153, 3, 'statStep', 302, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (154, 3, 'statStep', 303, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (155, 3, 'statStep', 304, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (156, 3, 'statStep', 305, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (157, 3, 'statStep', 306, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (158, 3, 'statStep', 307, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (159, 3, 'statStep', 308, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (160, 3, 'statStep', 309, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (161, 3, 'statStep', 310, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (162, 3, 'statStep', 311, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (163, 3, 'statStep', 312, TO_DATE('2021/08/27 11:42:02', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (164, 3, 'statStep', 313, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (4, 2, 'statStep', 4, TO_DATE('2021/08/26 16:50:43', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:50:43', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:89)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at', TO_DATE('2021/08/26 16:50:43', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (10, 2, 'statStep', 10, TO_DATE('2021/08/26 17:07:37', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:07:38', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:103)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:07:38', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (32, 3, 'statStep', 84, TO_DATE('2021/08/26 18:28:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:28:54', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/26 18:28:54', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (165, 3, 'statStep', 314, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (166, 3, 'statStep', 315, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:03', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (167, 3, 'statStep', 319, TO_DATE('2021/08/27 11:47:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:47:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:47:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (168, 3, 'statStep', 320, TO_DATE('2021/08/27 11:48:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:48:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:48:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (169, 3, 'statStep', 321, TO_DATE('2021/08/27 11:49:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:49:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:49:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (170, 3, 'statStep', 323, TO_DATE('2021/08/27 12:33:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 12:33:41', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 12:33:41', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (171, 3, 'statStep', 324, TO_DATE('2021/08/27 16:57:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 16:57:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 16:57:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (172, 3, 'statStep', 325, TO_DATE('2021/08/27 16:57:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 16:57:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 16:57:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (173, 3, 'statStep', 326, TO_DATE('2021/08/27 16:57:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 16:57:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 16:57:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (174, 3, 'statStep', 327, TO_DATE('2021/08/30 11:00:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 11:00:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 11:00:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (175, 3, 'statStep', 328, TO_DATE('2021/08/30 13:30:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 13:30:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 13:30:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (176, 3, 'statStep', 329, TO_DATE('2021/08/30 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 13:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (177, 3, 'statStep', 330, TO_DATE('2021/08/30 14:00:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 14:00:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 14:00:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (178, 3, 'statStep', 331, TO_DATE('2021/08/30 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 14:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 14:59:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (179, 3, 'statStep', 332, TO_DATE('2021/08/30 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 15:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 15:59:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (180, 3, 'statStep', 333, TO_DATE('2021/08/30 16:02:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:02:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:02:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (181, 3, 'statStep', 334, TO_DATE('2021/08/30 16:02:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:02:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:02:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (182, 3, 'statStep', 335, TO_DATE('2021/08/30 16:03:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:03:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:03:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (183, 3, 'statStep', 336, TO_DATE('2021/08/30 16:03:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:03:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:03:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (0, 2, 'statStep', 0, TO_DATE('2021/08/26 16:41:03', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:41:04', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:93)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repea', TO_DATE('2021/08/26 16:41:04', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (1, 2, 'statStep', 1, TO_DATE('2021/08/26 16:47:42', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:47:42', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:88)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at', TO_DATE('2021/08/26 16:47:42', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (2, 2, 'statStep', 2, TO_DATE('2021/08/26 16:48:06', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:48:06', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:88)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at', TO_DATE('2021/08/26 16:48:06', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (3, 2, 'statStep', 3, TO_DATE('2021/08/26 16:48:48', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:48:48', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:88)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at', TO_DATE('2021/08/26 16:48:48', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (12, 2, 'statStep', 12, TO_DATE('2021/08/26 17:11:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:11:09', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy229.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:104)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:11:09', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (31, 3, 'statStep', 31, TO_DATE('2021/08/26 17:38:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:38:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/26 17:38:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (42, 3, 'statStep', 179, TO_DATE('2021/08/27 11:28:29', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:28:31', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:28:31', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (62, 3, 'statStep', 209, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (63, 3, 'statStep', 211, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (64, 3, 'statStep', 212, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (65, 3, 'statStep', 213, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (66, 3, 'statStep', 214, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (67, 3, 'statStep', 215, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (68, 3, 'statStep', 216, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (69, 3, 'statStep', 217, TO_DATE('2021/08/27 11:41:16', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (70, 3, 'statStep', 218, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (71, 3, 'statStep', 219, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (72, 3, 'statStep', 220, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (73, 3, 'statStep', 221, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (74, 3, 'statStep', 222, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (75, 3, 'statStep', 223, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (76, 3, 'statStep', 224, TO_DATE('2021/08/27 11:41:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (77, 3, 'statStep', 225, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (78, 3, 'statStep', 226, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (79, 3, 'statStep', 227, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (43, 3, 'statStep', 189, TO_DATE('2021/08/27 11:41:09', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (44, 3, 'statStep', 191, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (45, 3, 'statStep', 192, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (46, 3, 'statStep', 193, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (47, 3, 'statStep', 194, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (48, 3, 'statStep', 195, TO_DATE('2021/08/27 11:41:11', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (49, 3, 'statStep', 196, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (50, 3, 'statStep', 197, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (51, 3, 'statStep', 198, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (52, 3, 'statStep', 199, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (53, 3, 'statStep', 200, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (54, 3, 'statStep', 201, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (55, 3, 'statStep', 202, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:12', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (56, 3, 'statStep', 203, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (57, 3, 'statStep', 204, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (58, 3, 'statStep', 205, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (59, 3, 'statStep', 206, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (60, 3, 'statStep', 207, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (61, 1, 'statStep', 208, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'), null, 'STARTED', 0, 0, 0, 0, 0, 0, 0, 0, 'EXECUTING', null, TO_DATE('2021/08/27 11:41:13', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (80, 3, 'statStep', 228, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (81, 3, 'statStep', 229, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (82, 3, 'statStep', 230, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (83, 3, 'statStep', 231, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (84, 3, 'statStep', 232, TO_DATE('2021/08/27 11:41:18', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (85, 3, 'statStep', 233, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (86, 3, 'statStep', 234, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (87, 3, 'statStep', 235, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (88, 3, 'statStep', 236, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (89, 3, 'statStep', 237, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:19', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (90, 3, 'statStep', 238, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (91, 3, 'statStep', 239, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (92, 3, 'statStep', 240, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (93, 3, 'statStep', 241, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (94, 3, 'statStep', 242, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (95, 3, 'statStep', 243, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (96, 3, 'statStep', 244, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (97, 3, 'statStep', 245, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (98, 3, 'statStep', 246, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (99, 3, 'statStep', 247, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (100, 3, 'statStep', 248, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (101, 3, 'statStep', 249, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (102, 3, 'statStep', 250, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (103, 3, 'statStep', 251, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (104, 3, 'statStep', 252, TO_DATE('2021/08/27 11:41:21', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (105, 3, 'statStep', 253, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (106, 3, 'statStep', 254, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (107, 3, 'statStep', 255, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (108, 3, 'statStep', 256, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (109, 3, 'statStep', 257, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (110, 3, 'statStep', 258, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (111, 3, 'statStep', 259, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:22', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (112, 3, 'statStep', 260, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (113, 3, 'statStep', 261, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (114, 3, 'statStep', 262, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (115, 3, 'statStep', 263, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (116, 3, 'statStep', 264, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (117, 3, 'statStep', 265, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (118, 3, 'statStep', 266, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (119, 3, 'statStep', 267, TO_DATE('2021/08/27 11:41:23', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (120, 3, 'statStep', 268, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (121, 3, 'statStep', 269, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (122, 3, 'statStep', 270, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (123, 3, 'statStep', 271, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (124, 3, 'statStep', 272, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (125, 3, 'statStep', 273, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (126, 3, 'statStep', 274, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:24', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (127, 3, 'statStep', 275, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (128, 3, 'statStep', 276, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (129, 3, 'statStep', 277, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (130, 3, 'statStep', 278, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (131, 3, 'statStep', 279, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (132, 3, 'statStep', 280, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (19, 2, 'statStep', 19, TO_DATE('2021/08/26 17:23:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:23:17', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy229.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:110)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:23:17', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (20, 2, 'statStep', 20, TO_DATE('2021/08/26 17:23:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:23:59', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy311.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:110)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:23:59', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (21, 2, 'statStep', 21, TO_DATE('2021/08/26 17:24:29', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:24:30', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:108)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	a', TO_DATE('2021/08/26 17:24:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (22, 2, 'statStep', 22, TO_DATE('2021/08/26 17:25:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:25:59', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:108)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	a', TO_DATE('2021/08/26 17:25:59', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (23, 2, 'statStep', 23, TO_DATE('2021/08/26 17:26:17', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:26:17', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:108)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	a', TO_DATE('2021/08/26 17:26:17', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (24, 2, 'statStep', 24, TO_DATE('2021/08/26 17:27:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:27:59', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:106)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:27:59', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (5, 2, 'statStep', 5, TO_DATE('2021/08/26 16:51:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 16:51:37', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:99)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repea', TO_DATE('2021/08/26 16:51:37', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (9, 2, 'statStep', 9, TO_DATE('2021/08/26 17:02:46', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:02:48', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:103)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:02:48', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (25, 2, 'statStep', 25, TO_DATE('2021/08/26 17:31:53', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:31:55', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:105)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:31:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (26, 2, 'statStep', 26, TO_DATE('2021/08/26 17:32:13', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:32:13', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy229.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:106)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:32:13', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (27, 2, 'statStep', 27, TO_DATE('2021/08/26 17:33:33', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:33:33', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy281.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:107)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:33:33', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (36, 3, 'statStep', 97, TO_DATE('2021/08/26 18:36:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:36:11', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/26 18:36:11', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (40, 3, 'statStep', 115, TO_DATE('2021/08/26 18:52:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:52:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/26 18:52:26', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (133, 3, 'statStep', 281, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (134, 3, 'statStep', 282, TO_DATE('2021/08/27 11:41:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (135, 3, 'statStep', 283, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (136, 3, 'statStep', 284, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (137, 3, 'statStep', 285, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (138, 3, 'statStep', 286, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (139, 3, 'statStep', 287, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (140, 3, 'statStep', 288, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (141, 3, 'statStep', 289, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:26', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (142, 3, 'statStep', 290, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (143, 3, 'statStep', 291, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (144, 3, 'statStep', 292, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (145, 3, 'statStep', 293, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (146, 3, 'statStep', 294, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (147, 3, 'statStep', 295, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:41:27', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (148, 3, 'statStep', 296, TO_DATE('2021/08/27 11:41:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (149, 3, 'statStep', 298, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (150, 3, 'statStep', 299, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/27 11:42:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (15, 2, 'statStep', 15, TO_DATE('2021/08/26 17:17:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:17:00', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy229.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:106)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:17:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (17, 2, 'statStep', 17, TO_DATE('2021/08/26 17:19:44', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:19:46', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:111)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:19:46', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (18, 2, 'statStep', 18, TO_DATE('2021/08/26 17:21:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:21:01', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.updateHit(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:109)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(Repe', TO_DATE('2021/08/26 17:21:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (28, 2, 'statStep', 28, TO_DATE('2021/08/26 17:35:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:35:01', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy333.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:117)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:35:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (29, 2, 'statStep', 29, TO_DATE('2021/08/26 17:35:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 17:35:26', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:403)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy156.saveAndFlush(Unknown Source)
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:118)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatT', TO_DATE('2021/08/26 17:35:26', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (35, 2, 'statStep', 95, TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'), 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.ClassCastException: class java.lang.String cannot be cast to class java.sql.Date (java.lang.String is in module java.base of loader ''bootstrap''; java.sql.Date is in module java.sql of loader ''platform'')
	at com.tmax.eTest.Contents.job.StatJobConfiguration.lambda$0(StatJobConfiguration.java:103)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:208)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:152)
	at org.springframework.batch.core.job.AbstractJob.handleStep(AbstractJob.java:413)
	at org.springframework.batch.core.job.SimpleJob.doExecute(SimpleJob.java:136)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:320)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:149)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMe', TO_DATE('2021/08/26 18:34:58', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (325, 3, 'statStep', 478, TO_DATE('2021/08/30 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (335, 3, 'statStep', 488, TO_DATE('2021/08/30 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 23:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (368, 3, 'statStep', 521, TO_DATE('2021/09/01 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 09:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (371, 3, 'statStep', 524, TO_DATE('2021/09/01 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 13:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (377, 3, 'statStep', 530, TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (400, 3, 'statStep', 540, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (401, 3, 'statStep', 541, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (411, 3, 'statStep', 551, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (450, 3, 'statStep', 592, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (468, 3, 'statStep', 610, TO_DATE('2021/09/02 17:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 17:59:02', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (470, 3, 'statStep', 612, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (475, 3, 'statStep', 617, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (481, 3, 'statStep', 623, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (508, 3, 'statStep', 648, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (520, 3, 'statStep', 660, TO_DATE('2021/09/03 02:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (521, 3, 'statStep', 661, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (533, 3, 'statStep', 673, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (534, 3, 'statStep', 674, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (554, 3, 'statStep', 694, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (263, 3, 'statStep', 416, TO_DATE('2021/08/30 16:24:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (264, 3, 'statStep', 417, TO_DATE('2021/08/30 16:24:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (265, 3, 'statStep', 418, TO_DATE('2021/08/30 16:24:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (266, 3, 'statStep', 419, TO_DATE('2021/08/30 16:24:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (267, 3, 'statStep', 420, TO_DATE('2021/08/30 16:24:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (268, 3, 'statStep', 421, TO_DATE('2021/08/30 16:24:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (269, 3, 'statStep', 422, TO_DATE('2021/08/30 16:24:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (270, 3, 'statStep', 423, TO_DATE('2021/08/30 16:24:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (271, 3, 'statStep', 424, TO_DATE('2021/08/30 16:25:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (328, 3, 'statStep', 481, TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (346, 3, 'statStep', 499, TO_DATE('2021/08/31 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 10:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (350, 3, 'statStep', 503, TO_DATE('2021/08/31 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 14:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (427, 3, 'statStep', 567, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (433, 3, 'statStep', 573, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (437, 3, 'statStep', 577, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (438, 3, 'statStep', 578, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (444, 3, 'statStep', 586, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (454, 3, 'statStep', 596, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (455, 3, 'statStep', 597, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (457, 3, 'statStep', 599, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (473, 3, 'statStep', 615, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (483, 3, 'statStep', 625, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (513, 3, 'statStep', 653, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (531, 3, 'statStep', 671, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (548, 3, 'statStep', 688, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (556, 3, 'statStep', 696, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (560, 3, 'statStep', 700, TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (584, 3, 'statStep', 724, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (228, 3, 'statStep', 381, TO_DATE('2021/08/30 16:21:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (229, 3, 'statStep', 382, TO_DATE('2021/08/30 16:21:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (230, 3, 'statStep', 383, TO_DATE('2021/08/30 16:21:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (231, 3, 'statStep', 384, TO_DATE('2021/08/30 16:21:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (334, 3, 'statStep', 487, TO_DATE('2021/08/30 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 22:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (349, 3, 'statStep', 502, TO_DATE('2021/08/31 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 13:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (363, 3, 'statStep', 516, TO_DATE('2021/09/01 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 04:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (434, 3, 'statStep', 574, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (478, 3, 'statStep', 620, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (527, 3, 'statStep', 665, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (567, 3, 'statStep', 707, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (351, 3, 'statStep', 504, TO_DATE('2021/08/31 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (361, 3, 'statStep', 514, TO_DATE('2021/09/01 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 02:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (365, 3, 'statStep', 518, TO_DATE('2021/09/01 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 06:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (376, 3, 'statStep', 529, TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 18:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (415, 3, 'statStep', 555, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (416, 3, 'statStep', 556, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (435, 3, 'statStep', 575, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 07:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (442, 3, 'statStep', 584, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (451, 3, 'statStep', 593, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (459, 3, 'statStep', 601, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (502, 3, 'statStep', 643, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (532, 3, 'statStep', 672, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (537, 3, 'statStep', 677, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (559, 3, 'statStep', 699, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (564, 3, 'statStep', 704, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (337, 3, 'statStep', 490, TO_DATE('2021/08/31 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (338, 3, 'statStep', 491, TO_DATE('2021/08/31 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 02:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (353, 3, 'statStep', 506, TO_DATE('2021/08/31 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 17:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (359, 3, 'statStep', 512, TO_DATE('2021/08/31 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 23:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (380, 3, 'statStep', 533, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (408, 3, 'statStep', 548, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (426, 3, 'statStep', 566, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (431, 3, 'statStep', 571, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (443, 3, 'statStep', 585, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (447, 3, 'statStep', 589, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (458, 3, 'statStep', 600, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (469, 3, 'statStep', 611, TO_DATE('2021/09/02 17:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 17:59:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (515, 3, 'statStep', 655, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (550, 3, 'statStep', 690, TO_DATE('2021/09/03 08:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:58:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 08:58:59', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (558, 3, 'statStep', 698, TO_DATE('2021/09/03 09:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 09:59:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (253, 3, 'statStep', 406, TO_DATE('2021/08/30 16:23:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (254, 3, 'statStep', 407, TO_DATE('2021/08/30 16:23:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (255, 3, 'statStep', 408, TO_DATE('2021/08/30 16:23:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (256, 3, 'statStep', 409, TO_DATE('2021/08/30 16:23:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (257, 3, 'statStep', 410, TO_DATE('2021/08/30 16:23:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (258, 3, 'statStep', 411, TO_DATE('2021/08/30 16:23:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (259, 3, 'statStep', 412, TO_DATE('2021/08/30 16:23:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (260, 3, 'statStep', 413, TO_DATE('2021/08/30 16:24:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (261, 3, 'statStep', 414, TO_DATE('2021/08/30 16:24:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (262, 3, 'statStep', 415, TO_DATE('2021/08/30 16:24:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:24:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:24:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (330, 3, 'statStep', 483, TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (336, 3, 'statStep', 489, TO_DATE('2021/08/31 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 00:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (344, 3, 'statStep', 497, TO_DATE('2021/08/31 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 08:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (345, 3, 'statStep', 498, TO_DATE('2021/08/31 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 09:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (358, 3, 'statStep', 511, TO_DATE('2021/08/31 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 22:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (367, 3, 'statStep', 520, TO_DATE('2021/09/01 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 08:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (374, 3, 'statStep', 527, TO_DATE('2021/09/01 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (378, 3, 'statStep', 531, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (403, 3, 'statStep', 543, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (412, 3, 'statStep', 552, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (424, 3, 'statStep', 564, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (425, 3, 'statStep', 565, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 04:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (429, 3, 'statStep', 569, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (430, 3, 'statStep', 570, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (456, 3, 'statStep', 598, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (471, 3, 'statStep', 613, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (472, 3, 'statStep', 614, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (500, 3, 'statStep', 640, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (191, 3, 'statStep', 344, TO_DATE('2021/08/30 16:08:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:08:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (192, 3, 'statStep', 345, TO_DATE('2021/08/30 16:08:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:08:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (193, 3, 'statStep', 346, TO_DATE('2021/08/30 16:08:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:08:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (194, 3, 'statStep', 347, TO_DATE('2021/08/30 16:08:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:08:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (195, 3, 'statStep', 348, TO_DATE('2021/08/30 16:08:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:08:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (196, 3, 'statStep', 349, TO_DATE('2021/08/30 16:08:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:08:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (197, 3, 'statStep', 350, TO_DATE('2021/08/30 16:08:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:08:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:08:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (198, 3, 'statStep', 351, TO_DATE('2021/08/30 16:18:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:18:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (199, 3, 'statStep', 352, TO_DATE('2021/08/30 16:18:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:18:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (200, 3, 'statStep', 353, TO_DATE('2021/08/30 16:18:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:18:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (201, 3, 'statStep', 354, TO_DATE('2021/08/30 16:18:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:18:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (202, 3, 'statStep', 355, TO_DATE('2021/08/30 16:18:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:18:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (203, 3, 'statStep', 356, TO_DATE('2021/08/30 16:18:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:18:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (204, 3, 'statStep', 357, TO_DATE('2021/08/30 16:18:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:18:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:18:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (205, 3, 'statStep', 358, TO_DATE('2021/08/30 16:19:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (206, 3, 'statStep', 359, TO_DATE('2021/08/30 16:19:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (207, 3, 'statStep', 360, TO_DATE('2021/08/30 16:19:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (208, 3, 'statStep', 361, TO_DATE('2021/08/30 16:19:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (209, 3, 'statStep', 362, TO_DATE('2021/08/30 16:19:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (210, 3, 'statStep', 363, TO_DATE('2021/08/30 16:19:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (211, 3, 'statStep', 364, TO_DATE('2021/08/30 16:19:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (212, 3, 'statStep', 365, TO_DATE('2021/08/30 16:19:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (213, 3, 'statStep', 366, TO_DATE('2021/08/30 16:19:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (214, 3, 'statStep', 367, TO_DATE('2021/08/30 16:19:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (215, 3, 'statStep', 368, TO_DATE('2021/08/30 16:19:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (216, 3, 'statStep', 369, TO_DATE('2021/08/30 16:19:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:19:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:19:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (280, 3, 'statStep', 433, TO_DATE('2021/08/30 16:25:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (281, 3, 'statStep', 434, TO_DATE('2021/08/30 16:25:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (282, 3, 'statStep', 435, TO_DATE('2021/08/30 16:25:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (283, 3, 'statStep', 436, TO_DATE('2021/08/30 16:26:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (284, 3, 'statStep', 437, TO_DATE('2021/08/30 16:26:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (285, 3, 'statStep', 438, TO_DATE('2021/08/30 16:26:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (286, 3, 'statStep', 439, TO_DATE('2021/08/30 16:26:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (287, 3, 'statStep', 440, TO_DATE('2021/08/30 16:26:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (288, 3, 'statStep', 441, TO_DATE('2021/08/30 16:26:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (289, 3, 'statStep', 442, TO_DATE('2021/08/30 16:26:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (302, 3, 'statStep', 455, TO_DATE('2021/08/30 16:27:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (303, 3, 'statStep', 456, TO_DATE('2021/08/30 16:27:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (304, 3, 'statStep', 457, TO_DATE('2021/08/30 16:27:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (333, 3, 'statStep', 486, TO_DATE('2021/08/30 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 21:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (339, 3, 'statStep', 492, TO_DATE('2021/08/31 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 03:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (440, 3, 'statStep', 582, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (446, 3, 'statStep', 588, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (448, 3, 'statStep', 590, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (485, 3, 'statStep', 627, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (504, 3, 'statStep', 644, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (514, 3, 'statStep', 654, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (528, 3, 'statStep', 668, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (541, 3, 'statStep', 681, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (546, 3, 'statStep', 686, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (563, 3, 'statStep', 703, TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (565, 3, 'statStep', 705, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (573, 3, 'statStep', 713, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (217, 3, 'statStep', 370, TO_DATE('2021/08/30 16:20:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:20:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (218, 3, 'statStep', 371, TO_DATE('2021/08/30 16:20:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:20:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (219, 3, 'statStep', 372, TO_DATE('2021/08/30 16:20:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:20:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (220, 3, 'statStep', 373, TO_DATE('2021/08/30 16:20:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:20:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (221, 3, 'statStep', 374, TO_DATE('2021/08/30 16:20:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:20:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (222, 3, 'statStep', 375, TO_DATE('2021/08/30 16:20:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:20:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (223, 3, 'statStep', 376, TO_DATE('2021/08/30 16:20:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:20:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (224, 3, 'statStep', 377, TO_DATE('2021/08/30 16:20:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:20:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (225, 3, 'statStep', 378, TO_DATE('2021/08/30 16:20:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:20:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:20:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (226, 3, 'statStep', 379, TO_DATE('2021/08/30 16:21:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (227, 3, 'statStep', 380, TO_DATE('2021/08/30 16:21:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (315, 3, 'statStep', 468, TO_DATE('2021/08/30 16:28:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (316, 3, 'statStep', 469, TO_DATE('2021/08/30 16:28:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (317, 3, 'statStep', 470, TO_DATE('2021/08/30 16:29:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:29:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (318, 3, 'statStep', 471, TO_DATE('2021/08/30 16:29:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:29:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (319, 3, 'statStep', 472, TO_DATE('2021/08/30 16:29:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:29:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (320, 3, 'statStep', 473, TO_DATE('2021/08/30 16:29:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:29:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (321, 3, 'statStep', 474, TO_DATE('2021/08/30 16:29:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:29:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (322, 3, 'statStep', 475, TO_DATE('2021/08/30 16:29:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:29:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (323, 3, 'statStep', 476, TO_DATE('2021/08/30 16:29:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:29:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (324, 3, 'statStep', 477, TO_DATE('2021/08/30 16:29:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:29:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:29:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (326, 3, 'statStep', 479, TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (342, 3, 'statStep', 495, TO_DATE('2021/08/31 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 06:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (405, 3, 'statStep', 545, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (413, 3, 'statStep', 553, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (467, 3, 'statStep', 609, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (529, 3, 'statStep', 669, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (544, 3, 'statStep', 684, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (566, 3, 'statStep', 706, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 12:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (572, 3, 'statStep', 712, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (578, 3, 'statStep', 718, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (580, 3, 'statStep', 720, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (331, 3, 'statStep', 484, TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (355, 3, 'statStep', 508, TO_DATE('2021/08/31 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (360, 3, 'statStep', 513, TO_DATE('2021/09/01 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (372, 3, 'statStep', 525, TO_DATE('2021/09/01 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 14:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (375, 3, 'statStep', 528, TO_DATE('2021/09/01 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 17:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (379, 3, 'statStep', 532, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (402, 3, 'statStep', 542, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 20:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (417, 3, 'statStep', 557, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (428, 3, 'statStep', 568, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 05:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (453, 3, 'statStep', 595, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (464, 3, 'statStep', 606, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (465, 3, 'statStep', 607, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (477, 3, 'statStep', 619, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (503, 3, 'statStep', 642, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 13:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (512, 3, 'statStep', 652, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (526, 3, 'statStep', 667, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 18:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (538, 3, 'statStep', 678, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (539, 3, 'statStep', 679, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (543, 3, 'statStep', 683, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 06:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (579, 3, 'statStep', 719, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (305, 3, 'statStep', 458, TO_DATE('2021/08/30 16:28:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (306, 3, 'statStep', 459, TO_DATE('2021/08/30 16:28:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (307, 3, 'statStep', 460, TO_DATE('2021/08/30 16:28:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (308, 3, 'statStep', 461, TO_DATE('2021/08/30 16:28:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (309, 3, 'statStep', 462, TO_DATE('2021/08/30 16:28:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (310, 3, 'statStep', 463, TO_DATE('2021/08/30 16:28:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (311, 3, 'statStep', 464, TO_DATE('2021/08/30 16:28:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (312, 3, 'statStep', 465, TO_DATE('2021/08/30 16:28:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (313, 3, 'statStep', 466, TO_DATE('2021/08/30 16:28:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (314, 3, 'statStep', 467, TO_DATE('2021/08/30 16:28:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:28:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:28:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (343, 3, 'statStep', 496, TO_DATE('2021/08/31 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 07:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (348, 3, 'statStep', 501, TO_DATE('2021/08/31 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 12:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (357, 3, 'statStep', 510, TO_DATE('2021/08/31 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 21:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (369, 3, 'statStep', 522, TO_DATE('2021/09/01 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 10:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (370, 3, 'statStep', 523, TO_DATE('2021/09/01 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 12:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (373, 3, 'statStep', 526, TO_DATE('2021/09/01 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (409, 3, 'statStep', 549, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (410, 3, 'statStep', 550, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 23:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (421, 3, 'statStep', 561, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (422, 3, 'statStep', 562, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (474, 3, 'statStep', 616, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 19:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (476, 3, 'statStep', 618, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (517, 3, 'statStep', 657, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (553, 3, 'statStep', 693, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (561, 3, 'statStep', 701, TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 10:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (570, 3, 'statStep', 711, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (582, 3, 'statStep', 722, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 07:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (272, 3, 'statStep', 425, TO_DATE('2021/08/30 16:25:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (273, 3, 'statStep', 426, TO_DATE('2021/08/30 16:25:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (274, 3, 'statStep', 427, TO_DATE('2021/08/30 16:25:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (275, 3, 'statStep', 428, TO_DATE('2021/08/30 16:25:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (276, 3, 'statStep', 429, TO_DATE('2021/08/30 16:25:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (277, 3, 'statStep', 430, TO_DATE('2021/08/30 16:25:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (278, 3, 'statStep', 431, TO_DATE('2021/08/30 16:25:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (279, 3, 'statStep', 432, TO_DATE('2021/08/30 16:25:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:25:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:25:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (332, 3, 'statStep', 485, TO_DATE('2021/08/30 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 20:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (341, 3, 'statStep', 494, TO_DATE('2021/08/31 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 05:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (352, 3, 'statStep', 505, TO_DATE('2021/08/31 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (354, 3, 'statStep', 507, TO_DATE('2021/08/31 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 18:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (362, 3, 'statStep', 515, TO_DATE('2021/09/01 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 03:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (364, 3, 'statStep', 517, TO_DATE('2021/09/01 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 05:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (414, 3, 'statStep', 554, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 00:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (423, 3, 'statStep', 563, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 03:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (449, 3, 'statStep', 591, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 12:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (452, 3, 'statStep', 594, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 14:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (479, 3, 'statStep', 621, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (509, 3, 'statStep', 649, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 00:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (530, 3, 'statStep', 670, TO_DATE('2021/09/03 04:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:58:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 04:58:59', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (536, 3, 'statStep', 676, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (540, 3, 'statStep', 680, TO_DATE('2021/09/03 06:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 06:58:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 06:58:59', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (547, 3, 'statStep', 687, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (551, 3, 'statStep', 691, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (555, 3, 'statStep', 695, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (557, 3, 'statStep', 697, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 09:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (562, 3, 'statStep', 702, TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 11:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (574, 3, 'statStep', 714, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 14:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (576, 3, 'statStep', 716, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (583, 3, 'statStep', 723, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (184, 3, 'statStep', 337, TO_DATE('2021/08/30 16:04:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:04:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (185, 3, 'statStep', 338, TO_DATE('2021/08/30 16:04:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:04:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (186, 3, 'statStep', 339, TO_DATE('2021/08/30 16:04:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:04:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (187, 3, 'statStep', 340, TO_DATE('2021/08/30 16:04:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:04:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (188, 3, 'statStep', 341, TO_DATE('2021/08/30 16:04:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:04:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (189, 3, 'statStep', 342, TO_DATE('2021/08/30 16:04:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:04:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (190, 3, 'statStep', 343, TO_DATE('2021/08/30 16:04:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:04:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:04:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (232, 3, 'statStep', 385, TO_DATE('2021/08/30 16:21:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (233, 3, 'statStep', 386, TO_DATE('2021/08/30 16:21:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (234, 3, 'statStep', 387, TO_DATE('2021/08/30 16:21:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (235, 3, 'statStep', 388, TO_DATE('2021/08/30 16:21:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (236, 3, 'statStep', 389, TO_DATE('2021/08/30 16:21:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:21:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:21:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (237, 3, 'statStep', 390, TO_DATE('2021/08/30 16:22:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (238, 3, 'statStep', 391, TO_DATE('2021/08/30 16:22:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (239, 3, 'statStep', 392, TO_DATE('2021/08/30 16:22:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (240, 3, 'statStep', 393, TO_DATE('2021/08/30 16:22:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (241, 3, 'statStep', 394, TO_DATE('2021/08/30 16:22:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (242, 3, 'statStep', 395, TO_DATE('2021/08/30 16:22:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (243, 3, 'statStep', 396, TO_DATE('2021/08/30 16:22:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (244, 3, 'statStep', 397, TO_DATE('2021/08/30 16:22:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (245, 3, 'statStep', 398, TO_DATE('2021/08/30 16:22:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (246, 3, 'statStep', 399, TO_DATE('2021/08/30 16:22:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (247, 3, 'statStep', 400, TO_DATE('2021/08/30 16:22:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (248, 3, 'statStep', 401, TO_DATE('2021/08/30 16:22:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:22:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:22:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (249, 3, 'statStep', 402, TO_DATE('2021/08/30 16:23:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (250, 3, 'statStep', 403, TO_DATE('2021/08/30 16:23:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (251, 3, 'statStep', 404, TO_DATE('2021/08/30 16:23:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (252, 3, 'statStep', 405, TO_DATE('2021/08/30 16:23:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:23:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:23:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (404, 3, 'statStep', 544, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 21:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (445, 3, 'statStep', 587, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (461, 3, 'statStep', 603, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (462, 3, 'statStep', 604, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (484, 3, 'statStep', 626, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (486, 3, 'statStep', 628, TO_DATE('2021/09/02 21:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 21:59:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (501, 3, 'statStep', 641, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 22:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (510, 3, 'statStep', 650, TO_DATE('2021/09/03 00:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 00:58:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 00:58:59', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (525, 3, 'statStep', 666, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (545, 3, 'statStep', 685, TO_DATE('2021/09/03 07:58:59', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 07:58:59', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 07:58:59', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (571, 3, 'statStep', 710, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 04:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (575, 3, 'statStep', 715, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (347, 3, 'statStep', 500, TO_DATE('2021/08/31 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 11:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (366, 3, 'statStep', 519, TO_DATE('2021/09/01 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 07:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 07:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (436, 3, 'statStep', 576, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 08:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (463, 3, 'statStep', 605, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (480, 3, 'statStep', 622, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 11:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (482, 3, 'statStep', 624, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 20:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (507, 3, 'statStep', 647, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (522, 3, 'statStep', 662, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (535, 3, 'statStep', 675, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 05:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (552, 3, 'statStep', 692, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (569, 3, 'statStep', 709, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (585, 3, 'statStep', 725, TO_DATE('2021/09/03 16:59:01', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:01', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 16:59:01', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (356, 3, 'statStep', 509, TO_DATE('2021/08/31 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 20:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 20:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (406, 3, 'statStep', 546, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (407, 3, 'statStep', 547, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/01 22:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (419, 3, 'statStep', 559, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (420, 3, 'statStep', 560, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (441, 3, 'statStep', 583, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 10:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (460, 3, 'statStep', 602, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (505, 3, 'statStep', 645, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (506, 3, 'statStep', 646, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 23:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (519, 3, 'statStep', 659, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (577, 3, 'statStep', 717, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (581, 3, 'statStep', 721, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (290, 3, 'statStep', 443, TO_DATE('2021/08/30 16:26:40', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:40', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:40', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (291, 3, 'statStep', 444, TO_DATE('2021/08/30 16:26:45', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:45', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:45', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (292, 3, 'statStep', 445, TO_DATE('2021/08/30 16:26:50', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:50', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:50', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (293, 3, 'statStep', 446, TO_DATE('2021/08/30 16:26:55', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:26:55', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:26:55', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (294, 3, 'statStep', 447, TO_DATE('2021/08/30 16:27:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (295, 3, 'statStep', 448, TO_DATE('2021/08/30 16:27:05', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:05', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:05', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (296, 3, 'statStep', 449, TO_DATE('2021/08/30 16:27:10', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:10', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:10', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (297, 3, 'statStep', 450, TO_DATE('2021/08/30 16:27:15', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:15', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:15', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (298, 3, 'statStep', 451, TO_DATE('2021/08/30 16:27:20', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:20', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:20', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (299, 3, 'statStep', 452, TO_DATE('2021/08/30 16:27:25', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:25', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:25', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (300, 3, 'statStep', 453, TO_DATE('2021/08/30 16:27:30', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:30', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:30', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (301, 3, 'statStep', 454, TO_DATE('2021/08/30 16:27:35', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 16:27:35', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 16:27:35', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (327, 3, 'statStep', 480, TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 17:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (329, 3, 'statStep', 482, TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/30 18:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (340, 3, 'statStep', 493, TO_DATE('2021/08/31 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/08/31 04:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/08/31 04:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (418, 3, 'statStep', 558, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 02:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (432, 3, 'statStep', 572, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 06:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (439, 3, 'statStep', 581, TO_DATE('2021/09/02 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 09:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 09:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (466, 3, 'statStep', 608, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 17:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (511, 3, 'statStep', 651, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 15:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (516, 3, 'statStep', 656, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 16:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (518, 3, 'statStep', 658, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 01:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (523, 3, 'statStep', 663, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 02:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (524, 3, 'statStep', 664, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 03:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (542, 3, 'statStep', 682, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/02 21:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (549, 3, 'statStep', 689, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 08:59:00', 'YYYY/MM/DD HH24:MI:SS'));
insert into "ETEST"."BATCH_STEP_EXECUTION" ("STEP_EXECUTION_ID", "VERSION", "STEP_NAME", "JOB_EXECUTION_ID", "START_TIME", "END_TIME", "STATUS", "COMMIT_COUNT", "READ_COUNT", "FILTER_COUNT", "WRITE_COUNT", "READ_SKIP_COUNT", "WRITE_SKIP_COUNT", "PROCESS_SKIP_COUNT", "ROLLBACK_COUNT", "EXIT_CODE", "EXIT_MESSAGE", "LAST_UPDATED" ) values (568, 3, 'statStep', 708, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'), 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', null, TO_DATE('2021/09/03 13:59:00', 'YYYY/MM/DD HH24:MI:SS'));

------- End of ETEST.BATCH_STEP_EXECUTION -------------- Begin of ETEST.BATCH_STEP_EXECUTION_CONTEXT-------

insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (13, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1517/0x0000000800d4f440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (14, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a4f040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (30, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a51040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (32, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1323/0x0000000800bdf840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (42, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1042/0x0000000800966040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (340, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (351, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (369, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (376, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1457/539219692","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (416, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (422, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (438, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (439, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (440, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1573/544114592","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (441, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (442, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1031/1779615656","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (443, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (444, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1594/476599965","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (445, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (446, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (447, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1594/476599965","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (448, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (449, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (450, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1619/163184867","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (451, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (452, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1292/1806101789","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (453, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1357/655066572","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (454, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092c440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (455, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (456, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1454/457559863","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (457, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092c440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (458, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1032/1400324426","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (459, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1316/0x0000000800db9040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (460, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1739386559","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (6, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1508/0x0000000800cf7440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (7, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a50840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (8, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a50c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (11, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a50c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (16, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1517/0x0000000800d4e840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (62, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (63, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (64, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (65, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (66, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (67, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (68, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (69, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (70, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (71, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (72, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (73, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (74, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (75, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (76, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (77, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (78, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (79, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (80, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (81, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (82, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (83, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (84, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (85, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (86, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (87, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (88, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (89, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (90, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (91, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (92, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (93, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (94, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (95, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (96, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (97, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (98, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (99, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (100, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (101, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (102, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (103, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (104, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (105, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (106, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (107, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (108, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (109, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (110, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (111, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (112, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (113, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (114, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (115, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (116, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (117, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (118, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (119, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (120, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (121, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (122, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (123, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (124, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (4, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a50840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (10, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a50c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (38, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1042/0x0000000800966040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (39, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1042/0x0000000800966040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (125, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (126, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (127, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (128, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (129, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (130, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (131, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (132, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (133, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (134, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (135, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (136, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (137, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (138, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (139, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (140, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (141, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (142, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (143, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (144, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (145, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (146, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (147, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1530/0x0000000800e68040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (148, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (149, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (150, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (151, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (152, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (153, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (154, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (0, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a50840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (1, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1508/0x0000000800d25040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (2, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1512/0x0000000800d7ec40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (3, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1513/0x0000000800dc7040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (12, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1508/0x0000000800cf7440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (37, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1042/0x0000000800966040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (155, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (156, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (157, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (158, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (159, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (160, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (161, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (162, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (163, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (164, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (165, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (166, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (170, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a50c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (179, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800c52040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (184, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a49040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (185, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a49040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (186, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a49040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (187, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a49040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (188, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a49040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (189, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a49040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (190, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a49040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (191, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (192, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (193, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (194, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (195, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (196, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (197, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (35, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1042/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (41, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1556/0x0000000800d99c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (43, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (44, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (45, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (46, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (47, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (48, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (49, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (50, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (51, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (52, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (53, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (54, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (55, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (56, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (57, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (58, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (59, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (60, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (61, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1317/0x0000000800cde440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (198, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (199, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (200, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (201, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (202, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (203, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (204, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (205, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (206, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (207, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (208, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (209, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (210, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (171, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (172, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (173, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (211, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (212, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (213, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (214, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (215, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (216, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (228, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1363/0x0000000800c23440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (229, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1363/0x0000000800c23440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (230, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1363/0x0000000800c23440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (231, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1363/0x0000000800c23440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (232, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (233, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (234, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (235, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (236, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (237, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (238, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (239, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (240, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (241, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (242, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (243, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (244, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (245, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (246, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (247, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (248, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (249, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (250, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (251, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (252, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1369/0x0000000800ca0840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (19, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1508/0x0000000800ceec40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (20, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1519/0x0000000800d62840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (21, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a4f040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (22, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1502/0x0000000800cf0440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (23, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1511/0x0000000800d40840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (24, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a51040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (25, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a50840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (26, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1503/0x0000000800cf8440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (27, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1512/0x0000000800d48c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (167, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (168, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (169, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1047/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (176, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1536/0x0000000801275c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (177, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1536/0x0000000801275c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (180, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (181, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (182, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (183, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (272, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1384/0x0000000800dc8c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (273, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1384/0x0000000800dc8c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (274, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1384/0x0000000800dc8c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (275, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1384/0x0000000800dc8c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (276, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1384/0x0000000800dc8c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (277, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1384/0x0000000800dc8c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (278, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1384/0x0000000800dc8c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (279, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1384/0x0000000800dc8c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (280, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1389/0x0000000800dcbc40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (281, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1389/0x0000000800dcbc40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (282, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1389/0x0000000800dcbc40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (283, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1389/0x0000000800dcbc40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (284, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1389/0x0000000800dcbc40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (285, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1389/0x0000000800dcbc40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (286, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1389/0x0000000800dcbc40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (287, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1389/0x0000000800dcbc40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (174, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (175, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a49040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (288, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1389/0x0000000800dcbc40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (289, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1389/0x0000000800dcbc40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (302, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1399/0x0000000800edb840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (303, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1399/0x0000000800edb840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (304, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1399/0x0000000800edb840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (305, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1404/0x0000000800f48840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (306, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1404/0x0000000800f48840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (307, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1404/0x0000000800f48840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (308, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1404/0x0000000800f48840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (309, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1404/0x0000000800f48840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (310, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1404/0x0000000800f48840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (311, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1404/0x0000000800f48840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (312, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1404/0x0000000800f48840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (313, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1404/0x0000000800f48840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (314, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1404/0x0000000800f48840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (325, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (326, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (329, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (330, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (332, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (333, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (334, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (335, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (336, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (337, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (338, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (343, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (344, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (348, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (349, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (352, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (353, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (5, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a50840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (9, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a50c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (217, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (218, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (219, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (220, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (221, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (222, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (223, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (224, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (225, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (226, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (227, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (263, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1379/0x0000000800ce8040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (264, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1379/0x0000000800ce8040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (265, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1379/0x0000000800ce8040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (266, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1379/0x0000000800ce8040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (267, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1379/0x0000000800ce8040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (268, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1379/0x0000000800ce8040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (269, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1379/0x0000000800ce8040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (270, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1379/0x0000000800ce8040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (271, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1379/0x0000000800ce8040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (290, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (291, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (292, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (293, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (294, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (295, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (296, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (297, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (298, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (299, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (300, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (301, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1394/0x0000000800e72040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (33, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1536/0x0000000800d83840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (34, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1042/0x0000000800961440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (315, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1409/0x0000000800f4c040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (316, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1409/0x0000000800f4c040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (317, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1409/0x0000000800f4c040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (318, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1409/0x0000000800f4c040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (319, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1409/0x0000000800f4c040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (320, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1409/0x0000000800f4c040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (321, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1409/0x0000000800f4c040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (322, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1409/0x0000000800f4c040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (323, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1409/0x0000000800f4c040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (324, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1409/0x0000000800f4c040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (327, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1109/0x0000000800a53840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (328, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (342, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (346, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (347, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (350, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (354, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (355, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (357, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (358, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (359, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (360, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (361, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (362, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (363, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (364, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (366, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (367, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (368, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (373, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (374, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (375, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (15, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1508/0x0000000800cf6c40","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (17, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a4f040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (18, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a4f040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (29, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a4f040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (31, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1091/0x0000000800a51040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (36, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1042/0x000000080096e040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (40, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1544/0x0000000800d31440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (253, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/0x0000000800cea440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (254, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/0x0000000800cea440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (255, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/0x0000000800cea440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (256, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/0x0000000800cea440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (257, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/0x0000000800cea440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (258, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/0x0000000800cea440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (259, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/0x0000000800cea440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (260, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/0x0000000800cea440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (261, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/0x0000000800cea440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (262, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/0x0000000800cea440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (331, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (341, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (345, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (365, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (370, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (372, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (378, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1341/141477810","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (379, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (380, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/748546142","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (401, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (402, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (403, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1418/1209919142","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (404, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (405, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (406, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (408, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (409, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (28, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1520/0x0000000800d81840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (178, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1075/0x0000000800a40040","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (339, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (356, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092b440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (371, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (377, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (400, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1374/1232680639","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (407, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (410, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (411, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (412, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (413, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (414, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (415, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (417, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (418, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (419, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (420, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (421, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (423, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (424, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (425, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (426, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (427, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (428, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (429, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (430, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (431, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (432, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (433, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (434, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (435, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/362431917","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (436, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1477/831818547","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (437, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (468, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1375/1710172914","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (470, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1512/1897625568","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (475, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (481, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (508, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (520, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (521, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/188647125","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (533, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (534, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1723/1160163283","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (554, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1791/377521139","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (473, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1512/1897625568","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (483, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1512/1897625568","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (513, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (531, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/188647125","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (548, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (556, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/1999415998","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (560, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1077/66871591","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (584, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (478, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1512/1897625568","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (527, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (567, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (502, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (532, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (537, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (559, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/1999415998","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (564, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/1999415998","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (469, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (515, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (550, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (558, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1077/66871591","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (471, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1308/34711768","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (472, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (500, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1273/1622835733","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (485, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (504, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (514, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1723/1160163283","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (528, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (541, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (546, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (563, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (565, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1954/1776185172","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (573, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (467, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1032/518159731","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (529, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1723/1160163283","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (544, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1723/1160163283","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (566, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (572, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1959/32243792","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (578, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (580, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1078/636537856","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (464, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1333/0x0000000800ca1440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (465, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1475/1389468030","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (477, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (503, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/188647125","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (512, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (526, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/188647125","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (538, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (539, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1723/1160163283","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (543, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (579, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$2032/1146949646","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (474, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1674/1459495129","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (476, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/1806547472","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (517, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (553, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (561, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (570, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (582, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/220558713","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (479, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1548/1726507302","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (509, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1518/1334543578","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (530, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (536, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/188647125","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (540, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (547, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/188647125","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (551, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/188647125","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (555, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (557, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (562, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1947/1312959882","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (574, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (576, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1078/636537856","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (583, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1406/0x0000000800dba840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (461, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1464/710212657","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (462, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1079/1426605553","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (484, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1576/464550740","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (486, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (501, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (510, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (525, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (545, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (571, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/1043773344","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (575, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1959/32243792","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (463, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092c440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (480, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/1806547472","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (482, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1528/1027073251","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (507, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (522, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (535, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (552, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (569, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (585, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1077/697357809","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (505, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1396/278814117","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (506, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1597/1027190552","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (519, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1723/1160163283","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (577, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1415/0x0000000800f74440","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (581, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (466, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1027/0x000000084092f840","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (511, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/188647125","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (516, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/188647125","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (518, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (523, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1086/1700059638","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (524, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1723/1160163283","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (542, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1040/188647125","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (549, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1723/1160163283","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);
insert into "ETEST"."BATCH_STEP_EXECUTION_CONTEXT" ("STEP_EXECUTION_ID", "SHORT_CONTEXT", "SERIALIZED_CONTEXT" ) values (568, '{"@class":"java.util.HashMap","batch.taskletType":"com.tmax.eTest.Contents.job.StatJobConfiguration$$Lambda$1959/32243792","batch.stepType":"org.springframework.batch.core.step.tasklet.TaskletStep"}', null);

------- End of ETEST.BATCH_STEP_EXECUTION_CONTEXT -------------- Begin of ETEST.CS_FAQ-------

insert into "ETEST"."CS_FAQ" ("FAQ_ID", "FAQ_TITLE", "FAQ_CONTENT" ) values (1, '[계정] 비밀번호를 변경하고1 싶어요.', '웹사이트에 로그인하신 후1, PC 웹사이트 우측 상단 혹은 모바일 웹 페이지 하단 페이지에서 이메일 주소를 직접 변경하실 수 있습니다.');
insert into "ETEST"."CS_FAQ" ("FAQ_ID", "FAQ_TITLE", "FAQ_CONTENT" ) values (2, '[계정] 비밀번호1111111111를 변경하고1 싶어요.', '웹사이트에 로그인하1111111111111신 후1, PC 웹사이트 우측 상단 혹은 모바일 웹 페이지 하단 페이지에서 이메일 주소를 직접 변경하실 수 있습니다.');

------- End of ETEST.CS_FAQ -------------- Begin of ETEST.CS_INQUIRY-------

insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (6, 'complete', '질문있어요', 'account', '로그인이 잘 안되어요', null, '문의답변답변', 'e88f0cd4-54bd-4e96-ba53-2d1046b7300b', null, TO_DATE('2021/09/02 16:43:04', 'YYYY/MM/DD HH24:MI:SS'), 'temporaryAdminUUID');
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (9, null, '타이', null, null, null, null, 'e6c91394-02e4-4f8c-a993-641ed52198e0', null, null, null);
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (10, 'waiting', '2021-08-06에 작성한 에러입니', 'accout', '페이지가 안보입니다', null, null, 'e6c91394-02e4-4f8c-a993-641ed52198e0', null, null, null);
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (11, 'complete', '질문있어요', 'account', '로그인이 잘 안되어요', null, null, 'e88f0cd4-54bd-4e96-ba53-2d1046b7300b', null, null, null);
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (12, 'complete', '질문있어요', 'account', '로그인이 잘 안되어요', null, null, 'e88f0cd4-54bd-4e96-ba53-2d1046b7300b', null, null, null);
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (13, 'complete', '질문있어요', 'account', '로그인이 잘 안되어요', null, null, 'e88f0cd4-54bd-4e96-ba53-2d1046b7300b', null, null, null);
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (14, 'complete', '질문있어요', 'account', '로그인이 잘 안되어요', null, null, 'e88f0cd4-54bd-4e96-ba53-2d1046b7300b', null, null, null);
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (15, 'complete', '질문있어요', 'account', '로그인이 잘 안되어요', null, null, 'e88f0cd4-54bd-4e96-ba53-2d1046b7300b', null, null, null);
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (16, 'complete', '질문있어요', 'account', '로그인이 잘 안되어요', null, null, 'e88f0cd4-54bd-4e96-ba53-2d1046b7300b', null, null, null);
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (17, '대기중', 'DSDS 수정', 'ALL', 'SDS', null, null, '541f6d37-acad-488f-b7c8-e097f8b0ec0a', TO_DATE('2021/09/03 17:42:06', 'YYYY/MM/DD HH24:MI:SS'), null, null);
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (18, 'test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6', 'test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6', 'test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6', 'test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6', null, null, 'f834c3c9-ee13-415a-8e63-6247bc419809', TO_DATE('2021/09/03 17:42:13', 'YYYY/MM/DD HH24:MI:SS'), null, null);
insert into "ETEST"."CS_INQUIRY" ("INQUIRY_ID", "INQUIRY_STATUS", "INQUIRY_TITLE", "INQUIRY_TYPE", "INQUIRY_CONTENT", "INQUIRY_URL", "INQUIRY_ANSWER", "USER_UUID", "CREATE_DATE", "INQUIRY_ANSWER_TIME", "ADMIN_UUID" ) values (19, 'test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6', 'test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6', 'test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6', 'test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6test6', null, null, 'f834c3c9-ee13-415a-8e63-6247bc419809', TO_DATE('2021/09/03 17:42:33', 'YYYY/MM/DD HH24:MI:SS'), null, null);

------- End of ETEST.CS_INQUIRY -------------- Begin of ETEST.CS_INQUIRY_FILE-------

insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (7, 'image.jpg', 'image', 6, null, null);
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (8, 'video.mp4', 'video', 6, null, null);
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (13, 'd77834eb-a51b-45ae-b036-6e3e05e854da_13241324.PNG', 'image/png', 9, null, null);
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (14, '90753691-8091-4f5d-8a72-09045d34bea6_제목 없음.png', 'image/png', 9, null, null);
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (18, '20c77b74-beb5-4359-b28f-cfbc100d011d_13241324.PNG', 'image/png', 18, 56949, '13241324');
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (19, '11755f1a-b445-4f8c-abbf-bdebd8450013_character_img (2).png', 'image/png', 17, 35383, 'character_img (2)');
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (20, 'ff99f956-f21f-44ed-9474-aa7ef43b794a_13241324.PNG', 'image/png', 19, 56949, '13241324');
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (15, 'c10dfa42-f077-4b09-988b-c75f2ec07b9a_제목 없음.png', 'image/png', 10, null, null);
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (11, '결제사진2.jpg', 'image', 8, null, null);
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (12, '결제동양상2.mp4', 'video', 8, null, null);
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (5, 'image.jpg', 'image', null, null, null);
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (6, 'video.mp4', 'video', null, null, null);
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (9, '결제사진.jpg', 'image', 7, null, null);
insert into "ETEST"."CS_INQUIRY_FILE" ("INQUIRY_FILE_ID", "INQUIRY_FILE_URL", "INQUIRY_FILE_TYPE", "INQUIRY_ID", "INQUIRY_FILE_SIZE", "INQUIRY_FILE_NAME" ) values (10, '결제동양상.mp4', 'video', 7, null, null);

------- End of ETEST.CS_INQUIRY_FILE -------------- Begin of ETEST.CS_NOTICE-------

insert into "ETEST"."CS_NOTICE" ("NOTICE_ID", "NOTICE_TITLE", "NOTICE_DATE", "NOTICE_CONTENT" ) values (1, '투자 정보 콘텐츠가 개선됩니다.', null, '진단 문제가 1000문제 업데이트 됩니다. 더 많은 문제 풀을 통해 더 정교하고 섬세한 진단 및 학습이 가능해졌습니다. 감사합니다 금융 투자 교육원 드림');
insert into "ETEST"."CS_NOTICE" ("NOTICE_ID", "NOTICE_TITLE", "NOTICE_DATE", "NOTICE_CONTENT" ) values (2, '투자 정보 콘텐츠가 개선됩니다.2', null, '진단 문제가 1000문제 업데이트 됩니다. 더 많은 문제 풀을 통해 더 정교하고 섬세한 진단 및 학습이 가능해졌습니다. 감사합니다 금융 투자 교육원 드림2');

------- End of ETEST.CS_NOTICE -------------- Begin of ETEST.DIAGNOSIS_CURRICULUM-------

insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (1, '성향', '투자현황', '증권사 거래기간', null, null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (2, '성향', '투자현황', '주식투자 비중', null, null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (3, '성향', '투자현황', '보유 종목 수', null, null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (4, '성향', '투자현황', '선호 투자 종목', null, null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (5, '성향', '투자원칙', '투자원칙', null, null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (6, '성향', '리스크', '리스크 감내역량', null, null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (7, '성향', '리스크', '리스크 감내수준', null, 'A', '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (8, '성향', '리스크', '리스크 감내수준', null, 'B', '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (9, '성향', '리스크', '리스크 감내수준', null, 'C', '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (10, '성향', '인지편향', '인지편향', null, 'A', '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (11, '성향', '인지편향', '인지편향', null, 'B', '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (12, '성향', '인지편향', '인지편향', null, 'C', '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (13, '지식', '투자지식', '투자 상식', '종목추천', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (14, '지식', '투자지식', '투자 상식', '투자상식', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (15, '지식', '투자지식', '투자 상식', '투자원칙', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (16, '지식', '투자지식', '종목고르기', '사업가치/재산가치/안전가치', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (17, '지식', '투자지식', '종목고르기', '시장가치', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (18, '지식', '투자지식', '종목고르기', '배당', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (19, '지식', '투자지식', '가격변동 특징', '주식 특징', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (20, '지식', '투자지식', '가격변동 특징', '업종 특징', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (21, '지식', '투자지식', '가격변동 특징', '거시경제 및 최종선택', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (22, '지식', '투자지식', '매매방법', '매매거래', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (23, '지식', '투자지식', '매매방법', '시장상황', null, '출제 보류');
insert into "ETEST"."DIAGNOSIS_CURRICULUM" ("CURRICULUM_ID", "CHAPTER", "SECTION", "SUB_SECTION", "SUBJECT", "SET_TYPE", "STATUS" ) values (24, '지식', '투자지식', '매매방법', '매매전략', null, '출제 보류');

------- End of ETEST.DIAGNOSIS_CURRICULUM -------------- Begin of ETEST.PROBLEM-------

insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (1, 'MULTIPLE_CHOICE', '[{"data":"3년 간 주식투자로 다음과 같은 현금흐름이 발생했을 때, 보유기간 동안 수익률로 올바른 것은?","type":"QUESTION_TEXT"},{"data":"주식 매입 금액 : 100만원\n주식 매도 금액 : 120만원\n배당금 : 10만원\n비용 : 5만원","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["20%","25%","30%","35%"]}]', '[{"data":"투자에서 발생하는 수익률은 다음과 같이 계산한다. 먼저 주식과 채권과 같은 투자 자산을 매도한 가격에서 이를 매입할 때 들어간 금액을 뺀 시세 차익과 채권 이자와 주식 배당처럼 투자 자산에서 발생한 현금흐름을 더한다. 그리로 수수료 등 비용을 차감한다. 이렇게 계산한 금액을 매입 금액으로 나눈 다음 100을 곱해 퍼센트(%)로 환산하면 수익률을 계산할 수 있다. \n\n수익률=(매도 금액-매입 금액±보유 기간 중 현금흐름-비용)/(매입 금액)  ×100\n          =  (120만원-100만원+10만원-5만원)/100만원  ×100 = 25% ","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/06/28 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '투자수익률 계산', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (2, 'MULTIPLE_CHOICE', '[{"data":"1,000만원을 연 복리 6%로 투자해서 2,000만원으로 만드는데 걸리는 시간으로 가장 올바른 것은? (근사치로 구하시오)","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["6년","8년","10년","12년"]}]', '[{"data":"72의 법칙은 복리를 전제로 자산이 2배로 늘어나는 데 걸리는 시간을 손쉽게 계산하는 방식이다. 72를 해당 수익률로 나누면 대략적으로 원금의 2배가 되는 기간을 산출할 수 있다.  \n\n72÷금리= 원금이 2배가 되는 시기(연)\n\n따라서 1000만원의 돈을 연 6%의 복리 상품에 투자하면 원금이 2배가 되는 데 걸리는 시간은 12년(72÷6=12)이다. ","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/06/28 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '72의 법칙 활용', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (3, 'MULTIPLE_CHOICE', '[{"data":"장기 투자성과에 가장 큰 영향을 미치는 것으로 올바른 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["자산배분","종목선정","투자타이밍","리밸런싱"]}]', '[{"data":"투자 전략을 실행하는 과정에서 투자자는 자산 배분, 종목 선정, 투자 시기 포착이라는 3가지 문제에 직면한다. 이중 투자성과에 가장 큰 영향을 미치는 것은 자산배분이다. 1974~1983년 91개의 대규모 연금 플랜을 연구한 결과, 자산 배분이 포트폴리오 운용 성과에 91.5%의 영향을 미치는 것으로 나타났고, 증권 선택(2.7%)과 시장 예측(1.8%)이 미치는 영향은 미미했다.","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/06/28 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '자산배분 중요성 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (4, 'MULTIPLE_CHOICE', '[{"data":"증권시장이 효율적이라고 전제하는 소극적 투자 관리 전술에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["주식을 매수한 다음 장기보유한다","인덱스펀드에 투자한다","시장대표지수를 추종하는 상장지수펀드(ETF)에 투자한다","미래 성장이 예상되는 일부 종목에 집중투자한다"]}]', '[{"data":"전략적 차원에서 결정된 자산 배분의 범위 내에서, 최적의 투자 대안을 선정하는 전술적 차원에서의 대응은 적극적 투자 관리와 소극적 투자 관리로 나눌 수 있다. 이중 소극적 투자 관리(Passive Investment Style)는 증권시장이 효율적이기기 때문에 과대평가 또는 과소평가 된 증권을 찾기 어렵다고 생각한다. 구체적인 종목을 분석하거나 독자적으로 판단하지 않고, 시장 전체의 일반적인 예측을 그대로 받아들여 정보 비용을 줄이고 매수와 매도를 최소화해 거래 비용을 줄인다. 단순 매수 후 보유하는 전략, 인덱스펀드와 ETF를 활용한 투자, 정액 분할 투자가 여기에 해당된다. 일부 종목에 집중투자하는 것은 적극적 투자관리 전략에 해당한다.","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '소극적 투자관리 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (5, 'MULTIPLE_CHOICE', '[{"data":"주당장부가치비율에 대한 설명으로 올바른 것을 모두 고르시오.","type":"QUESTION_TEXT"},{"data":["주가를 주당 순자산으로 나눈 값이다","이 지표가 1보다 낮다면 청산가치가 현재 주가보다 많다는 의미이다","성장성이 높은 기업은 일반적으로 이 지표가 높게 산출된다","보유하고 있는 공장이나 부동산 등 자산이 많아질수록 이 지표는 낮게 산출된다","이 지표의 절대적인 적정 수준이 존재하지 않는다"],"type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"(가)"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["가, 다","나, 다, 라","가, 나, 다","가, 나, 다, 라, 마 모두"]}]', '[{"data":"PBR은 주가를 주당순자산으로 나눈 값으로, 기업이 청산된다고 가정할 때 주주가 건질 수 있는 청산가치의 규모를 주가와 비교하는 지표이다. PBR이 1보다 낮다는 것은 청산가치가 주가보다 크다는 것을 의미하며, 대부분 자산이 많은 기업들의 PBR이 상대적으로 낮은 편이다. 보유 자산은 적지만 성장성에 대한 기대가 높아 주가가 비싸게 형성되는 기업의 PBR은 상대적으로 높은 편이다. PER과 마찬가지로 PBR 역시 절대적인 적정 수준은 존재하지 않으면 상대적 비교에 유용하다.","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '미니테스트', null, null, '이장영', TO_DATE('2021/06/15 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '주식가치지표의 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (6, 'MULTIPLE_CHOICE', '[{"data":"재무제표에 포함되는 항목으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["재무상태표","현금흐름표","주석","산업연관표"]}]', '[{"data":"재무제표는 기업의 모든 경영활동을 회계처리 방식으로 정리한 경영성적표이다. 재무제표는 크게 재무상태표와 손익계산서, 현금흐름표와 자본변동표, 그리고 주석으로 이루어진다.\n지문 1의 재무상태표는 자산/부채/자본으로 구성된 기업의 재무상태를 보여준다.\n지문 2의 현금흐름표는 일정 기간의 현금성 자산의 조달과 지출내역을 보여준다\n지문 3의 주석은 재무상태표 등의 보완설명 등 회계정책과 근거, 질적 정보 등 보충설명을 제공하는 참고사항이다.\n지문 4의 산업연관표는 한국은행이 작성하는 국민계정 분석도표로, 생산과정에 포함된 재화와 서비스의 생산과 처분을 경제활동별로 파악할 수 있는 표이다.","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '재무제표 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (7, 'MULTIPLE_CHOICE', '[{"data":"삼성전자 우에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["삼성전자 우는 삼성전자 주식 중 우선주를 의미한다","삼성전자 우를 보유한 주주는 주주총회에 참석하여 안건에 대해 투표할 수 있다","삼성전자 우를 보유한 주주는 보통주 주주보다 이익배당에서 우선 순위에 있다","삼성전자 우는 보통주보다 일반적으로 배당률이 높은 편이다"]}]', '[{"data":"주권 중 보통주와 우선주의 구분은 무엇보다 의결권의 유무이다. 주주총회에서 안건에 대해 투표를 통해 표결에 참여할 수 있는 주주는 보통주를 보유한 주주이며, 우선주는 의결권은 없는 대신 이익배당에서 우선 순위에 있다. 일반적으로 국내에서 우선주는 보통주보다 배당률이 높은 편이다.","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/06/21 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '우선주 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (8, 'MULTIPLE_CHOICE', '[{"data":"캔들챠트에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["시가보다 종가가 높다면, 캔들챠트의 몸통은 빨간색으로 표시된다","시가보다 종가가 높다면, 결과적으로 주가가 장중에 상승세를 보인 것이다","장중 고가와 저가를 캔들챠트의 몸통 위아래에 표시하여, 장중 가격 등락의 범위를 보여준다","캔들챠트의 위에서 아래까지의 길이가 길어질수록, 장중 가격 등락은 매우 적은 편으로 해석한다"]}]', '[{"data":"국내 주식시장에서 활용하는 챠트는 대부분 캔들챠트이다. 일중에 관찰되는 시가와 고가, 저가와 종가를 한 개의 몸통에서 모두 표시할 수 있다. 국내에서는 시가보다 종가가 높다면 몸통을 빨간색으로 칠하고, 시가보다 종가가 낮다면 몸통을 파란색으로 표시한다. 장중 고가와 저가는 몸통 위아래에 선으로 표시한다. \n따라서 캔들챠트의 위에서 아래까지의 길이가 장중 가격 등락의 폭을 보여준다. 위에서 아래까지의 길이기 길어질수록, 장중 가격등락이 큰 편임을 알 수 있다. 캔들챠트는 일중 주가의 흐름과 변동성을 동시에 보여준다.","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/06/22 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '캔들챠트 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (9, 'MULTIPLE_CHOICE', '[{"data":"중앙은행이 금리인하를 통해 시중금리의 하락을 유도할 때 경제에 끼칠 것으로 예상되는 영향으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["저축의 증가를 통한 경제활동 활성화","예금 등 금리상품 대비 주식, 부동산 등 실물경제 상대적 매력 증가","대출 등 조달금리 하락으로 투자와 생산 증가에 영향","생산활동, 투자활동 방향으로 시중의 유동성 이동"]}]', '[{"data":"중앙은행의 금리인하는 시중 유동성을 저축 등 이자상품에서 실물경제 분야로 이동시켜 경제를 활성화시키려는 노력의 일환이다.","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '기준금리 영향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (10, 'MULTIPLE_CHOICE', '[{"data":"<보기>의 (    ) 안에 들어갈 말로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"data":"일반적으로 경기가 좋아지면 주가는 상승하나 채권 가격이 하락하고, 반대로 경기가 나빠지면 주가는 하락하나 채권 가격이 상승한다. 이는 경기라는 변수에 대해서 주식과 채권 가격이 (         )이기 때문이다","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["상관계수가 1","상관계수가 0","상관계수가 마이너스","상관계수가 플러스"]}]', '[{"data":"상관계수는 -1부터 +1까지 산출되며, +1은 완전히 같은 방향으로 움직이는 것을, -1은 완전히 반대 방향으로 움직이는 것을 의미한다. 상관계수가 마이너스 라는 것은 대체로 반대방향으로 움직인다는 것을 의미한다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '상관계수 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (11, 'MULTIPLE_CHOICE', '[{"data":"증시주변 자금에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["투자자들이 가장 관심 깊게 지켜보는 증시주변자금 지표는 고객예탁금과 신용잔고의 추이인데 일부 전문가는 고객예탁금과 신용잔고를 합한 총계 금액을 종합 증시주변자금으로 계측한다","고객예탁금 : 언제든지 주식매입 자금으로 동원될 수 있는 대기자금 성격이 강하기에 증가할수록 주식시장에 호재로 해석하는 전문가들이 많다","신용잔고 : 언젠가 주식의 매도 등을 통해 상환해야 하기에 일정 기간내 주식 매도가 발생할 가능성이 매우 높은 일종의 매도대기물량으로 계산된다","주식 공매도 : 과열된 주가를 정상화시키기도 하며 증권시장의 유동성을 높이기도 하는 순기능이 있지만 불법적인 매매를 위해 주식 공매도가 실행되는 역기능도 존재한다"]}]', '[{"data":"일부 전문가는 고객예탁금에서 신용잔고를 차감한 금액을 종합 증시주변자금으로 계측하기도 한다. ","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '증시주변자금 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (12, 'MULTIPLE_CHOICE', '[{"data":"환율과 경제의 상호관계에 관한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["자국 상품의 경쟁력에 비해 자국의 환가격이 약해지면 무역수지를 포함한 경상수지나 국제수지의 흑자 증가로 경제성장에 큰 플러스 요인이 된다","다른 나라 통화들에 비해 자국의 환이 싸진다는 것은 다른 나라들의 입장에서는 자국에서 생산되는 상품 또는 주식, 부동산 등 국내 자산들의 가격이 떨어진다는 것과 같은 이야기다","자국 상품의 경쟁력에 비해 자국의 환가격이 강해지면 국부의 가치 증가로 경제성장에 큰 플러스 요인이 된다. 이른바 전 세계적으로 확산되어 있는 소리 없는 전쟁, 환율전쟁의 이유이다","1997년 IMF 외환위기 전까지만 하더라도, 미국과 일본의 플라자 합의로 한국이 수혜를 입었던 3년(1986~1988년)을 제외하고는, 한국은 수십년간 고질적으로 무역수지 적자를 지속하였다"]}]', '[{"data":"수 많은 국가들이 자국의 통화가치를 약하게 하여 외국 통화의 유입을 유도하는 물밑 정책을 펼치고 있다. 이른바 전 세계적으로 확산되어 있는 소리없는 전쟁, 환율전쟁이 그것이다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '환율의 영향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (13, 'MULTIPLE_CHOICE', '[{"data":"행동편향을 통한 실수가 금융투자상품과 서비스를 선택할 때 빈번히 발생하는 이유에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["금융투자상품에 대한 경험과 기회가 적다","많은 금융투자 의사결정이 감정적으로 이루어진다","투자의사결정의 실수가 있었다면 이를 반복하지 않기 위해 노력한다","금융투자자들이 금융상품을 복잡하게 여겨 제대로 알고 의사결정을 하려 하지 않는다"]}]', '[{"data":"지문 1의 경우, 금융상품에 대한 학습경험의 기회가 적기 때문에 행동편향에 따라 행동한다.\n지문 2의 경우, 많은 금융투자 의사결정이 비용 대비 효용을 따지기보다는 스트레스, 걱정, 손실이나 후회에 대한 두려움에 떠밀려 의사결정을 한다.\n지문 3의 경우, 금융소비자가 행동편향에 따라 투자의사를 결정하면 혹독한 대가를 치룬 후 후회하는 모습을 반복할 수 있다. 이런 투자의사결정의 실수를 극복하기 위해서 내가 가진 행동편향을 이해할 필요가 있다.\n지문 4의 경우, 대부분의 금융투자자들은 금융투자상품을 복잡하게 여겨서 제대로 알고 의사결정을 하려는 시간과 노력을 기울이지 않고 행동편향에 따라 선택한다.\n","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '행동편향 발생이유 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (14, 'MULTIPLE_CHOICE', '[{"data":"군중심리는 주식시장이 급격히 오르거나 떨어질 때 자주 작동하여 시장을 과열시키거나 쉽게 얼어붙게 한다. 이러한 군중심리에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["남들이 주식으로 돈을 벌었다는 소식이 들리면 소외감이 커져 군중심리가 발동한다","경험이 적은 금융투자자이거나, 자신감이 없는 금융투자자일수록 군중심리에 현혹되지 않는다","군중심리에 빠지는 것은 다른 이들과 다른 결정을 내리는 것보다, 그들과 함께하는 것이 더 마음이 편하고 쉽기 때문이다","사회에 순응하고 싶어하는 인간의 본능 때문에 대다수와 다르게 행동함으로써 군중에서 소외되고 싶지 않아 군중심리가 생긴다"]}]', '[{"data":"군중심리의 기저에는 사회에 순응하고 군중에서 소외되고 싶지 않은 인간의 본능이 깔려 있다. 이에 따라 남들이 투자를 통해 돈을 벌었다거나 하면 거기서 소외되지 않게 투자에 뛰어든다. 경험이 적은 금융투자자이거나, 자신감이 없는 금융투자자일수록 군중심리에 더 취약하다.","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '군중심리편향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (15, 'MULTIPLE_CHOICE', '[{"data":"<보기>의 (    ) 안에 들어갈 말로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"data":"2001년 바버와 오딘 교수는 주식투자에 있어서 남녀간 차이가 뚜렷이 존재한다는 연구 결과를 발표했다. 이 연구를 통해 남자가 여자보다 (     )편향이 높고, 주식투자에 있어서 남자는 (     )편향으로 인한 과다한 거래로 여자보다 수익률이 낮다고 밝혔다.","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["자기과신","시기추론","매몰비용","현재중시"]}]', '[{"data":"UC-Davis 바버(Brad Barber) 교수와 UC-Berkeley의 오딘(Terrance Odean) 교수는 1991년부터 1997년까지 6년간 무려 35,000 가구의 주식계좌를 살펴본 후 주식투자에 있어서 남녀간 성(性)적 차이가 뚜렷이 존재한다는 연구 결과를 발표했다.\n남자가 여자보다 자기과신 편향이 높아 주가의 상승과 하락을 예상할 수 있다는 확신으로 빈번한 매매를 했을 확률이 높다. 이로 인한 결과는 거래비용 증가와 수익률 악화로 이어질 수 있다.","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '매몰비용편향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (16, 'MULTIPLE_CHOICE', '[{"data":"투자자들의 대화를 듣고, 이를 토대로 B씨에게 예상되는 행동편향으로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"data":"A : 주식투자는 장기로 해야 한다는데 10년, 20년 후 장기적으로 괜찮을 분야가 뭐가 있을까?,\nB : 야 장기는 무슨~, 당장 돈 쓸 일이 태산인데 그래 가지고 어느 세월에 돈벌겠냐? 빨리 오를 종목을 찾아야지! 크게 오르는 종목들이 즐비하고 당장 돈 쓸 일이 태산인데 말이야.,\nA : 그런가? 장기투자를 해야 안정적이라고 해서 말이야.,\nB : 야 환매를 해서 이익을 얻지 못하려면 뭐 하러 투자를 하냐!","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["기준점 편향","현재중시 편향","손실회피 편향","매몰비용의 오류"]}]', '[{"data":"현재중시 편향에 빠진 투자자들은 미래에 비해 현재를 중시하여, 즉각적인 욕망을 충족하려는 충동에 따라 행동하려고 한다. 이에 따라 금융투자에서도 당장의 이익만을 추구하는 단기 투자에 그치고 노후 같은 장기 목표에 대한 투자를 등한시 한다.","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '현재중시편향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (17, 'MULTIPLE_CHOICE', '[{"data":"금융투자회사에 해당하는 것으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["증권회사","선물회사","자산운용회사","상호저축은행"]}]', '[{"data":"우리나라 금융회사는 은행, 비은행 금융회사, 보험회사, 금융투자회사, 기타 금융회사로 분류된다. 이중에 금융투자회사는 증권회사, 선물회사, 자산운용회사, 투자자문회사, 부동산신탁회사, 종합금융회사가 있다. 상호저축은행은 비은행 금융회사다.\n지문1 증권회사는 대표적인 금융투자회사다.\n지문2 선물회사는 금융투자업의 투자중개업(주로 선물)을 주로 하는 금융투자회사다.\n지문3 자산운용회사는 금융투자업 중 집합투자업을 주로 하는 금융투자회사다.\n지문4 상호저축은행은 비은행 금융회사로 비은행 금융회사에는 상호저축은행, 여신금융전문회사, 대부업자, 상호금융이 있다.","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '금융투자회사 종류 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (18, 'MULTIPLE_CHOICE', '[{"data":"공모주와 스팩(SPAC)투자에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["공모주 청약은 증권회사 계좌없이 은행에서도 할 수 있다","공모주 청약은 IPO(Initial Public Offering)를 주관하는 주관사나 공동주관사를 통해서만 청약이 가능하다","스팩이 만기 시점까지 합병하지 못하는 경우에는 투자자에게 투자금의 원금과 이자를 반환하는 수익구조를 가진다","스팩은 공모를 통해 M&A자금을 먼저 마련하며 상장한 후 다른회사와 합병하는 것을 유일한 사업목적으로 하는 Paper Company다"]}]', '[{"data":"지문1 공모주 청약을 위해서는 금융투자회사를 통해서 청약을 하고, 배정받는 주식을 보유하거나 매매를 통해 이익을 얻을 수 있다. 따라서 증권회사의 계좌는 반드시 있어야 청약이 가능하다.\n지문2 주관사나 공동주관사를 통해서만 해당 공모주의 청약을 할 수 있기 때문에 해당 공모주를 주관(또는 공동주관)하는 증권사의 계좌가 필요하다.   \n* IPO(Initial Public Offering) 또는 상장(Listing) : 기업이 발행한 주권이 한국거래소 (KRX)가 정하는 요건에 따른 증권시장에서 거래가 될 수 있는 자격을 부여 받는 것\n지문3 스팩의 큰 특징중의 하나로 합병이 불발될 때는 원금과 이익금을 돌려받는 구조다.\n지문4 스팩은 합병을 목적으로 하는 명목상의 회사다.","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '공모주 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (19, 'MULTIPLE_CHOICE', '[{"data":"투자자 A씨는 월요일에 OO전자 주식을 매수 하였다. 주식이 결제되어 투자자 A씨의 계좌로 입고되는 것은 언제일까?(월요일 ~ 금요일 사이에 공휴일은 없는 것으로 가정)","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["월요일","화요일","수요일","목요일"]}]', '[{"data":"지문1 매수당일 평가금액이 표시되지만, 결제되어 입고 되지는 않는다.\n지문3 매매가 체결된 주식의 결제시점은 체결일(월요일, D일)로부터 3영업일(D+2일)로 규정되어 있어 수요일이 정답이다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '실전주식거래 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (20, 'MULTIPLE_CHOICE', '[{"data":"<보기>의 (    ) 안에 들어갈 말로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"data":"투자실적을 평가하는 지표중에 수익률과 위험요소를 동시에 고려하여 성과를 측정하는 지표를 (         ) 라 한다","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["수익률","벤치마크","위험조정 성과지표","절대수익 추구 성과지표"]}]', '[{"data":"지문1 단순수익률은 위험요소를 고려하지 않는 수익률 기준이다.\n지문2 벤치마크는 수익률을 비교평가하는 기준으로 위험요소인 변동성을 별도록 고려하지는 않는다.\n지문3 수익률과 위험요소를 동시에 고려하여 성과를 측정하는 지표를 위험조정 성과지표(RAPM : Risk ?Adjuisted Performance)라 한다. 선택하는 수익률과 위험지표와 위험을 조정하는 방식에 따라 단위 위험당 초과수익률과 위험조정 수익률로 나눌 수 있다. \n지문4 절대수익 추구 성과지표라는 용어는 없으나, 투자자가 목표로 하는 절대수익률을 기준으로 할 수는 있다. ","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '벤치마크 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (21, 'MULTIPLE_CHOICE', '[{"data":"주식투자 경험 기간이 얼마나 되십니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["해본 적 없음","1년 이하","1~3년","3년 이상"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '투자 경험', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (22, 'MULTIPLE_CHOICE', '[{"data":"자산 중 주식비중은 어느 정도가 적당하다고 생각하십니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["10% 미만","10%~30%","30~50%","50% 이상"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '주식투자 비중', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (23, 'MULTIPLE_CHOICE', '[{"data":"보유한 주식종목 수는 몇 개 입니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["3개 이하","4~6개","7~9개","10개 이상"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '보유종목 수', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (24, 'MULTIPLE_CHOICE', '[{"data":"자신이 가장 많이 투자하고있는 주식 종목의 유형은 무엇입니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["재무상태가 좋고 사업 안정성이 뛰어난 주식(자동차, 반도체 주)","미래 가치를 인정받아 현재 가치보다 높은 가격에 거래되는 주식(제약, 바이오 주)","실적이나 자산에 비해 낮은 가격에 거래되고 있는 주식(헬스케어, 인공지능, 우주항공 주)","이슈가 터졌을 때 급상승과 급하락을 보이는 주식(연예, 정치 주)"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '선호 투자종목', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (25, 'MULTIPLE_CHOICE', '[{"data":"주식투자 어떤 주기로 하고 있습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["기회를 보다가 괜찮은 종목이 생기면 한번에 넣는 편이다","매달 일정한 금액을 적금처럼 넣는 편이다"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '자체 제작', '투자 규칙성', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (26, 'MULTIPLE_CHOICE', '[{"data":"보유한 주식이 목표한 주가로 올랐습니다. 어떻게 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["호재가 이어지고 있기 때문에 좀 더 지켜본다","목표수익은 도달했으니 매도한다"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '자체 제작', '목표에 따른 의사결정 여부', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (27, 'MULTIPLE_CHOICE', '[{"data":"투자한 종목에 호재가 있어 주가가 오를 것으로 예상됩니다. 어떻게 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["가능한 자금을 모아서 주식 투자 비중을 높인다","현재 투자한 주식 투자 비중을 유지하고 상황을 지켜본다"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '포트폴리오 일관성', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (28, 'MULTIPLE_CHOICE', '[{"data":"특정 종목의 호재 소식을 들었을 때, 당신의 행동은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["주식 전문가의 조언이나 지인들로부터 정보를 수집한다","각종 뉴스나 증권 사이트 정보를 통해 시장을 분석한다"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '투자 계획성', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (29, 'MULTIPLE_CHOICE', '[{"data":"현재 자신의 자산 수입은 어떤 상태인가요?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["현재는 고정수입이 있고, 앞으로 유지되거나 증가할 것으로 예상","현재는 고정수입이 있지만, 앞으로 감소하거나 불안정할 것으로 예상","현재는 고정수입이 없지만, 앞으로 고정수입이 생길 것으로 예상","현재는 고정수입이 없고, 앞으로 고정수입이 없을 것으로 예상"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '지속적 수입원 유무', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (30, 'MULTIPLE_CHOICE', '[{"data":"내가 투자하고자 하는 자금의 투자 가능 기간은 얼마나 되나요?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["6개월 미만","6개월 이상~1년 미만","1년 이상~2년 미만","2년 이상"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '자체 제작', '투자가능기간', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (31, 'MULTIPLE_CHOICE', '[{"data":"투자용도로 예상하지 못했던 2000만원이 생겼다면 어떻게 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["예금이나 적금에 투자한다.","채권 또는 채권형 펀드에 투자한다.","주식이나 주식형 펀드에 투자한다.","파생상품이나 선물옵션에 투자한다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, ' Grable & Lytton 투자위험수용성향 문항', '불확실성이익에 대한 위험감수 판단정도', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (32, 'MULTIPLE_CHOICE', '[{"data":"당신이 신뢰하는 친구이자 사업가는 투자자를 모집하고 있습니다. 사업이 성공하면 투자액의 100배에 달하는 이득이 생기지만 실패한다면 모든 투자금액을 잃게 됩니다. 사업이 성공할 확률이 20%일 때, 얼마나 투자하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["전혀 하지 않는다","한 달 치의 월급 정도","세 달 치의 월급 정도","여섯 달 치의 월급 정도"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, ' Grable & Lytton 투자위험수용성향 문항', '개인 자산에 대한 손실의 감내수준', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (33, 'MULTIPLE_CHOICE', '[{"data":"당신은 다음 중 하나를 선택할 수 있습니다. 어느 선택을 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["100만원의 확실한 이득","50%의 확률로 500만원 획득","25%의 확률로 1000만원 획득","5%의 확률로 1억 획득"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, ' Grable & Lytton 투자위험수용성향 문항', '손실과 이득이 발생하는 상황에서의 의사결정', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (34, 'MULTIPLE_CHOICE', '[{"data":"자신의 경험에 비추어볼 때 주식형 펀드에 투자하는 것을 얼마나 편안하게 느끼십니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["전혀 편안하지 않다.","보통이다.","편안하다.","아주편안하다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, ' Grable & Lytton 투자위험수용성향 문항', '불확실성이익에 대한 위험감수 판단정도', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (35, 'MULTIPLE_CHOICE', '[{"data":"당신은 당신이 소망한 해외여행을 위한 저축을 달성했습니다. 해외 여행을 떠나기 3주전 당신은 직업을 잃었습니다. 당신은 어떻게 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["여행을 취소한다.","계획보다 훨씬 값싼 여행을 간다.","새로운 직장을 얻기 위해 준비하는 시간이 필요하므로 계획대로 여행을 간다.","어쩌면 마지막 기회일지도 모르기 때문에 여행을 계획보다 늘린다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, ' Grable & Lytton 투자위험수용성향 문항', '개인 자산에 대한 손실의 감내수준', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (36, 'MULTIPLE_CHOICE', '[{"data":"추가적인 수입을 얻을 기회를 받았습니다. 아래의 사항 중 어떤 선택하겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["확실히 50만원을 얻을 수 있는 기회","50%의 확률로 100만원을 얻거나 50%의 확률로 아무것도 못 얻는 기회","25%의 확률로 300만원을 얻거나 75%의 확률로 아무것도 못 얻는 기회","5%의 확률로 1000만원을 얻거나 95%의 확률로 아무것도 못 얻는 기회"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, ' Grable & Lytton 투자위험수용성향 문항', '손실과 이득이 발생하는 상황에서의 의사결정', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (37, 'MULTIPLE_CHOICE', '[{"data":"당신은 1억원을 유산으로 물려받았습니다. 유언서에 당신은 반드시 아래 항목 중 하나에 유산으로 받은 1억원을 모두 투자하도록 되었습니다. 이러한 조건에서 당신이 선택할 투자항목은 무엇입니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["예적금 계좌","펀드","15가지 주식에 대한 직접투자","금, 은, 석유와 같은 상품에 투자"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, ' Grable & Lytton 투자위험수용성향 문항', '불확실성이익에 대한 위험감수 판단정도', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (38, 'MULTIPLE_CHOICE', '[{"data":"전문가들이 금의 자산가격은 상승 할 것이고 채권의 가격은 하락할 것이라고 예측을 내놓았습니다. 하지만 국채는 안전하다는 것에 동의합니다. 당신의 투자자산 대부분이 고이율 국채로 구성되어 있다면 어떻게 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["국채를 그대로 가지고 있는다.","국채를 모두 팔아서 절반은 은행에 넣고 절반 금에 투자한다.","국채를 모두 팔아서 모두 금에 투자한다.","국채를 모두 팔아서 모두 금에 투자할 뿐 아니라 돈을 더 빌려서 추가로 투자한다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, ' Grable & Lytton 투자위험수용성향 문항', '개인 자산에 대한 손실의 감내수준', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (39, 'MULTIPLE_CHOICE', '[{"data":"당신이 500만원을 받았습니다. 아래 사항 중 하나를 고른다면 어떤 선택을 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["400만원의 확실한 손실","50%의 확률로 300만원 손실을 보거나 50%의 확률로 아무런 손실도 보지 않는 것","25%의 확률로 200만원 손실을 보거나 75%의 확률로 아무런 손실도 보지 않는 것","5%의 확률로 50만원 손실을 보거나 95%의 확률로 아무런 손실도 보지 않는 것"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, ' Grable & Lytton 투자위험수용성향 문항', '손실과 이득이 발생하는 상황에서의 의사결정', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (40, 'MULTIPLE_CHOICE', '[{"data":"2008년 우리나라 경상수지는 17.5억달러 흑자를 기록하였으며, 실업률은 3.2%였습니다. 2015년에는 우리나라 경상수지가 1,051.2억달러로 사상최고치를 경신하였는데, 이때 우리나라 실업률은 몇 %였을까요?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["2.8%","3.6%"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '자체 제작', '잘못된 기준점에 의한 의사결정 판단', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (41, 'MULTIPLE_CHOICE', '[{"data":"당신의 투자지식은 투자자 전체평균 지식보다 잘 안다고 생각합니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["예, 투자지식이 풍부하다고 생각합니다.","아니오, 투자지식은 부족하다고 생각합니다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '자신읜 능력을 실제보다 과대 평가하는 정도', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (42, 'MULTIPLE_CHOICE', '[{"data":"당신의 투자 전문가는 최근 실적이 저조하지만 오랫동안 수익을 얻은 포트폴리오를 대체할 새로운 주식을 추천합니다. 당신은 어떻게 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["기존 주식의 포트폴리오는 꾸준한 성장을 보였기 때문에 보유해야 합니다.","전문가의 조언을 받아들여 기존 주식보다 새로운 주식을 고려합니다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, 'Schwab Brokerage (Quiz)', '과거의 성과에 의한 의사결정', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (43, 'MULTIPLE_CHOICE', '[{"data":"2개의 성장주를 산지 1년 만에 하나는 급등하고 다른 하나는 폭락했습니다. 당신의 투자에 대해 어떻게 평가하십니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["성과에 만족하고 자신감을 얻습니다.","만족하지 않고 폭락한 주식에 대한 투자 과정을 살펴봅니다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, 'Schwab Brokerage (Quiz)', '투자결과를 알고 난 후 자기 판단의 정확성을 과대평가하는 정도 ', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (44, 'MULTIPLE_CHOICE', '[{"data":"최근 주식시장에 대해 투자계획을 검토하고 있습니다. 당신의 행동은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["정보를 업데이트하여 향후 주식시장의 변동으로부터 포트폴리오를 방어하기 위해 주식을 재조정합니다.","장기 목표는 변하지 않았으므로 현재 포트폴리오를 유지합니다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, 'Schwab Brokerage (Quiz)', '판단의 기준을 최근의 정보에 의거한 의사결정', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (45, 'MULTIPLE_CHOICE', '[{"data":"2013년 GDP 성장률은 3.2%이었으며, 그해 종가기준으로 코스피지수는 전년 대비 0.7% 상승하였습니다. 2017년 GDP 성장률이 똑같은 3.2%였다면, 2017년 코스피지수 상승률은 몇 %였을까요?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["10% 이하","10% 상승"]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '자체 제작', '잘못된 기준점에 의한 의사결정 판단', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (46, 'MULTIPLE_CHOICE', '[{"data":"당신의 투자실력은 투자자 전체 평균보다는 잘한다고 생각합니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["예, 평균보다 잘한다고 생각합니다.","아니오, 평균보다 못한다고 생각합니다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '자신의 능력을 실제보다 과대 평가하는 정도', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (47, 'MULTIPLE_CHOICE', '[{"data":"당신은 10% 수익을 기록했지만, 한달 사이 이익금의 30%를 잃었습니다. 주식을 매도 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["예, 손실 난 주식을 정리합니다.","아니오, 전체적으로 포트폴리오는 수익이기 때문에 보유합니다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, 'Schwab Brokerage (Quiz)', '수익보다 손실의 가치를 크게 평가하는 정도', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (48, 'MULTIPLE_CHOICE', '[{"data":"신뢰하는 언론사에서 특정한 회사의 신제품을 호평하는 것을 보았습니다. 주식을 매수 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["예, 신뢰하는 언론사이므로 믿을 수 있는 정보이기 때문입니다.","아니오, 주가는 여러가지 요인으로 결정되기 때문입니다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, 'Schwab Brokerage (Quiz)', '자신의 경험 혹은 기억 등 단편적 정보에 근거한 가능성을 판단', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (49, 'MULTIPLE_CHOICE', '[{"data":"증권사나 카페 또는 SNS에서 다수의 투자자들이 사고 있다는 종목을 매수한 경험이 있습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["예, 다수의 매체에서 한 종목을 추천하고 있어서 매수하였습니다.","아니오, 계획한 것과 거리가 멀어 추천한 종목을 매수하지 않았습니다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '자체 제작', '종목분석 등을 하지 않고 막연히 따라하는 정도', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (50, 'MULTIPLE_CHOICE', '[{"data":"2017년 우리나라 통화량은 5.5% 증가하였으며, 같은 기간 코스피지수는 17.9% 상승하였습니다. 2018년에는 통화량이 6.3% 증가하였다면, 이때 코스피지수는 어떻게 되었을까요?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["전년보다 올랐을 것이다.","전년보다 떨어졌을 것이다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '자체 제작', '잘못된 기준점에 의한 의사결정 판단', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (51, 'MULTIPLE_CHOICE', '[{"data":"당신의 투자위험관리는 다른 투자자에 비하여 잘 하고 있다고 생각합니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["예, 시장의 변화에 따라 위험관리를 잘 하고 있다고 생각합니다.","아니오, 위험관리의 대처가 부족하다고 생각합니다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '자신의 능력을 실제보다 과대 평가하는 정도', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (52, 'MULTIPLE_CHOICE', '[{"data":"지난 6개월 동안 주가가 하락했다. 다음 달의 주가는 어떻게 될 것으로 생각하십니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["주가가 장기간 하락하면 상승하는 경우가 많으므로 다음 달의 주가는 오를 것이다.","시장경기가 좋지 않으므로 주가가 하락할 것이다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, 'Stock Market Investors: Who Is More Rational, and Who Relies on intuition?, 2012, Andrey Kudryavtsev, Gil Cohen', '과거의 행적이 앞으로의 상황에 영향을 미칠 것이라 인지하는 정도', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (53, 'MULTIPLE_CHOICE', '[{"data":"철강주는 당신의 포트폴리오를 연 15%의 상승률을 달성하였습니다. 하지만 당신의 투자전문가는 이 부분이 현재 과대평가 되었다고 합니다. 어떻게 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["아직 더 오를것이라 판단하고 더 투자합니다.","다른 산업분야를 분석을 합니다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, 'Schwab Brokerage (Quiz)', '자신에게 유리한 방향으로 가설을 검증하고 행하는 행동', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (54, 'MULTIPLE_CHOICE', '[{"data":"주식을 사기전 매수세가 강합니다. 매수하는 것을 선호하십니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["선호한다.","선호하지 않는다."]}]', '[{"data":[],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', null, '성향', null, null, '김진균', TO_DATE('2020/01/07 01:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, 'Schwab Brokerage (Quiz)', '종목분석 등을 하지 않고 막연히 따라하는 정도', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (55, 'MULTIPLE_CHOICE', '[{"data":"직장에 갓 입사한  금송이는 처음 증권 계좌를 개설하고 주식 투자를 시작합니다. \n투자자 카페에서 향후 10년 동안 연 30%의 투자 수익을 보장하는 종목에 대해 추천을 받았습니다. 금송이는 어떻게 반응해야 할까요?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["즉시 투자한다.","먼저 해당 종목을 조사한 후 투자를 결정한다.","카페의 다른 회원이 투자하는 경우에 투자한다.","수익을 보장받을 수 없음을 알기 때문에 추천을 무시한다."]}]', '[{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '높은 수익률을 보장하는 종목추천 의심', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (56, 'MULTIPLE_CHOICE', '[{"data":"금송이는 아직 어떤 종목을 선택해야 할지 몰라 우량주를 선택하려 합니다.\n당신은 금송이에게 어떤 조언을 하시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["우량주 보다는 신문이나 유튜브에서 추천하는 종목을 사야 합니다.","종목 선택은 주식 차트를 보면 알 수 있습니다.","기업의 비즈니스에 투자하는 것으로 기업가치를 측정한 후 선택해야 합니다.","투자 고수가 추천하는 가격에서 매수하여야 합니다."]}]', '[{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '기업의 가치 측정과 기대수익률', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (57, 'MULTIPLE_CHOICE', '[{"data":"기업의 주식은 일반적으로 채권보다도 낮은 위험의 투자대상이다.","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["True","False"]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '주식투자의 리스크', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (58, 'MULTIPLE_CHOICE', '[{"data":"금송이는 결혼자금 마련을 위해 은행 금리보다는 2~3% 높은 상품에 투자하려고, 평소 연금 투자를 하시는  부모님과 같은 원금보장 상품에 투자하기로 합니다. \n금송이의 투자결정은 좋은 결정입니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["True","False"]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '실현가능한 목표에 맞는 투자, 투자 상품의 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (59, 'MULTIPLE_CHOICE', '[{"data":"금송이는 \"계란을 한 바구니에 담지 마라\"라는 격언을 들었습니다.\n계란은 개별 종목을 나타내고 바구니는 포트폴리오를 나타내는 것이라고 한다면\n계란을 나누어 담는다는 것은 어떤 의미 입니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["개별 종목에 대한 투자만으로 수익을 극대화 한다.","포트폴리오 수익을 극대화 한다.","개별 종목에 대한 투자 수익이 복리로 증가한다.","단일 투자의 실패가 포트폴리오에 미치는 부정적인 영향을 최소화한다."]}]', '[{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '분산투자의 이점', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (60, 'MULTIPLE_CHOICE', '[{"data":"금송이는 1000만원을 주식에 투자하여 연 7.2%의 배당을 받고 있습니다. 추가 투자나 매도 없이 10년이 지났고 주가도 변함이 없다면 금송이의 최종 잔고는 얼마가 될까요?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["1720만원","원금의 2배인 2000만원","3000만원","1억원"]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '장기투자의 이점과 복리', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (61, 'MULTIPLE_CHOICE', '[{"data":"금송이는 부채비율이 높은 A기업의 주식과 채권 모두 투자하고 있습니다. 만약 A기업이 파산한다면 다음 중 사실상 가치가 없어질 위험이 가장 높은 것은 무엇일까요?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["A기업의 우선주","A기업의 보통주","A기업의 채권","A기업의 신주인수권"]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '기업의 안전가치 측정', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (62, 'MULTIPLE_CHOICE', '[{"data":"금송이는 A기업의 어닝시즌에 3분기 영업이익이 12조라는 어닝 서프라이즈 기사를 보았습니다. 영업이익, 어닝 시즌과 어닝 서프라이즈에 대한 설명 중 틀린 것은 무엇입니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["영업이익 : 기업의 비즈니스 활동으로 발생된 이익","어닝 시즌 : 기업이 보도 자료를 내는 시기","어닝 시즌 : 일반적으로 기업이 분기별/반기별 실적을 발표하는 시기","어닝 서프라이즈 : 기업의 영업이익이 예상했던 것보다 높은 경우"]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '기업의 사업가치 측정', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (63, 'MULTIPLE_CHOICE', '[{"data":"금송이는 자신만의 방법으로 기업 가치를 산정하여 주식 투자하고 있습니다. 올바른 설명이 아닌 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["가치투자란 우량한 기업이 일시적인 상황으로 인해 싸게 거래될 때 주식을 사서 나중에 제 가치를 받고 파는 방법이다.","바겐세일 가격으로 거래되는 우량 기업의 주가가 적정 가치로 수렴되는데는 통산 3~4년이 걸린다.","기업의 가치는 기업의 사업 실적, 즉 이익에 근거한 평가 결과와 기업의 자산가치에 근거한 평가 결과를 통합하여 산정한다.","재무제표를 보면 기업의 사업가치와 재산가치를 알 수 있고, 기업의 미래가치를 제시하여 준다."]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '기업의 본질가치 산출', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (64, 'MULTIPLE_CHOICE', '[{"data":"금송이는 종목탐색을 하던 중 A기업 8만원, B기업 16만원을 확인하였고 대형기업에 투자를 하려고 합니다. 그래서 B기업의 주식이 더 비싸니 큰 기업일 것이라고 생각하고 투자하려 합니다. 금송이에게 추천하고 싶은 것은 무엇입니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["B기업의 주식이 투자대상으로 적합하다고 조언한다.","주가만으로 기업의 규모를 알 수 없다고 시가총액을 먼저 살피라고 조언한다."]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '주가를 기초로 한 시장가치 산출', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (65, 'MULTIPLE_CHOICE', '[{"data":"기업의 주가배수에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["주가장부가치비율(PBR)이 1보다 작다면, 청산가치의 몫이 현재 주가보다 많다는 것을 의미한다.","주가이익비율(PER)이 3배라면, 현재 주가로 투자 시 3년 간의 순이익으로 투자원금을 회수할 수 있다고 해설할 수 있다.","자기자본이익률(ROE)는 PER을 PBR로 나눈 값과 같다.","배당수익률은 당기순이익 대비 배당금 총액을 나눈 값으로, 기업이 벌어들인 이익에서 주주에게 지급하는 배당금의 비율을 의미한다."]}]', '[{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '주가를 기초로 한 비교가치 산출', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (66, 'MULTIPLE_CHOICE', '[{"data":"금송이는 PER이 5배인 A기업에 투자하려고 한다. A기업이 속한 업종의 PER은 10배이고 같은 업종의 B기업 PER은 20배이다. 금송이에게 조언해 주고 싶은 말 중 틀린 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["일반적으로 고PER주 보다는 저PER주를 투자하는 것이 유리하다.","일반적으로 B기업이 저평가되었다고 한다.","미래PER을 예측하는 것이 중요하다.","PER는 업종마다 평균값이 다르다."]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '시장가치의 한계', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (67, 'MULTIPLE_CHOICE', '[{"data":"금송이는 배당금을 받도록 A주식에 투자를 하려고 합니다. 3분기 배당일정이 배당락일 : 9월 29일(수), 배당기준일 : 9월 30일(목), 지급일 : 11월18일(목)이라고 합니다. 아래 중 배당금을 받을 수 있는 상황은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["9월 28일(화)에 A주식을 산다.","9월 29일(수)에 A주식을 산다.","9월 30일(목)에 A주식을 산다.","11월 18일(목)에 A주식을 산다."]}]', '[{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '배당의 개념', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (68, 'MULTIPLE_CHOICE', '[{"data":"금송이는 A기업의 주식에 1주 투자를 했다. A기업 한 해 경영성과는 아래와 같다.\n영업이익 100억, 당기순이익 50억, 주당배당금 5백원, 액면가 5천원, 주가 1만원 \n금송이의 배당수익률로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["1%","5%","10%","20%"]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '명목배당율과 시가배당율', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (69, 'MULTIPLE_CHOICE', '[{"data":"고배당주에 대한 다음 설명 중 틀린 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["일반적으로 고배당주 주가의 변동성은 성장주보다는 작은 편이다.","일반적으로 고배당주 투자는 시세차익을 주 목적으로 한다.","갑자기 배당지급을 중단하는 경우, 회사 재정건정성에 대한 우려로 투자가 위축될 수 있어 계속 지급할 자신이 없으면 배당금 지급을 아예 시작하지 않는 경우가 많다.","일반적으로 3~5% 이상의 배당을 주는 주식을 고배당주라고 한다."]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '배당 귀족', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (70, 'MULTIPLE_CHOICE', '[{"data":"기업의 과거 성과는 미래 투자결과를 보장하는 좋은 지표입니다.","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["True","False"]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '과거 실적이 미래 수익의 관계', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (71, 'MULTIPLE_CHOICE', '[{"data":"2021년 6월 현재, 코스피시장 시가총액 상위 기업에 삼성전자, SK하이닉스 등과 코스닥시장 시가총액 상위 기업에 셀트리온제약, 카카오게임즈 등이 있습니다.\n당신이 처음 투자에 입문한 금송이에게 설명해 주는 내용으로 틀린 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["코스피, 코스닥 시장은 국내에서 주식을 거래할 수 있는 시장의 종류다.","시가총액 상위기업은 미래 성장에 대한 기대감이 높은 starting 기업을 말한다.","삼성전자는 대형주로 일반적으로 기업의 안전성이 더 높을 것으로 기대된다.","카카오게임즈 등의 IT기업은 성장주로 분류하고 일반적으로 투자 수익과 위험 수준이 더 높은 경향이 있다."]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '대형주, 소형주, 가치주, 성장주의 기업적용', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (72, 'MULTIPLE_CHOICE', '[{"data":"금송이는 A기업의 주식을 보유하던 중 자사주 매입 기사를 보게 되었습니다. 금송이의 다음 판단 중 틀린 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["A기업이 자신 회사에 투자하는 것으로 악재로 판단한다.","시장에 유통되는 주식수가 줄어들어 1주당 이익이 커지는 것으로 판단한다.","단기적으로 주가가 상승할 것으로 판단한다.","기업이 매출과 순이익 등의 실적이 증가하는지 확인해야 한다."]}]', '[{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '자사주 매입으로 인한 개별 변동요인', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (73, 'MULTIPLE_CHOICE', '[{"data":"금송이는 주식투자를 위해 업종을 조사하려고 합니다. 다음 중 틀린 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["자신이 종사하는 업종에 대해 우선 조사하려고 고려한다.","업종별 특징이 있기 때문에 투자하려는 기업이 속한 업종에 대한 매출 증가세, 평균적인 기업 이익 등을 살펴야 한다.","각 산업의 다양한 경제적 특성 및 해당 업종에 속한 회사들이 어떻게 경제적 진입장벽을 만드는지를 살펴야 한다.","한 산업의 수익성이 전체를 말해주지 않으므로, 업계 내의 경쟁 구도 파악은 중요하지 않다."]}]', '[{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '기업은 비즈니스 유형별로 분류', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (74, 'MULTIPLE_CHOICE', '[{"data":"경기가 호황일 때 자동차/조선이나 철강/소재, 반도체 등과 같은 자본재 산업은 매출과 영업이익이 늘어난다. 그러나 경기가 불황일 때는 자본과 설비 투자가 줄어들어 자본재 산업의 성과는 악화된다. 이 자본재 산업은 경기 순환 주기와 일치하기 때문에 경기 순환 업종으로 분류한다.","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["True","False"]}]', '[{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '기업이 속한 업종의 특징 파악', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (75, 'MULTIPLE_CHOICE', '[{"data":"경기방어업종은 경기 흐름에 민감하지 않은 식료품, 필수 소비재 등의 산업을\n의미한다.","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["True","False"]}]', '[{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '경기방어업종의 특징', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (76, 'MULTIPLE_CHOICE', '[{"data":"일반적으로 채권 이자율이 내려가면, 채권 가격은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["내려간다","올라간다","변하지 않는다","내려가다가 일정하게 유지한다"]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '금리와 경제성장과의 관계', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (77, 'MULTIPLE_CHOICE', '[{"data":"다음 정책 기사을 읽고 적절한 판단을 골라 보세요\n\"코로나 팬더믹으로 인해 시중에 자금이 대거 풀리면서도 물가가 1% 정도 상승될 것으로 예상된다. 이에 따라 한국은행에서는 기준금리를 현행 0.5%에서 0.8%로 0.3% 인상시킨다는 발표를 했다\"","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["갑 : 한국은행이 기준금리를 인상했으니 주식시장에는 악재겠군","을 : 명목금리 인상은 주식시장에 영향이 없지","병 : 명목금리 인상은 주식시장에 호재야","정 : 실질금리가 마이너스인데 주식시장에 큰 영향은 없군"]}]', '[{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '주도 상품의 변화와 경기 판단', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (78, 'MULTIPLE_CHOICE', '[{"data":"전문가들은 금, 부동산과 같은 실물자산 가격은 상승하고 채권가격은 하락할 것으로 할 것으로 예상하고 있습니다. 금송이는 대부분의 자산을 국채에 투자하고 있습니다. 금송이는 무엇을 해야 할까요?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["채권 유지","채권 매도, 실물자산 50%투자","채권 매도, 실물자산 100%투자","채권 매도, 실물자산 100%투자, 돈을 빌려 실물자산에 더 투자"]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '미래가치를 판단한 최종 선택', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (79, 'MULTIPLE_CHOICE', '[{"data":"주식의 매매에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["매매일과 결제일이 다르다","PC 뿐만 아니라 스마트폰으로도 매매할 수 있다","시장가주문을 내는 경우 가격의 입력이 필요하지 않다","주식거래계좌를 개설하기 위해서는 반드시 증권사 지점을 방문해야 한다."]}]', '[{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '주식 매매과정의 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (80, 'MULTIPLE_CHOICE', '[{"data":"금송이는 주식매매를 통해 다음과 같은 결과를 얻었습니다. \n\"1,000만원을 증권회사 계좌에 입금하여 S사 주식에 투자한 후 한달 뒤에 10만원의 수익을 실현하고 매도하였습니다.\" \n가장 올바른 평가를 고르면?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["10%의 수익을 실현하였다.","12%의 수익을 실현하였다.","약 112%의 연간 수익이 실현된 셈이다.","약 1000%의 연간 수익이 실현된 셈이다."]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '복리와 수익률의 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (81, 'MULTIPLE_CHOICE', '[{"data":"투자대가 피터린치는 ''일상에서 황금알을 낳는 성장기업을 찾아라''고 하였습니다.이를 적용해 보려는 금송이는 최근 아파트 주차장에서 눈에 띤 파란색 번호판\n차량(전기자동차) 관련 기업정보를 찾는 방법을 당신에게 물어봅니다. 어떤 방법을 추천해 주시겠습니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["주식 블로그 추천","최근 조회수가 많은 유튜브 주식방송 추천","증권회사 애널리스트 보고서 추천","금융감독원 전자공시시스템(DART) 추천"]}]', '[{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '공시정보 확인', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (82, 'MULTIPLE_CHOICE', '[{"data":"52주 고가와 저가가 있는 달은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["5월","6월","3월","9월"]}]', '[{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '1년동안의 주식 가격 확인', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (83, 'MULTIPLE_CHOICE', '[{"data":"금송이는 A기업의 공모주 주식에 투자하려고 합니다. 검색 중에 \"따상이 기대된다\"라는 기사를 보게 되었습니다. 다음 중 틀린 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["공모주란 기업이 주식시장에 처음 상장하기 위하여, 일반인에게 배정하는 주식을 말한다.","따상은 신규 상장 첫 거래일에 공모가 대비 두 배로 시작하여 가격제한폭(30%)까지 오르는 것을 말합니다.","최대주주가 보호예수 종료 후 대량 매도할 수도 있다.","상장 후 주가는 공모가 이하로 떨어질 수 없다."]}]', '[{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '공모주 투자와 공모가', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (84, 'MULTIPLE_CHOICE', '[{"data":"다음 설명 중 틀린 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["주식의 시장가격은 매수자와 매도자 간의 매매체결에 따라 매순간 바뀌기 때문에 가격 변동에 따른 손실 확대 등 리스크 요인이 상당히 크다.","주식은 특히 단기적으로 변동성이 매우 크고, 가격을 예측하기 어렵지만, 장기적으로는 기업이 가지고 있는 본연의 내재가치에 따라 주식가격이 움직인다는 특징이 있다.","개인투자자는 주식 포트폴리오를 구성함에 있어서는 사전적으로 기본적, 기술적 분석을 철저히 해서 들어가야 한다.","회사의 재무제표 등에 근거해서 주식을 분석하는 방법을 기본적 분석이라고 하고 기본적 분석을 하는 전문가를 애널리스트라고 부른다."]}]', '[{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '주식의 기본분서과 기술적 분석', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (85, 'MULTIPLE_CHOICE', '[{"data":"주가가 이동평균선을 상향돌파하는 현상을 (골든크로스)라고 부르며, 주식 매수신호로 활용한다.","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["True","False"]}]', '[{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '골든크로스의 해석', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (86, 'MULTIPLE_CHOICE', '[{"data":"금송이는 A 증권사의 수수료 무료 이벤트를 보고 계좌 개설을 하였습니다. 1000만원을 주식에 투자하여 어느덧 10% 이익을 내었습니다. 그런데 계좌에는 몇 백원이 모자랐습니다. 다음 상황 중 틀린 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["한국거래소, 한국예탁결제원 등의 비용이 부과된 것이다.","일반적으로 국내주식 매수와 매도 시 수수료과 부과되는데 증권사가 이벤트를 하는 경우 증권사 수수료는 무료일 수 있다.","국내 주식을 매수하는 경우 세금이 부과된다.","이유를 모르겠다"]}]', '[{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '주식 세금과 수수료 ', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (87, 'MULTIPLE_CHOICE', '[{"data":"금송이는 약 1년 정도 투자경험을 가진 새내기 투자자입니다. \n금송이에게 적합한 투자 전략은 무엇이라고 생각하십니까?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["배를 타고 넓은 바다를 항해하며 낚시하듯이 경제신문을 통해 새롭게 알게된 여러종목을 순환매하면서 투자한다.","주가하락 두려움을 떨쳐내고 그물을 쳐 두고 낚시하듯이 대형주를 선택하여 전일 종가 대비 10%이하 가격에 예약매수를 걸어둔다.","관심기업의 사업보고서를 확인한 다음 상승과 하락의 양방향 투자시나리오를 짜 두고, 시나리오에 맞추어 계획적인 매매를 한다.","관심기업의 주식차트(일봉, 주봉, 월봉, 거래량 변화)와 외국인의 수급상황을 보고 매매 판단을 한다."]}]', '[{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '지식', null, null, '김진균', TO_DATE('2020/01/07 02:00:00', 'YYYY/MM/DD HH24:MI:SS'), '김진균', TO_DATE('2021/07/08 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, '자체 제작', '수익실현 방법', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (88, 'MULTIPLE_CHOICE', '[{"data":"복리효과를 감안했을 때 수익률이 가장 높은 사람으로 올바른 것은?","type":"QUESTION_TEXT"},{"data":["강감찬씨는 1년을 투자해서 6% 수익을 냈다","김유신씨는 2년을 투자해서 12% 수익을 냈다","곽재우씨는 3년을 투자해서 18% 수익을 냈다","이순신씨는 4년 동안 투자해서 24% 수익을 냈다"],"type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"dot"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["강감찬","김유신","곽재우","이순신"]}]', '[{"data":"투자 대상 기간이 서로 다를 때는 서로 비교할 수 없다. 이때는 수익률을 1년을 기준으로 표준화 해서 비교하는 것이 일반적이다. 그리고 연율화 과정에서 재투자를 가정해 복리를 적용해 계산하는 것이 원칙이다. \n② 김유신씨가 2년 동안 낸 12% 수익을 연으로 환산하면 5.8%이다.\n③ 곽재우씨가 3년 동안 낸 18% 수익을 연으로 환산하면 5.8%이다.\n④ 이순신씨가 4년 동안 낸 24% 수익을 연으로 환산하면 5.5%이다. ","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '미니테스트', null, null, '이장영', TO_DATE('2021/06/28 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '복리효과 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (89, 'MULTIPLE_CHOICE', '[{"data":"투자수익과 리스크에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["리스크를 감수하지 않으면 손실을 보지도 않지만 수익을 얻을 수도 없다","기대수익이 10%라는 말은 항상 10% 수익을 얻는다는 뜻이다","수익의 변동폭이 크면 리스크가 크다고 할 수 있다","투자에서 위험은 분산이나 표준편차로 측정할 수 있다"]}]', '[{"data":"기대 수익률이 연 10%라고 해서 그 주식에 투자하면 무조건 연 10%의 수익을 얻는다는 뜻은 아니다. 기대한 수익이 실현되지 않을 가능성, 투자 결과가 기대했던 수익과 다를 가능성을 리스크라고 한다. 투자 위험은 투자에서 예상되는 미래 수익률의 분산이나 표준편차로 측정한다. 즉, 예상 수익률이 기대 수익률에서 크게 벗어나지 않으면 투자 위험이 적거나 없다고 하고, 예상되는 수익이 들쑥날쑥하면 리스크가 크다고 말한다.","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/06/28 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '리스크에 대한 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (90, 'MULTIPLE_CHOICE', '[{"data":"계란을 한 바구니에 담지 말라는 말과 관련 있는 투자 방법으로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["분산투자","집중투자","거치식투자","마케타이밍 전략"]}]', '[{"data":"분산투자라의 중요성을 표현한 대표적인 말이다. 분산투자는 계란을 옮길 때 많은 바구니를 사용한다는 뜻 이상이다. 다른 것들과 분명히 구별되는 바구니를 찾는 것이 중요해졌다. 각 바구니의 독특한 수익률 형태가 다른 바구니의 손익을 부분적으로 상쇄해서 전체 포트폴리오의 변동성을 낮추기 때문이다","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '분산투자 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (91, 'MULTIPLE_CHOICE', '[{"data":"비체계적인 위험에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["개별 기업의 독특한 요소 때문에 발생하는 위험이다","성격이 다른 자산이나 기업에 투자하면 피할 수 있다","비체계적 위험을 떠안으면 추가적인 보상을 받을 수 있다","개별 기업의 주가를 시장과 다른 방향으로 움직이는 위험이다"]}]', '[{"data":"비체계적인 위험은 적절한 분산투자를 통해 쉽게 제거할 수 있기 때문에, 비체계적인 리스크를 떠안아도 추가적인 보상을 받을 수는 없다. 투자자들이 보상받을 수 있는 리스크는 체계적인 위험 뿐이다","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '비체계적 위험 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (92, 'MULTIPLE_CHOICE', '[{"data":"주식에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["주식회사가 투자자에게 자금을 모집한 대가로 발급하는 증권이다","주식을 보유한 주주는 경영성과에 따라 배당을 수령할 수 있다","발행된 주식은 지정된 거래소에서만 사고 팔 수 있다","주식회사 입장에서 자기자본으로 분류 할 수 있다"]}]', '[{"data":"발행된 주식은 지정된 거래소에서 거래되기도 하지만, 거래소 밖에서 거래가 이뤄질 때도 있다. 이를 장외거래라고 한다","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '주식일반 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (93, 'MULTIPLE_CHOICE', '[{"data":"다음 (  ) 안에 들어갈 말로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"data":"한국거래소에서 주식을 거래할 때, 하루에 움직일 수 있는 주가의 변동폭은 상하 (    ) %이다","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["10%","15%","20%","30%"]}]', '[{"data":"한국거래소의 주식거래 일별 가격 제한은 기준가 대비 상하 30%다","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '가격변동폭 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (94, 'MULTIPLE_CHOICE', '[{"data":"주식가치의 적정성을 평가할때 활용하는 지표로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["PER","PBR","PSR","ELW"]}]', '[{"data":"지문 1은 주가이익비율(또는 주가수익비율)으로, 주가를 주당 순이익으로 나눈 값이다.\n지문 2는 주가장부가치비율(또는 주가순자산비율)으로, 주가를 주당 순자산으로 나눈 값이다.\n지문 3은 주가매출비율으로 주가를 주당 매출액으로 나눈 값이다.\n지문 4는 파생결합증권의 하나인 주가워런트증권(Equity Linked Warrant)으로, 주식가치 평가지표와는 무관한 금융투자상품의 하나이다.","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/06/15 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '주가배율의 정확한 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (95, 'MULTIPLE_CHOICE', '[{"data":"기술적 분석 중 이동평균선에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["일정 기간의 주가 평균을 의미하며 이동평균을 구하는 방식은 단순산술평균부터 지수이동평균이나 기하이동평균 등 다양한 편이다","이동평균선은 해당 기간에 투자자들이 거래한 평균단가로 이해할 수 있다","이동평균선을 주가가 상향돌파하는 상황을 골든크로스(Golden cross)라고 하며 중요한 주식매도 신호로 인식한다","이동평균선보다 주가가 아래에 위치한다면 기간 평균에 비해 주가가 낮게 형성되고 있음을 의미한다"]}]', '[{"data":"이동평균선은 기술적 분석에서 중요한 보조지표이다. 일정 기간의 주가 평균치를 선으로 연결하여 현재의 주가와 비교하거나 이동평균선 자체의 흐름을 분석할 수 있다. \n이동평균선을 주가가 상향돌파하는 상황을 골드크로스로 부르며, 중요한 주식매수 신호로 인식된다. 반대로 이동평균선을 주가가 하향돌파하는 상황을 데드크로스(Dead Cross)라고 부르며, 중요한 주식매도 신호로 인식된다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/06/27 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '이동평균선 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (96, 'MULTIPLE_CHOICE', '[{"data":"다음과 같은 주식에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"data":"A주식 : 주가 10,000원 액면가 5,000원,\nB주식 : 주가 2,000원 액면가 1,000원 (6개월 전 액면분할 실시 5000원→1000원)","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["A주식은 B주식보다 5배 비싸지만 두 주식의 주가는 모두 액면가 대비 2배이기 때문에 실질적으로 A주식은 B주식보다 2.5배 비싸다","B주식의 발행주식수는 액면분할 이전에 비해 5배 늘어났다","B주식의 액면분할 당시 분할이전의 주가보다 1/5 수준으로 하락하였을 가능성이 높다","A주식과 B주식의 주가수익비율(PER)가 5.0배로 동일하다면 주가의 차이에도 불구하고 내재가치 측면에서는 비슷하다고 평가할 수 있다"]}]', '[{"data":"액면분할은 기존 액면가격을 나누어 비율만큼 발행주식수를 늘리는 것이다. 기존 액면가 5000원에서 1000원으로 액면분할을 한다면, 발행주식수는 기존 1주에서 5주로 늘어난다.\n지문 ①에서 만일 A주식이 5,000원에서 1,000원으로 액면분할한다면, 직관적으로 주가 역시 10,000원에서 2,000원으로 1/5 낮아질 수 있다. 주가를 비교 평가할 때, 액면가 대지 주가는 참고지표일 뿐, 주가의 가치적도로 활용하지 않는다. 지문 ②와 지문 ③은 액면분할로 인해 통상적으로 발생할 수 있는 현상이다.\n지문 ④에서 두 기업의 PER가 5.0배로 동일하다면, 내재가치 측면에서 비슷하다고 평가할 수 있다.","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/06/24 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '액면가와 시가 구별', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (97, 'MULTIPLE_CHOICE', '[{"data":"경제지표에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["GDP(국내총생산)와 경기종합지수는 일반적으로 금융시장 참여자가 시장에서 가장 중요하게 생각하는 경제지표라 할 수 있다","GDP수치는 분기별로 발표하는데 금리나 주가에 즉각적인 영향을 미치기 때문에 발표 직전 금융시장은 발표치 추이에 신경을 곤두세운다","경기종합지수는 경제의 각 부문을 대표하는 경제지표들을 가공, 종합하여 하나의 지표로 나타난 것이며 선행지수, 동행지수, 후행지수로 나누어진다","실업률, 전경련BSI(기업경기실사지수), 통계청CSI(소비자전망지수) 등도 금융시장에서 관심 가지는 기타 주요한 경제지표이다"]}]', '[{"data":"금리나 주가에 직접적인 영향을 미치는 것은 GDP 지표 발표치 자체가 아니라 한국은행과 각 금융 기관이 전망하는 향후 GDP 추정치와 이에 대한 시장의 컨센서스 변화인 경우가 많다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '경제지표 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (98, 'MULTIPLE_CHOICE', '[{"data":"시중금리의 변화로 <보기>의 (    ) 안에 들어갈 말을 순서대로 올바르게 나열한 것은?","type":"QUESTION_TEXT"},{"data":"경기하락예상 → (       ),\n통화긴축정책 → (       ),\n확장적 재정정책 → (       ),\n주식시장 상승 → (       )","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["금리 하락, 상승, 상승, 상승","금리 하락, 하락, 상승, 상승","금리 하락, 상승, 하락, 상승","금리 하락, 상승, 하락, 하락"]}]', '[{"data":"기준금리 상향 등을 통한 통화 긴축정책은 시중 유동성을 흡수하며 금리상승을유발하며 확장적 재정정책 (경기부양 재정정책)은 국채발행과 경기부양 가능성 확대로 금리상승을 유발한다. 주식시장 상승은 경기지표의 호전과 채권시장 자금의 주식시장 이동을 통해 금리상승을 유발한다.","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '금리변동요인 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (99, 'MULTIPLE_CHOICE', '[{"data":"자본시장과 거시경제 변수 등에 대한 설명으로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["시중 금리 수준이 높아지면 더 많은 대출이 일어나 시중에 통화량(유동성)이 더욱 풍부해진다","한국은행은 기준금리 수준 결정, 시중 은행의 지급준비율 결정, 통안채 발행량 조정의 3가지 주요 방법을 통해 시중 통화량을 조절한다","GDP는 한 나라의 경제 활동을 포괄적으로 나타내며 1년에 1번 연말에 발표된다","수많은 국가들이 자국의 통화가치를 강하게 하여 국가의 달러 환산 부(富)가 높아지도록 유도하고 있다"]}]', '[{"data":"①시중 금리 수준이 높아지면 대출이 줄어들어 시중 유동성이 줄어들게 된다.\n③GDP는 분기별로 발표하기 때문에 금리나 주가에 직접적인 영향을 미치는 것은 지표 발표 자체가 아니라 한국은행과 각 금융 기관이 전망하는 향후 GDP 추정치와 이에 대한 시장의 컨센서스 변화인 경우가 많다.\n④수많은 국가들이 자국의 통화가치를 약하게 하여 외국 통화의 유입을 유도하는 물밑 정책을 펼치고 있다.","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '거시경제변수 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (100, 'MULTIPLE_CHOICE', '[{"data":"다음 신문 기사의 내용을 통해 김씨의 행동편향으로 예상되는 것으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"data":"<기사> 투자 경험이 없는 김씨는 어느 날 친구로부터 주식으로 돈을 벌었다는 얘기에 귀가 솔깃했다. 좋은 종목 있으면 추천해달라고 친구에게 요청했고, 친구는 증권 브로커 B씨를 소개해주었다. 이씨는 전문가처럼 주식에 관해 유창하게 설명해 주었고 바이오 종목 1개를 추천했다. 김씨는 1천만원을 투자했고, 이익이 났다. 김씨는 투자에 대해 자신감이 붙었고 금액도 1억원으로 늘리고 투자종목도 늘렸다. 그러나 몇 개 종목에서 손해가 나기 시작했고 원금까지 손실을 입기 시작했다. 덜컥 겁이나 이제라도 그만해야 싶었지만 손실이 커져 그만할 수 없었다. 급기야 원금을 반이나 날린 후에 진작 그만두었어야 한다고 후회했다","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["군중심리 편향","사후확증 편향","손실회피 편향","자기과신 편향"]}]', '[{"data":"지문 1의 경우, 투자 경험이 없는 김씨가 친구가 수익이 났다는 얘기만을 듣고 귀가 솔깃해 추천을 권유한 것은 군중심리 편향에 가깝다.\n지문 2의 경우, 사후확증 편향은 이미 발생한 일의 결과를 알고 나면 그 일이 벌어질 수 밖에 없었고 이미 그렇게 될 줄 알고 있었던 것처럼 믿게 되는 오류로 상기 기사내용과는 거리가 멀다.\n지문 3의 경우, 원금까지 손실을 입기 시작한 이후 그만하지 못한 것은 손실을 회피하려는 편향 때문이다.\n지문 4의 경우, 투자에 대한 경험이 없었으나 초기 투자 성공으로 투자에 대한 자신감이 붙어 투자 금액을 쉽게 늘린 것은 자기과신 편향의 영향으로 볼 수 있다.","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '사후확증 편향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (101, 'MULTIPLE_CHOICE', '[{"data":"한 설문조사 결과 운전자의 88%가 자신이 평균보다 운전을 잘한다고 생각하며 그 중 80% 이상이 자신의 운전실력이 상위 30% 안에 든다고 생각한다고 했다. 이렇듯 사람들은 본인에 대한 과도한 믿음, 즉 자기과신을 하는 경향이 강한다. 이러한 자기과신 편향이 투자의사결정에 영향을 주었을 때의 행동으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["그 팀장 설명도 그럴싸한데 다가 지난 번에도 그 말대로 되더라니까. 이번에도 맞을 거야","처음에는 조금 불안하기도 했는데 매달 꼬박 꼬박 수익금이 들어오더라. 그래서 더 돈을 넣으려고. 너도 해봐","낮은 금리의 퇴직연금 포트폴리오를 조정해야지 조정해야지 생각만하고 계속 그대로 놨둬 기회를 놓쳐버렸어","내가 1년 간 지켜봤는데 이 주식은 계속 오르지 않고 올랐다가 내려갔다 반복만 해. 이 정도 내려가면 다시 올라가니까 지금 사야해"]}]', '[{"data":"지문 1의 경우, 자기자신 뿐만 아니라 타인의 말을 그대로 믿고 행동하는 것도 그런 대상을 내가 잘 골랐다는 자기과신 편향의 영향이다. \n지문 2의 경우, 폰지 사기의 전형적인 수법으로 몇번의 수익금 수령이 초기 불안을 없애고 자기과신을 통해 더 많은 돈을 투자한다.\n지문 3의 경우, 현상유지 편향이 영향을 주었을 때의 행동으로 조정할 의사가 있거나 조정해야 할 상품을 그대로 유지하게 한다.\n지문 4의 경우, 자기과신 편향은 이렇다 할 대표성이 없는 몇차례의 경험을 통해 더욱 단단해져 이번에도 지난번처럼 될 거라 믿고 행동하게 만든다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '현상유지편향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (102, 'MULTIPLE_CHOICE', '[{"data":"다음 투자 격언은 어떤 행동편향에 대한 주의를 주고 있는가?","type":"QUESTION_TEXT"},{"data":"우리가 위험에 빠지는 이유는 무언가를 몰라서가 아니다. 확실히 안다고 착각해서다. - 마크 트웨인","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["심적회계","기준점 편향","손실회피 편향","자기과신 편향"]}]', '[{"data":"지문1의 경우, 사람들은 돈에 대한 기준이나 가치를 모두 같은 것으로 생각하지 않고 각각의 용도에 따라 다르게 생각하며 취급하는 것을 말한다.\n지문2의 경우, 사람들이 합리적이거나 객관적인 판단이 아닌 사실이나 숫자를 기준으로 삼고, 이를 바탕으로 결정을 내리는 편향이다.\n지문3의 경우, 사람들이 이득보다 손실이 더 크게 느껴, 이익 증가보다 손실 증가에 민감하게 느끼는 것을 말한다.\n지문4의 경우, 사람들은 자신의 능력 또는 판단이 스스로에게 유리한 결과를 가져다 줄 것이 믿고 행동한다. 이러한 자기과신 편향은 자신이 가지고 있는 능력이나 정보, 지식 수준을 실제보다 더 높거나 정확하다고 믿게 만들어 섣불리 위험한 투자를 할 수 있다.","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '자기과신편향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (103, 'MULTIPLE_CHOICE', '[{"data":"심리학적 분석에 따르면 인간의 사고 체계는 두가지 시스템에 의해 작동한다. 빠르게 직관적으로 생각하는 시스템(휴리스틱)과 느리고 노력이 필요한 시스템(알고리즘)이 그것이다. 사람들은 금융투자 의사결정시에 후자을 사용한다고 착각하지만 전자를 사용해 결정하는 경우가 많다. 금융투자 시 전자의 시스템은 이익과 손실상황에서 어떤 성향을 보이는가?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["이익상황에서는 위험회피성향을, 손실상황에서는 위험회피성향을 보인다","이익상황에서는 위험회피성향을, 손실상황에서는 위험보유성향을 보인다","이익상황에서는 위험보유성향을, 손실상황에서는 위험보유성향을 보인다","이익상황에서는 위험보유성향을, 손실상황에서는 위험회피성향을 보인다"]}]', '[{"data":"향후 주식시장에 대한 긍정적인 전망이 우세할 때 이미 수익이 난 계좌를 보유한 투자자는 긍정적인 전망에도 불구하고 이익을 실현하고 싶어한다. 미래의 불확실성이 싫기 때문에 당장의 이익을 챙겨야 할 것 같아서이다. 반대로 주식시장에 대한 부정적인 전망이 우세 할 때 이미 손실이 난 계좌를 보유한 투자자는 시장상황이 부정적이어서 지금의 손실규모가 더 커질 수 있음에도 사람들은 손실을 확정 짓지 않고 위험을 보유하려고 한다. 이익상황에서는 위험회피성향을, 손실상황에서는 위험보유성향을 보이고 있는 것이다.","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '손실회피성향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (104, 'MULTIPLE_CHOICE', '[{"data":"<보기>의 (    ) 안에 들어갈 내용으로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"data":"(          )은 특정 투자자로부터 금융투자상품에 대한 투자판단 전부 또는 일부를 일임받아 투자자별로 구분하여 금융투자상품을 운용하는 업(業)을 말한다","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["투자일임업","투자자문업","투자매매업","집합투자업"]}]', '[{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}{"data":"투자일임업은 특정 투자자로부터 금융투자상품에 대한 투자판단 전부 또는 일부를 일임 받아 투자자별로 구분하여 금융투자상품을 운용하는 업(業)이다.\n지문2 투자자문업은 특정인을 위하여 금융투자상품의 가치 또는 투자판단에 대한 자문을 제공하는 업(業)을 말한다.\n지문3 투자매매업은 금융투자회사가‘회사의 고유재산으로 투자’하는 것을 말한다. \n지문4 집합투자업은 우리가 일반적으로 알고 있는 펀드운용을 하는 것이다. 정확하게는 ‘2인 이상의 투자자로부터 모은 금전 등을 투자자로부터 일상적인 운용지시를 받지 아니하면서 재산적 가치가 있는 투자대상자산을 취득, 처분 그 밖의 방법으로 운용하고 그 결과를 투자자에게 배분하여 귀속하는 것’을 말한다. ","type":"SOLUTION_TEXT"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '투자일임업 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (105, 'MULTIPLE_CHOICE', '[{"data":"투자자 A씨의 거래형태에 대한 설명으로 사실과 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["증권회사 MTS로 위탁계좌에 있는 돈으로 ETF를 매수하였다","ETF매수를 위해 은행을 방문하여 특정금전신탁에 가입하여 운용지시를 하였다","은행에서 특정금전신탁으로 매수하는 ETF나 증권회사를 통해 매수하는 ETF는 동일한 것으로 투자비용도 동일하다","증권회사를 통해 ETF를 매매할때는 실시간 매매가 가능하지만 은행의 특정금전신탁을 통한 ETF매매는 계좌별 실시간 매매는 어렵다"]}]', '[{"data":"지문1 증권회사 위탁계좌와 MTS를 활용한 직접매매형태다.\n지문2 ETF에 투자하는 특정금전신탁에 가입하는 형태로 은행의 신탁을 통해서 ETF를 거래할 수 있는 방법이다.\n지문3 특정금전신탁을 통해서 매매하던지 직접 매매하던지 매매하는 ETF는 동일하다. 그러나 투자비용에서는 위탁계좌를 통한 매매와 특정금전신탁을 통한 매매는 큰 차이가 있다. 특정금전신탁이 수취하는 신탁보수가 위탁계좌에는 없고, 매매수수료도 차이가 난다.\n지문4 증권회사를 통한 ETF매매는 한국거래소에 직접 주문을 내지만, 특정금전신탁을 통한 매매는 고객의 운용지시와 특정금전신탁의 주문이 증권사를 통해서 이루어 지기 때문에 아무리 빨라도 실시간 매매라고 할 수는 없다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '실전주식거래 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (106, 'MULTIPLE_CHOICE', '[{"data":"<보기>의 (    ) 안에 들어갈 내용으로 적합한 것을 모두 묶은 것은?","type":"QUESTION_TEXT"},{"data":"''금융상품 한눈에''(http://finlife.fss.or.kr/)에서는 (       ) 등의 금융상품 금리와 수익률, 보험료 등을 한번에 비교 조회할 수 있다,\n㉠예금  ㉡대출  ㉢연금저축  ㉣보험  ㉤펀드","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["㉠, ㉣","㉠, ㉡, ㉤","㉡, ㉢, ㉣, ㉤","㉠, ㉡, ㉢, ㉣, ㉤"]}]', '[{"data":"지문1, 지문2, 지문3, 지문4 ‘금융상품 한눈에’ 에서는 예금과 대출, 연금저축, 보험, 펀드 모두를 한 번에 비교할 수 있다.","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '비교공시 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (107, 'MULTIPLE_CHOICE', '[{"data":"<보기>의 (    ) 안에 들어갈 말로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"data":"주식 매매 시 가격을 지정해서 주문하는 것을 ( ㉠ )주문이라고 하고 가격은 정하지 않고 주문을 내면 접수된 시점에 가장 유리한 가격으로 매매가 체결되는 주문을 ( ㉡ )주문이라 한다","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["㉠ 지정가  ㉡ 시장가","㉠ 시장가  ㉡ 대용가","㉠ 지정가  ㉡ 대용가","㉠ 시장가  ㉡ 조건부지정가"]}]', '[{"data":"지문1 ‘ 지정가주문’과 ‘시장가주문’에 대한 설명\n지문2 증권을 매매할 때 위탁증거금으로 현금 대신 유가증권을 사용할 수 있다. 이때 대용 유가증권의 가격을 ‘대용가’라고 한다.\n지문3 & 지문4 ‘조건부 지정가’는 지정가로 거래를 시도하다가 거래가 체결되지 않으면 장 마감 시점에 시장가도 전환하며 매매 체결을 하는 주문거래 방식이다.","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '주문종류 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (108, 'MULTIPLE_CHOICE', '[{"data":"투자 수익률을 계산할 때 고려해야 할 사항으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["거래가 빈번하면 수수료 부담이 커진다","비과세 금융상품을 선택하면 수익률을 높일 수 있다","기회비용은 명시적으로 계산할 수 없으므로 고려하지 않는다","투자대상을 평가할 때는 수익과 함께 위험도 고려해야 한다"]}]', '[{"data":"수수료와 세금이 눈에 드러나는 비용이라면 그렇지 않은 것도 있다. 대표적인 예로 기회비용이 있다. 기회비용이란 어떤 행위를 하기 위해 포기해야 하는 다른 기회의 가치를 말하는데, 투자에도 그대로 적용된다. 예를 들어, 주식 투자를 하면서 많은 시간과 노력을 기울여 종목을 발굴할 것이다. 이런 시간과 노력이 얼마만큼 가치를 가질 것인지 명시적으로 계산하기는 어렵지만, 기회비용이 발생한 것만큼은 분명하다. 시간과 노력을 다른 곳에 기울일 수도 있기 때문이다. 투자 활동에 수반되는 기회비용을 줄이기 위한 방편으로 직접투자 대신 펀드와 위탁 판매와 같은 간접투자를 이용하기도 하는데, 이때는 투자 결정을 대신해 주는 대가로 운용 보수를 지불한다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/06/28 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '수익률 결정요소로서 비용', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (109, 'MULTIPLE_CHOICE', '[{"data":"다음과 같은 투자대안이 있을 때, 합리적 선택으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"data":"투자대안 A: 기대수익률 5%, 투자위험 10%,\n투자대안 B: 기대수익률 10%, 투자위험 10%,\n투자대안 C: 기대수익률 10%, 투자위험 7%,\n투자대안 D: 기대수익률 5%, 투자위험 7%","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["투자대안 A를 매수하고 B를 매도한다","투자대안 B를 매도하고 C를 매수한다","투자대안 C를 매수하고 D를 매도한다","투자대안 A를 매도하고 D를 매수한다"]}]', '[{"data":"기대수익이 동일하다면 투자위험이 적은 투자대안을 선택하고, 투자위험이 동일하다면 수익률이 큰 대안을 선택하는 것이 유리하다. A와 B는 투자위험이 동일하기 때문에 기대수익률이 큰 B를 매수하고 A를 매도하는 것이 유리하다.   ","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/06/28 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '합리적 투자결정', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (110, 'MULTIPLE_CHOICE', '[{"data":"홍길동씨는 주식시장에 이용할 수 있는 모든 정보가 반영되어 있다고 생각하지 않는 투자자이다. 홍길동씨의 생각에 부합하는 투자 전술로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["주식시장의 이례적인 현상을 활용해 투자한다","적정한 투자타이밍을 찾기 위해 노력한다","특정 산업이나 소수 종목에 집중 투자한다","주식을 매수한 다음 장기보유 한다"]}]', '[{"data":"적극적 투자 관리(Active Investment Style)는 다소 위험을 감수하더라도 시장의 평균을 넘어서는 초과 수익을 추구한다. 증권시장이 비효율적이라고 전제하고, 위험이 동일한 증권들 중에서 수익이 높은 증권을 선택하거나, 기대 수익이 동일한 증권 중에서 위험이 낮은 증권을 선택하는 방법이다. 적극적 투자 관리 방법으로는 소주종목이나 특정 산업에 집중적으로 투자하거나, 투자 타이밍을 포착하거나, 시장의 이례적인 현상을 이용해 종목을 선정하는 것이 대표적이다","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '적극적 투자관리 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (111, 'MULTIPLE_CHOICE', '[{"data":"직접 투자의 장단점에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["자신이 원할 때 투자종목을 사고 팔 수 있다","자신에게 적합한 포트폴리오를 스스로 구성한다","전문가의 도움 없이 투자할 수 있다","간접투자보다 항상 우수한 성과를 보인다"]}]', '[{"data":"직접 투자의 가장 큰 장점은 자신에게 적합한 포트폴리오를 스스로 꾸릴 수 있다는 점이다. 자신의 취향에 맞는 종목을 골라, 사고 싶을 때 사고 팔고 싶을 때 판다. 내 돈을 스스로 관리한다는 점에서 자부심도 느낄 수 있다. \n하지만 일반인들 중에 충분한 투자 경험과 역량을 갖춘 이는 많지 않은 데다, 단기간에 전문성을 갖추기도 어렵다. 투자 역량과 경험을 충분히 갖춘 투자자라고 해도 의사결정을 내리려면 필요한 정보를 취득하고 분석하는 데 많은 시간이 든다. 전문성을 갖추지 않은 채 투자 대안을 충분히 검토하지 않고 감정에 치우쳐 매매하면 수익은 내지 못하고 수수료만 지불할 가능성이 높다","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '직접투자 장단점 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (112, 'MULTIPLE_CHOICE', '[{"data":"투자기간 동안 주가가 지속적으로 상승하거나 하락할 때 적립식과 거치식 투자 성과에 대한 설명으로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["주가가 지속 상승하면, 거치식이 적립식보다 투자성과가 우수하다","주가가 지속 하락하면, 거치식이 적립식보다 투자성과가 우수하다","시장상황과 무관하게 적립식이 거치식보다 항상 나은 투자성과를 보인다","시장상황과 무관하게 거치식이 적립식보다 항상 나은 투자성과를 보인다"]}]', '[{"data":"투자기간 동안 주가가 지속적으로 하락하는 상황에서는 적립식 투자를 해도 손실을 피할 수 없다. 다만 목돈을 한꺼번에 투자는 것보다 손실 규모를 줄일 수 있다. 반대로 주가가 지속적으로 상승하는 경우에는 초기에 목돈을 투자는 거치식이 적립식보다 나은 성과를 보인다. ","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '적립식투자 장점 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (113, 'MULTIPLE_CHOICE', '[{"data":"투자자금 중 일부를 부채로 조달하는 레버리지투자의 효과에 대한 설명으로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["기대수익과 함께 위험도 감소한다","기대수익과 함께 위험도 증가한다","기대수익은 증가하지만 위험은 감소한다","기대수익은 감소하지만 위험은 증가한다"]}]', '[{"data":"금융에서는 실제 가격 변동보다 몇 배나 많은 투자 수익이 발생하는 현상을 레버리지 효과라고 한다. 레버리지 효과가 발생하려면 투자 자금 중에 일부를 자기 자본이 아닌 부채로 조달해야 한다. 분산투자를 하면 위험이 줄지만 기대 수익도 줄어든다. 이와 반대로 레버리지를 이용해 기대수익과 함께 위험을 높이는 투자 전략도 있다","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '레버리지투자 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (114, 'MULTIPLE_CHOICE', '[{"data":"□□기업의 부채비율이 500%라고 할 때, 부채비율을 줄일 수 있는 방법으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["차입금을 갚는다","사채를 발행한다","유상증자를 실시한다","기존 회사채를 상환한다"]}]', '[{"data":"부채비율을 줄이기 위해서는 부채를 낮추거나 자본을 늘려야 한다. \n지문 1에서 부채 항목인 차입금을 갚으면 부채가 줄어들어 부채비율을 줄인다.\n지문 2에서 타인자본인 사채를 발행하면, 부채항목이 늘어나기 때문에 부채비율을 늘리는 조치이다.\n지문 3의 유상증자를 실시하는 것은 자기자본인 자본을 증액하는 것이므로, 부채비율을 줄인다.\n지문 4에서 기존 발행된 회사채를 상환하여 부채항목을 줄일 수 있다.","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/06/15 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '부채와 자본 구별', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (115, 'MULTIPLE_CHOICE', '[{"data":"주식회사가 신규 투자를 받기 위해 자금을 조달하는 방식으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["최근 금리가 많이 하락하여 저리로 회사채를 발행하여 운영자금을 마련한다","최근 부동산 가격이 상승하여 보유하고 있는 유휴부지를 매각하여 설비투자 자금을 마련한다","최근 주가가 많이 올라 1:5으로 액면분할을 실시한다","최근 유력한 투자처를 소개받아 이사회 특별결의를 통해 제3자배정 유상증자를 실시한다"]}]', '[{"data":"신규 투자를 위한 자금조달은 자기자본을 늘리거나 타인자본을 차입하는 방식으로 진행할 수 있다. 금융기관에서 대출을 받는 방식도 가능하다\n지문 1에서 회사채 발행은 타인자본을 늘려 운영자금을 마련할 수 있다.\n지문 2에서 유휴부지를 매각하여 현금을 확보하면 설비투자를 진행할 수 있다.\n지문 3에서 액면분할은 자기자본의 지분권을 쪼개는 것일뿐 자본의 증가를 유발하지 않는다\n지문 4에서 제3자배정을 통한 유상증자 역시 설비투자를 마련할 수 있는 방안이다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/06/15 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '자금조달 수단', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (116, 'MULTIPLE_CHOICE', '[{"data":"배당금에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["배당은 기업의 잉여자본금을 주주에게 환원하는 대표적 행위이다","배당수익률이 높다는 것은 주가 대비 지급되는 주당 배당금이 높거나 반대로 주당 배당금 대비 주가가 낮은 경우이다","성장단계의 기업은 배당보다 투자에 집중하기 때문에 배당지급이 없거나 배당 지급 규모가 적을 가능성이 높다","배당수익률이 10%라면, 현재 주가가 향후 10% 상승할 가능성이 높다고 평가할 수 있다"]}]', '[{"data":"배당은 기업의 잉여자본을 주주에게 환원하는 경제행위이며, 주주는 기업에게 이익배당을 청구할 수 있는 권리가 있다. 성장단계의 기업은 배당보다 투자에 집중하는 경향이 높다. \n지문 2와 4의 배당수익률 산식은 (주당배당금/주가)*100이므로, 배당수익률이 높다면 배당금이 많거나 주가가 낮은 경우이다. 배당수익률은 배당 규모를 판단하는 지표이며, 주가의 예상 등락을 평가할 수 있는 가격지표로 활용할 수 없다","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/06/18 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '배당 관련용어 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (117, 'MULTIPLE_CHOICE', '[{"data":"상장기업이 주주와 이해관계자, 그리고 일반인을 대상으로 주가에 영향을 미칠만한 사실을 공개적으로 밝히는 행위는?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["공시","공표","공개","매매"]}]', '[{"data":"기업이 이해관계자와 일반인에게 주가에 영향을 미칠 만한 각종 사실을 공개적으로 밝히는 행위다. 공시는 사실성과 즉시성을 갖춰야만 투자자에게 올바른 정보를 신속하게 전달할 수 있다","type":"SOLUTION_TEXT"},{"data":[0],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '공시 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (118, 'MULTIPLE_CHOICE', '[{"data":"경제지표에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["GDP(국내총생산)와 경기종합지수는 일반적으로 금융시장 참여자가 시장에서 가장 중요하게 생각하는 경제지표라 할 수 있다","GDP수치는 분기별로 발표하는데 금리나 주가에 즉각적인 영향을 미치기 때문에 발표 직전 금융시장은 발표치 추이에 신경을 곤두세운다","경기종합지수는 경제의 각 부문을 대표하는 경제지표들을 가공, 종합하여 하나의 지표로 나타난 것이며 선행지수, 동행지수, 후행지수로 나누어진다","실업률, 전경련BSI(기업경기실사지수), 통계청CSI(소비자전망지수) 등도 금융시장에서 관심 가지는 기타 주요한 경제지표이다"]}]', '[{"data":"금리나 주가에 직접적인 영향을 미치는 것은 GDP 지표 발표치 자체가 아니라 한국은행과 각 금융 기관이 전망하는 향후 GDP 추정치와 이에 대한 시장의 컨센서스 변화인 경우가 많다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '경제지표 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (119, 'MULTIPLE_CHOICE', '[{"data":"물가와 채권 금리의 관계에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["향후 물가가 크게 오를 것으로 예상되면 돈에 대한 수요가 증가해 시중 금리는 오르게 된다","물가가 기대치보다 크게 오르게 되면 물가 안정을 제1의 목표로 삼는 한국은행은 기준금리를 올리는 등 시중 자금을 흡수해 돈의 공급을 줄이는데, 이는 시장 금리를 상승시키는 원인이 된다","물가 상승으로 한국은행의 기준금리 인상 등 통화긴축이 예상될 경우 주가에 긍정적인 영향을 끼친다","소비자 물가 지수는 한국은행의 통화 정책 결정 시 중요한 참고가 되기에 금융시장에 미치는 영향이 큰 편이다"]}]', '[{"data":"물가 지수의 변화가 채권시장에 끼치는 영향은 직접적인 데 반해 주식시장에 끼치는 영향은 다소 간접적이다. 물가 상승으로 한국은행의 기준금리 인상 등 긴축 통화가 예상될 경우 단기적으로 주가에는 좋지 않은 영향을 끼칠 수 있다. 하지만 장기적으로 물가 수준의 상승은 곧 기업이 보유하고 있는 자산 가격의 상승, 기업이 창출하는 명목 이익의 상승으로 연결되므로 주가에 긍정적으로 작용한다는 분석이 많다. ","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '물가의 영향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (120, 'MULTIPLE_CHOICE', '[{"data":"자본시장과 거시경제 변수 등에 대한 설명으로 가장 거리가 먼 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["시중 금리 수준이 높아지면 더 많은 대출이 일어나 시중에 통화량(유동성)이 더욱 풍부해진다","한국은행은 기준금리 수준 결정, 시중 은행의 지급준비율 결정, 통안채 발행량 조정의 3가지 주요 방법을 통해 시중 통화량을 조절한다","GDP는 한 나라의 경제 활동을 포괄적으로 나타내며 1년에 1번 연말에 발표된다","수많은 국가들이 자국의 통화가치를 강하게 하여 국가의 달러 환산 부(富)가 높아지도록 유도하고 있다"]}]', '[{"data":"③중장기 채권의 금리들이 현저히 떨어져 있을 경우 채권의 금리가 추가하락할 수 있는 여지가 적어져 경기가 좋지 않을 때 채권 가격이 상승하며 주식의 가격하락 위험을 상쇄시켜주는 주식+채권 포트폴리오 효과를 크게 기대하기 어렵다. ","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '상', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '거시경제변수 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (121, 'MULTIPLE_CHOICE', '[{"data":"합리적인 투자자라면 시장 상황이나 미래 가치 등을 판단하여 보유하고 있는 주식의 매도 여부를 결정한다. 그러나 일반적으로 그 종목의 적정가치를 따져보려 하지않고 자신이 구입한 가격만을 최우선 결정요인으로 판단하는 경우가 많다. 이러한 편향을 일컫는 말은 무엇인가?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["확증편향","기준점 편향","시기추론 편향","도박사의 오류"]}]', '[{"data":"사람들은 객관적인 판단이 아닌 사실이나 숫자를 기준으로 삼고, 이를 바탕으로 결정을 내리는데 이를 기준점 편향이라한다. 기준점 편향을 앵커링효과라고 도 한다.  앵커링효과에서 앵커(Anchor)는 배를 정박시킬 때 배가 떠내려가지 않도록 하는 닻을 의미하며 앵커링효과는 배를 정박시키는 닻을 내리듯 사람의 생각이나 판단이 그 기준점을 벗어나지 않는 것을 말한다.","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '기준점편향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (122, 'MULTIPLE_CHOICE', '[{"data":"금융상품 투자시 ‘과거의 운용실적이 미래의 수익을 보장하지 않습니다.’라는 문구는 다음 중 어떤 행동편향을 방지하기 위한 것인가?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["손실회피 편향","사후확증 편향","매몰비용의 오류","과거추세지속가정 편향"]}]', '[{"data":"과거의 운용실적이 미래의 수익을 보장하지 않는다는 것은 투자의사 결정을 할 때, 과거의 수익만을 보고 앞으로도 그런 수익이 지속될 것이라고 판단하는 것은 위험하다는 것을 알리는 것이다. 과거의 수익은 미래의 수익을 담보하는 대표성이 있는 것이 아닌데 앞으로도 과거처럼 수익이 날거라고 믿고 행동하는 과거추세지속가정 편향을 막기위한 것이다.","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '과거추세지속가정편향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (123, 'MULTIPLE_CHOICE', '[{"data":"다음은 행동편향에 빠지지 않기 위한 방법 중 하나로, 오버나이트 테스트에 대한 설명이다. 오버나이트 테스트를 통해 극복하고자 하는 행동편향으로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"data":"당신이 보유한 종목들이 투자 손해를 보고 있다. 만약 누군가가 오늘 당신이 보유한 모든 종목을 팔아 현금화해준다면 다음날 그 현금으로 당신이 가지고 있던 그 종목을 다시 매수할 것인가? 만약 다시 매수하지 않을 거라면 그런 종목을 지금은 왜 그대로 가지고 있는가? 오버나이트 테스트는 내가 보유하고 있는 종목들의 가치가 오르거나 내린 주식이 아닌 현금일때도 그 주식을 매수할 것인가를 생각해보고 계속 보유여부를 합리적으로 따져 보는 것이다.","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["군중심리 편향","현재중시 편향","시기추론 편향","매몰비용의 오류"]}]', '[{"data":"매몰비용의 오류에서 벗어나는 방법은 투자가 잘못되어 가고 있다는 것을 발견했다면 재빠르게 정신을 차리고 되돌아서는 것뿐이다. 매몰비용을 포기하고 합리적인 결정을 내려야 하는데 투자에서는 오버나이트 테스트를 해보는 것도 좋은 방법 중 하나이다. ","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '중', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '매몰비용편향 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (124, 'MULTIPLE_CHOICE', '[{"data":"투자 초보자들이 빠지기 쉬운 오류 중 하나는 투자의 패턴을 발견했다고 착각하는 것이다. 다음과 같은 생각을 갖는 A씨가 가진 행동편향으로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"data":"내가 몇 달간 쭉 지켜 지켜봤는데 이 주식은 3일 연속 하락하면 그 다음에는 꼭 오르더라고 그래서 지금 사야해","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["현상유지 편향","손실회피 편향","도박사의 오류","매몰비용의 오류"]}]', '[{"data":"도박사의 오류란 서로 독립적인 확률적 사건이 서로 확률에 영향을 미친다는 착각에 기인한 오류이다. 주가가 오르거나 내릴 확률은 반반일 뿐인데 며칠 연속 떨어졌으니 오를 때가 되었다거나 반대로 며칠 연속 올랐으니 오늘은 떨어질거라 판단하는 것이다.","type":"SOLUTION_TEXT"},{"data":[2],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '도박사의오류 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (125, 'MULTIPLE_CHOICE', '[{"data":"증권회사의 비대면 계좌를 개설하기 위해 필요한 것과 가장 거리가 먼것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["본인 명의의 스마트폰","주민등록증 또는 운전면허증","실명확인이 가능한 본인명의 금융기관 계좌","증권회사 HTS(Home Trading System)가 설치된 PC"]}]', '[{"data":"지문1 본인명의의 스마트 폰이 필요하다.\n지문2 신분증은 실명확인을 위한 신분증 촬영을 위해 필요하다.\n지문3 실명확인을 위해 필요하다.\n지문4 HTS는 개설된 계좌를 사용하여 거래에 필요한 프로그램이다. 비대면계좌를 개설하기 위해 반드시 필요한 것은 아니다.","type":"SOLUTION_TEXT"},{"data":[3],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '계좌개설절차 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (126, 'MULTIPLE_CHOICE', '[{"data":"주식매매를 위한 대기자금도 단기 실세금리 수준의 이자율을 받을 수 있도록 비대면 주식계좌 개설시 함께 계좌를 개설하는 단기 금융투자상품으로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["ELS","CMA","DLS","IRP"]}]', '[{"data":"지문1 ELS(Equity Linked Securities)는 주가지수 또는 특정주식가격의 변동과 연계되어 수익률이 결정되는 증권\n지문2 CMA(cash management account)어음관리계좌 또는 종합자산관리계좌라 불린다. 고객이 예치한 자금을 CP나 양도성예금증서(CD)·국공채 등의 채권에 투자하여 그 수익을 고객에게 돌려주는 금융상품\n지문3 DLS(Derivative Linked Securities) 주가 외 기초자산(금리, 통화, 상품, 신용위험 등) 가격의 변동과 연계되어 수익률이 결정되는 증권\n지문4 개인형 퇴직연금 IRP (Individual Retirement Pension)개인별로 퇴직금 및 여유자금을 운용할 수 있는 퇴직금 전용계좌","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', 'CMA 이해', null, null);
insert into "ETEST"."PROBLEM" ("PROB_ID", "ANSWER_TYPE", "QUESTION", "SOLUTION", "DIFFICULTY", "CATEGORY", "IMG_SRC", "TIME_RECOMMENDATION", "CREATOR_ID", "CREATE_DATE", "VALIDATOR_ID", "VALIDATE_DATE", "EDITOR_ID", "EDIT_DATE", "SOURCE", "INTENTION", "QUESTION_INITIAL", "SOLUTION_INITIAL" ) values (127, 'MULTIPLE_CHOICE', '[{"data":"시장가 주문에 대한 설명으로 <보기>의 (    ) 안에 들어갈 말로 가장 올바른 것은?","type":"QUESTION_TEXT"},{"data":"시장가 주문이란 투자자가 종목과 ( ㉠ )은 지정하되 (  ㉡ )은 지정하지 않고 주문을 내면 주문이 접수된 시점에서 가장 유리한 가격으로 매매가 성립되는 주문을 말한다","type":"PREFACED_EXAMPLE_BOX_TEXT","dataType":"text","preface":"null"},{"type":"MULTIPLE_CHOICE_TEXT","dataType":"text","data":["㉠ 수량  ㉡ 비율","㉠ 수량  ㉡ 가격","㉠ 가격  ㉡ 수량","㉠ 가격  ㉡ 비율"]}]', '[{"data":"지문1~4 시장가 주문이란 투자자가 (종목), (수량)은 지정하되 (가격)은 지정하지 않고 주문을 내면 주문이 접수된 시점에서 가장 유리한 가격으로 매매가 성립되는 주문을 말한다. ","type":"SOLUTION_TEXT"},{"data":[1],"type":"MULTIPLE_CHOICE_CORRECT_ANSWER"}]', '하', '미니테스트', null, null, '이장영', TO_DATE('2021/07/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), null, null, null, null, '집필진 출제', '주문종류 이해', null, null);

------- End of ETEST.PROBLEM -------------- Begin of ETEST.DIAGNOSIS_PROBLEM-------

insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (21, 1, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (22, 2, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (23, 3, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (24, 4, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (25, 5, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (26, 5, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (27, 5, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (28, 5, 4);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (29, 6, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (30, 6, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (31, 7, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (32, 7, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (33, 7, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (34, 8, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (35, 8, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (36, 8, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (37, 9, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (38, 9, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (39, 9, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (40, 10, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (41, 10, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (42, 10, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (43, 10, 4);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (44, 10, 5);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (45, 11, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (46, 11, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (47, 11, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (48, 11, 4);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (49, 11, 5);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (50, 12, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (51, 12, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (52, 12, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (53, 12, 4);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (54, 12, 5);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (55, 13, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (56, 14, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (57, 14, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (58, 15, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (59, 15, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (60, 15, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (61, 16, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (62, 16, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (63, 16, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (64, 17, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (65, 17, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (66, 17, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (67, 18, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (68, 18, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (69, 18, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (70, 19, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (71, 19, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (72, 19, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (73, 20, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (74, 20, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (75, 20, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (76, 21, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (77, 21, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (78, 21, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (79, 22, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (80, 22, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (81, 22, 1);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (82, 23, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (83, 23, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (84, 23, 2);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (85, 24, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (86, 24, 3);
insert into "ETEST"."DIAGNOSIS_PROBLEM" ("PROB_ID", "CURRICULUM_ID", "ORDER_NUM" ) values (87, 24, 3);

------- End of ETEST.DIAGNOSIS_PROBLEM -------------- Begin of ETEST.META_CODE_MASTER-------

insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 그룹영역11', '콘텐츠 그룹영역', 2, '11', '위험관리 기초');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 그룹영역12', '콘텐츠 그룹영역', 2, '12', '자산배분 기초');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 그룹영역13', '콘텐츠 그룹영역', 2, '13', '위험관리/자산배분 응용');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 그룹영역21', '콘텐츠 그룹영역', 2, '21', '행동편향 기초');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 그룹영역22', '콘텐츠 그룹영역', 2, '22', '행동편향 응용');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 그룹영역31', '콘텐츠 그룹영역', 2, '31', '투자기초(지식 기초)');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 그룹영역32', '콘텐츠 그룹영역', 2, '32', '투자실전(종목고르기)');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 그룹영역33', '콘텐츠 그룹영역', 2, '33', '투자실전(가격변동특징)');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 그룹영역34', '콘텐츠 그룹영역', 2, '34', '투자실전(매매방법)');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 그룹영역999', '콘텐츠 그룹영역', 2, '999', '기타');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 난이도10', '콘텐츠 난이도', 7, '10', '1레벨');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 난이도20', '콘텐츠 난이도', 7, '20', '2레벨');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 난이도30', '콘텐츠 난이도', 7, '30', '3레벨');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 난이도40', '콘텐츠 난이도', 7, '40', '4레벨');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 난이도50', '콘텐츠 난이도', 7, '50', '5레벨');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 난이도999', '콘텐츠 난이도', 7, '999', '기타');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 대영역10', '콘텐츠 대영역', 1, '10', 'Risk');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 대영역20', '콘텐츠 대영역', 1, '20', 'Bias');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 대영역30', '콘텐츠 대영역', 1, '30', 'Knowledge');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 대영역999', '콘텐츠 대영역', 1, '999', '기타');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 분류10', '콘텐츠 분류', null, '10', '금융투자상품');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 분류20', '콘텐츠 분류', null, '20', '주식');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 분류30', '콘텐츠 분류', null, '30', '채권');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 분류40', '콘텐츠 분류', null, '40', '파생');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 분류50', '콘텐츠 분류', null, '50', '펀드');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 분류60', '콘텐츠 분류', null, '60', '일임');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 분류70', '콘텐츠 분류', null, '70', '신탁');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 분류80', '콘텐츠 분류', null, '80', '대체');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 분류999', '콘텐츠 분류', null, '999', '기타');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역101', '콘텐츠 상세영역', 4, '101', '투자위험 정의');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역102', '콘텐츠 상세영역', 4, '102', '투자위험 크기');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역103', '콘텐츠 상세영역', 4, '103', '자산배분 정의');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역104', '콘텐츠 상세영역', 4, '104', '자산배분 방법');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역105', '콘텐츠 상세영역', 4, '105', '자산배분 기준');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역106', '콘텐츠 상세영역', 4, '106', '방어형투자자의 위험관리');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역107', '콘텐츠 상세영역', 4, '107', '공격형투자자의 위험관리');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역201', '콘텐츠 상세영역', 4, '201', '행동편향 정의');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역202', '콘텐츠 상세영역', 4, '202', '행동편향 특징');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역203', '콘텐츠 상세영역', 4, '203', '행동편향 종류');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역204', '콘텐츠 상세영역', 4, '204', '공격형투자자의 행동편향');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역205', '콘텐츠 상세영역', 4, '205', '방어형투자자의 행동편향');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역206', '콘텐츠 상세영역', 4, '206', '단기투자자의 행동편향');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역207', '콘텐츠 상세영역', 4, '207', '장기투자자의 행동편향');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역208', '콘텐츠 상세영역', 4, '208', '행동편향 극복방법');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역209', '콘텐츠 상세영역', 4, '209', '행동편향 극복루틴');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역301', '콘텐츠 상세영역', 4, '301', '수익보장의심');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역401', '콘텐츠 상세영역', 4, '401', '투자원리');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역402', '콘텐츠 상세영역', 4, '402', '주식의 수익/위험');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역403', '콘텐츠 상세영역', 4, '403', '자산관리 목표');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역404', '콘텐츠 상세영역', 4, '404', '포트폴리오');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역405', '콘텐츠 상세영역', 4, '405', '장기투자');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역406', '콘텐츠 상세영역', 4, '406', '재무제표');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역407', '콘텐츠 상세영역', 4, '407', '기업부채');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역408', '콘텐츠 상세영역', 4, '408', '기업이익');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역409', '콘텐츠 상세영역', 4, '409', '사업가치/재산가치');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역410', '콘텐츠 상세영역', 4, '410', '시가총액');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역411', '콘텐츠 상세영역', 4, '411', 'PER/PBR/PSR');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역412', '콘텐츠 상세영역', 4, '412', '시장가치 한계');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역413', '콘텐츠 상세영역', 4, '413', '종목고르기 종합판단');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역414', '콘텐츠 상세영역', 4, '414', '배당');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역415', '콘텐츠 상세영역', 4, '415', '고배당, 시가배당');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역416', '콘텐츠 상세영역', 4, '416', '가격변동 단기요인');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역417', '콘텐츠 상세영역', 4, '417', '주식종류별 변동특징');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역418', '콘텐츠 상세영역', 4, '418', '유통주식수');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역419', '콘텐츠 상세영역', 4, '419', '기업단기실적');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역420', '콘텐츠 상세영역', 4, '420', 'CEO, 고객');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역421', '콘텐츠 상세영역', 4, '421', '업종특징');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역422', '콘텐츠 상세영역', 4, '422', '금리');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역423', '콘텐츠 상세영역', 4, '423', '경기');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역424', '콘텐츠 상세영역', 4, '424', '원자재');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역425', '콘텐츠 상세영역', 4, '425', '주식기초');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역426', '콘텐츠 상세영역', 4, '426', '주식시장 기초');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역427', '콘텐츠 상세영역', 4, '427', '주문/결제');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역428', '콘텐츠 상세영역', 4, '428', '손익계산');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역429', '콘텐츠 상세영역', 4, '429', '공시');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역430', '콘텐츠 상세영역', 4, '430', '역사적인 가격');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역431', '콘텐츠 상세영역', 4, '431', '시장가격');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역432', '콘텐츠 상세영역', 4, '432', '시세');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역433', '콘텐츠 상세영역', 4, '433', '기술적분석');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역434', '콘텐츠 상세영역', 4, '434', '세금/수수료');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역435', '콘텐츠 상세영역', 4, '435', '매매전략');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 상세영역999999', '콘텐츠 상세영역', 4, '999999', '기타');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역101', '콘텐츠 세부영역', 3, '101', '투자위험 기초');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역102', '콘텐츠 세부영역', 3, '102', '자산배분 기초');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역103', '콘텐츠 세부영역', 3, '103', '투자유형별 위험관리');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역201', '콘텐츠 세부영역', 3, '201', '행동편향기초');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역202', '콘텐츠 세부영역', 3, '202', '투자유형별 행동편향');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역203', '콘텐츠 세부영역', 3, '203', '행동편향 극복방안');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역301', '콘텐츠 세부영역', 3, '301', '투자자보호 ');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역401', '콘텐츠 세부영역', 3, '401', '기본개념');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역402', '콘텐츠 세부영역', 3, '402', '투자원칙 ');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역403', '콘텐츠 세부영역', 3, '403', '회계기초 ');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역404', '콘텐츠 세부영역', 3, '404', '본질가치');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역405', '콘텐츠 세부영역', 3, '405', '시장가치');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역406', '콘텐츠 세부영역', 3, '406', '종목판단');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역407', '콘텐츠 세부영역', 3, '407', '배당 ');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역408', '콘텐츠 세부영역', 3, '408', '주식특징');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역409', '콘텐츠 세부영역', 3, '409', '기업/업종특징');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역410', '콘텐츠 세부영역', 3, '410', '거시경제특징');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역411', '콘텐츠 세부영역', 3, '411', '매매기초');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역412', '콘텐츠 세부영역', 3, '412', '매매거래');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역413', '콘텐츠 세부영역', 3, '413', '시장상황');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역414', '콘텐츠 세부영역', 3, '414', '매매전략');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 세부영역9999', '콘텐츠 세부영역', 3, '9999', '기타');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 수준10', '콘텐츠 수준', 6, '10', '기본');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 수준20', '콘텐츠 수준', 6, '20', '심화');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 수준999', '콘텐츠 수준', 6, '999', '기타');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관10', '콘텐츠 제작기관', null, '10', '금융투자협회');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관11', '콘텐츠 제작기관', null, '11', '금융투자교육원(전문)');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관12', '콘텐츠 제작기관', null, '12', '전국투자자교육협의회');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관21', '콘텐츠 제작기관', null, '21', '미래에셋증권');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관22', '콘텐츠 제작기관', null, '22', '대신증권');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관23', '콘텐츠 제작기관', null, '23', '신한금융투자증권');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관25', '콘텐츠 제작기관', null, '25', '삼성증권');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관26', '콘텐츠 제작기관', null, '26', '키움증권');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관31', '콘텐츠 제작기관', null, '31', '금융감독원');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관32', '콘텐츠 제작기관', null, '32', '한국거래소');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관33', '콘텐츠 제작기관', null, '33', '한국은행');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관34', '콘텐츠 제작기관', null, '34', '자본시장연구원');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관35', '콘텐츠 제작기관', null, '35', '금융연수원');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관61', '콘텐츠 제작기관', null, '61', '삼프로TV');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관62', '콘텐츠 제작기관', null, '62', '슈카');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관63', '콘텐츠 제작기관', null, '63', '815머니톡');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관81', '콘텐츠 제작기관', null, '81', 'BNP Paribas 그룹');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 제작기관9999', '콘텐츠 제작기관', null, '9999', '기타');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 종류CV', '콘텐츠 종류', null, 'CV', 'Video Content');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 종류CW', '콘텐츠 종류', null, 'CW', 'Web Book Content');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 출처10', '콘텐츠 출처', 5, '10', '자체');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 출처20', '콘텐츠 출처', 5, '20', '외부');
insert into "ETEST"."META_CODE_MASTER" ("META_CODE_ID", "DOMAIN", "SEQUENCE", "CODE", "CODE_NAME" ) values ('콘텐츠 출처999', '콘텐츠 출처', 5, '999', '기타');

------- End of ETEST.META_CODE_MASTER -------------- Begin of ETEST.PART-------

insert into "ETEST"."PART" ("PART_ID", "PART_NAME", "ORDER_NUM", "PROBLEM_COUNT" ) values (1, '금융투자 이해 및 금융투자 기본', 1, 4);
insert into "ETEST"."PART" ("PART_ID", "PART_NAME", "ORDER_NUM", "PROBLEM_COUNT" ) values (2, '금융투자상품 - 주식', 2, 4);
insert into "ETEST"."PART" ("PART_ID", "PART_NAME", "ORDER_NUM", "PROBLEM_COUNT" ) values (3, '금융투자상품 - 가치평가', 3, 4);
insert into "ETEST"."PART" ("PART_ID", "PART_NAME", "ORDER_NUM", "PROBLEM_COUNT" ) values (4, '금융투자상품 - 보유관리', 4, 4);
insert into "ETEST"."PART" ("PART_ID", "PART_NAME", "ORDER_NUM", "PROBLEM_COUNT" ) values (5, '행동편향', 5, 4);

------- End of ETEST.PART -------------- Begin of ETEST.PROBLEM_CHOICE-------

insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (1, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (1, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (1, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (1, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (2, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (2, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (2, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (2, 4, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (3, 1, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (3, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (3, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (3, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (4, 1, 145, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (4, 2, 145, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (4, 3, 145, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (4, 4, 144, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (5, 1, 257, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (5, 2, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (5, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (5, 4, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (6, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (6, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (6, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (6, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (7, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (7, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (7, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (7, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (8, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (8, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (8, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (8, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (9, 1, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (9, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (9, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (9, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (10, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (10, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (10, 3, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (10, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (11, 1, 307, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (11, 2, 308, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (11, 3, 309, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (11, 4, 310, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (12, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (12, 2, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (12, 3, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (12, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (13, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (13, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (13, 3, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (13, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (14, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (14, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (14, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (14, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (15, 1, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (15, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (15, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (15, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (16, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (16, 2, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (16, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (16, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (17, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (17, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (17, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (17, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (18, 1, 365, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (18, 2, 366, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (18, 3, 367, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (18, 4, 367, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (19, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (19, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (19, 3, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (19, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (20, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (20, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (20, 3, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (20, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (21, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (21, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (21, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (21, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (22, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (22, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (22, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (22, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (23, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (23, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (23, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (23, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (24, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (24, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (24, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (24, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (25, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (25, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (26, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (26, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (27, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (27, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (28, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (28, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (29, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (29, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (29, 3, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (29, 4, null, 0);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (30, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (30, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (30, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (30, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (31, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (31, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (31, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (31, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (32, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (32, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (32, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (32, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (33, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (33, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (33, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (33, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (34, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (34, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (34, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (34, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (35, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (35, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (35, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (35, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (36, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (36, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (36, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (36, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (37, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (37, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (37, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (37, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (38, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (38, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (38, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (38, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (39, 1, null, 1);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (39, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (39, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (39, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (40, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (40, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (41, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (41, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (42, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (42, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (43, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (43, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (44, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (44, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (45, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (45, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (46, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (46, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (47, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (47, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (48, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (48, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (49, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (49, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (50, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (50, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (51, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (51, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (52, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (52, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (53, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (53, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (54, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (54, 2, null, 10);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (55, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (55, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (55, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (55, 4, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (56, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (56, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (56, 3, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (56, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (57, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (57, 2, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (57, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (57, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (58, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (58, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (58, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (58, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (59, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (59, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (59, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (59, 4, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (60, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (60, 2, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (60, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (60, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (61, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (61, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (61, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (61, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (62, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (62, 2, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (62, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (62, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (63, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (63, 2, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (63, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (63, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (64, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (64, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (64, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (64, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (65, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (65, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (65, 3, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (65, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (66, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (66, 2, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (66, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (66, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (67, 1, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (67, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (67, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (67, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (68, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (68, 2, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (68, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (68, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (69, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (69, 2, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (69, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (69, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (70, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (70, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (70, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (70, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (71, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (71, 2, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (71, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (71, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (72, 1, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (72, 2, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (72, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (72, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (73, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (73, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (73, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (73, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (74, 1, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (74, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (74, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (74, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (75, 1, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (75, 2, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (75, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (75, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (76, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (76, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (76, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (76, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (77, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (77, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (77, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (77, 4, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (78, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (78, 2, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (78, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (78, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (79, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (79, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (79, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (79, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (80, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (80, 2, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (80, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (80, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (81, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (81, 2, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (81, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (81, 4, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (82, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (82, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (82, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (82, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (83, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (83, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (83, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (83, 4, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (84, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (84, 2, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (84, 3, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (84, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (85, 1, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (85, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (85, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (85, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (86, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (86, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (86, 3, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (86, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (87, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (87, 2, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (87, 3, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (87, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (88, 1, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (88, 2, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (88, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (88, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (89, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (89, 2, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (89, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (89, 4, 77, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (90, 1, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (90, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (90, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (90, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (91, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (91, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (91, 3, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (91, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (92, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (92, 2, 175, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (92, 3, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (92, 4, 193, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (93, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (93, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (93, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (93, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (94, 1, 281, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (94, 2, 284, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (94, 3, 283, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (94, 4, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (95, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (95, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (95, 3, 304, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (95, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (96, 1, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (96, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (96, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (96, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (97, 1, 320, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (97, 2, 320, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (97, 3, 321, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (97, 4, 325, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (98, 1, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (98, 2, 337, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (98, 3, 334, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (98, 4, 341, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (99, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (99, 2, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (99, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (99, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (100, 1, 451, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (100, 2, 450, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (100, 3, 452, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (100, 4, 449, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (101, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (101, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (101, 3, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (101, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (102, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (102, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (102, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (102, 4, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (103, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (103, 2, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (103, 3, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (103, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (104, 1, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (104, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (104, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (104, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (105, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (105, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (105, 3, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (105, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (106, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (106, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (106, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (106, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (107, 1, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (107, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (107, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (107, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (108, 1, 68, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (108, 2, 69, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (108, 3, 70, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (108, 4, 71, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (109, 1, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (109, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (109, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (109, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (110, 1, 145, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (110, 2, 145, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (110, 3, 144, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (110, 4, 145, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (111, 1, 112, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (111, 2, 112, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (111, 3, 112, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (111, 4, 113, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (112, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (112, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (112, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (112, 4, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (113, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (113, 2, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (113, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (113, 4, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (114, 1, 40, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (114, 2, 194, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (114, 3, 193, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (114, 4, 194, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (115, 1, 194, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (115, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (115, 3, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (115, 4, 216, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (116, 1, 176, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (116, 2, 177, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (116, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (116, 4, 177, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (117, 1, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (117, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (117, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (117, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (118, 1, 320, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (118, 2, 320, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (118, 3, 321, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (118, 4, 325, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (119, 1, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (119, 2, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (119, 3, null, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (119, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (120, 1, 341, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (120, 2, 150, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (120, 3, 150, 8);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (120, 4, null, 5);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (121, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (121, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (121, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (121, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (122, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (122, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (122, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (122, 4, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (123, 1, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (123, 2, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (123, 3, null, 3);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (123, 4, null, 6);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (124, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (124, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (124, 3, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (124, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (125, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (125, 2, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (125, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (125, 4, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (126, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (126, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (126, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (126, 4, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (127, 1, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (127, 2, null, 4);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (127, 3, null, 2);
insert into "ETEST"."PROBLEM_CHOICE" ("PROB_ID", "CHOICE_NUM", "UK_ID", "CHOICE_SCORE" ) values (127, 4, null, 2);

------- End of ETEST.PROBLEM_CHOICE -------------- Begin of ETEST.PROBLEM_UK_REL-------

insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (22, 81);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (23, 82);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (90, 150);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (91, 164);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (92, 171);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (93, 230);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (94, 280);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (95, 303);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (97, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (98, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (99, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (100, 448);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (101, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (103, 443);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (104, 359);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (105, 385);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (106, 383);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (108, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (109, 92);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (110, 144);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (111, 112);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (21, 80);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (24, 83);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (25, 141);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (26, 142);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (89, 71);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (28, 475);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (29, 86);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (30, 87);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (31, 89);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (32, 90);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (33, 91);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (34, 89);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (35, 90);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (36, 91);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (37, 89);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (38, 90);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (39, 91);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (40, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (41, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (42, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (43, 450);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (44, 462);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (45, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (46, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (47, 452);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (48, 461);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (49, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (50, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (51, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (52, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (53, 456);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (54, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (55, 52);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (57, 101);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (59, 161);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (61, 256);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (62, 267);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (63, 278);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (64, 102);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (68, 178);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (70, 422);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (72, 285);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (75, 297);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (77, 316);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (82, 106);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (88, 47);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (112, 123);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (113, 126);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (114, 268);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (115, 192);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (116, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (117, 204);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (118, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (119, 330);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (120, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (121, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (122, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (123, 455);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (124, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (125, 387);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (126, 390);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (21, 80);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (22, 81);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (23, 82);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (24, 83);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (25, 141);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (26, 142);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (27, 139);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (28, 140);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (29, 86);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (30, 87);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (40, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (41, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (42, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (43, 450);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (44, 462);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (45, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (46, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (47, 452);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (48, 461);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (49, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (50, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (51, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (52, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (53, 456);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (54, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (55, 100);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (56, 63);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (57, 101);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (58, 99);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (59, 152);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (60, 166);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (61, 260);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (63, 256);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (64, 102);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (66, 285);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (67, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (68, 178);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (69, 179);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (70, 73);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (71, 74);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (72, 75);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (75, 296);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (76, 312);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (77, 295);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (78, 298);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (79, 232);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (80, 395);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (81, 306);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (82, 104);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (84, 106);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (86, 246);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (87, 301);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (102, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (10, 341);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (1, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (2, 67);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (3, 129);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (4, 145);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (5, 284);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (6, 253);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (7, 197);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (8, 302);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (9, 30);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (11, 307);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (12, 343);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (13, 447);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (14, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (15, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (16, 459);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (17, 348);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (18, 363);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (19, 396);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (20, 428);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (90, 150);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (91, 164);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (92, 171);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (93, 230);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (94, 280);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (95, 303);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (97, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (98, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (99, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (100, 448);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (101, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (103, 443);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (104, 359);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (105, 385);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (106, 383);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (108, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (109, 92);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (110, 144);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (111, 112);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (112, 123);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (113, 126);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (114, 268);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (115, 192);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (116, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (117, 204);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (118, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (119, 330);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (120, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (121, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (122, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (123, 455);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (124, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (125, 387);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (126, 390);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (21, 80);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (22, 81);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (23, 82);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (24, 83);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (25, 141);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (26, 142);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (27, 139);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (28, 140);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (29, 86);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (30, 87);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (40, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (41, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (42, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (43, 450);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (44, 462);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (45, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (46, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (47, 452);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (88, 47);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (89, 71);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (48, 461);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (49, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (50, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (51, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (52, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (53, 456);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (54, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (55, 100);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (56, 63);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (57, 101);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (58, 99);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (59, 152);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (60, 166);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (61, 260);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (63, 256);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (64, 102);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (66, 285);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (67, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (68, 178);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (69, 179);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (70, 73);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (71, 74);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (72, 75);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (75, 296);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (76, 312);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (77, 295);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (78, 298);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (79, 232);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (80, 395);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (81, 306);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (82, 104);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (84, 106);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (86, 246);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (87, 301);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (102, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (10, 341);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (1, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (2, 67);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (3, 129);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (4, 145);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (5, 284);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (6, 253);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (7, 197);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (8, 302);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (9, 30);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (11, 307);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (12, 343);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (13, 447);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (14, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (15, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (16, 459);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (17, 348);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (18, 363);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (19, 396);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (20, 428);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (90, 150);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (89, 71);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (88, 47);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (91, 164);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (92, 171);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (93, 230);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (94, 280);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (95, 303);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (97, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (98, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (99, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (100, 448);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (101, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (103, 443);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (104, 359);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (105, 385);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (106, 383);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (108, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (109, 92);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (110, 144);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (111, 112);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (112, 123);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (113, 126);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (114, 268);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (115, 192);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (116, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (117, 204);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (118, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (119, 330);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (120, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (121, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (122, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (123, 455);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (124, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (125, 387);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (126, 390);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (21, 80);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (22, 81);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (23, 82);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (24, 83);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (25, 141);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (26, 142);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (27, 139);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (28, 140);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (29, 86);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (30, 87);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (40, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (41, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (42, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (43, 450);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (44, 462);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (45, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (46, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (47, 452);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (48, 461);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (49, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (50, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (51, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (52, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (53, 456);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (54, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (55, 100);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (56, 63);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (57, 101);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (58, 99);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (59, 152);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (60, 166);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (61, 260);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (63, 256);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (64, 102);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (66, 285);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (67, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (68, 178);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (69, 179);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (70, 73);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (71, 74);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (72, 75);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (75, 296);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (76, 312);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (77, 295);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (78, 298);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (79, 232);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (80, 395);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (81, 306);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (82, 104);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (84, 106);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (86, 246);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (87, 301);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (102, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (10, 341);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (1, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (2, 67);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (3, 129);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (4, 145);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (5, 284);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (6, 253);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (7, 197);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (8, 302);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (9, 30);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (11, 307);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (12, 343);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (13, 447);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (14, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (15, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (16, 459);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (17, 348);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (18, 363);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (19, 396);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (20, 428);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (90, 150);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (91, 164);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (92, 171);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (93, 230);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (94, 280);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (95, 303);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (97, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (88, 47);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (89, 71);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (98, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (99, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (100, 448);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (101, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (103, 443);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (104, 359);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (105, 385);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (106, 383);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (108, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (109, 92);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (110, 144);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (111, 112);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (112, 123);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (113, 126);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (114, 268);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (115, 192);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (116, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (117, 204);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (118, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (119, 330);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (120, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (121, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (122, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (123, 455);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (124, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (125, 387);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (126, 390);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (21, 80);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (22, 81);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (23, 82);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (24, 83);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (25, 141);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (26, 142);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (27, 139);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (28, 140);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (29, 86);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (30, 87);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (40, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (41, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (42, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (43, 450);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (44, 462);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (45, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (46, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (47, 452);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (48, 461);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (49, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (50, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (51, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (52, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (53, 456);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (54, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (55, 100);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (56, 63);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (57, 101);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (58, 99);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (59, 152);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (60, 166);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (61, 260);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (63, 256);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (64, 102);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (66, 285);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (67, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (68, 178);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (69, 179);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (70, 73);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (71, 74);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (72, 75);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (75, 296);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (76, 312);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (77, 295);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (78, 298);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (79, 232);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (80, 395);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (81, 306);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (82, 104);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (84, 106);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (86, 246);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (87, 301);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (102, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (10, 341);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (1, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (2, 67);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (3, 129);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (4, 145);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (5, 284);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (6, 253);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (7, 197);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (8, 302);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (9, 30);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (11, 307);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (12, 343);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (13, 447);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (14, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (15, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (16, 459);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (17, 348);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (18, 363);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (19, 396);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (20, 428);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (88, 47);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (89, 71);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (90, 150);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (91, 164);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (92, 171);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (93, 230);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (94, 280);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (95, 303);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (97, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (98, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (99, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (100, 448);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (101, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (103, 443);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (104, 359);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (105, 385);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (106, 383);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (108, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (109, 92);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (110, 144);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (111, 112);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (112, 123);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (113, 126);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (114, 268);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (115, 192);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (116, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (117, 204);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (118, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (119, 330);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (120, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (121, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (122, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (123, 455);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (124, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (125, 387);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (126, 390);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (21, 80);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (22, 81);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (23, 82);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (24, 83);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (25, 141);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (26, 142);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (27, 139);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (28, 140);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (29, 86);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (30, 87);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (40, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (41, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (42, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (43, 450);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (44, 462);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (45, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (46, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (47, 452);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (48, 461);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (49, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (50, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (51, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (52, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (53, 456);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (54, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (55, 100);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (56, 63);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (57, 101);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (58, 99);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (59, 152);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (60, 166);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (61, 260);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (63, 256);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (64, 102);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (66, 285);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (67, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (68, 178);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (69, 179);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (70, 73);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (71, 74);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (72, 75);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (75, 296);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (76, 312);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (77, 295);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (78, 298);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (79, 232);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (80, 395);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (81, 306);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (82, 104);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (84, 106);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (86, 246);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (87, 301);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (102, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (10, 341);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (1, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (2, 67);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (3, 129);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (4, 145);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (5, 284);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (6, 253);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (7, 197);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (8, 302);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (9, 30);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (11, 307);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (12, 343);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (13, 447);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (14, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (15, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (16, 459);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (17, 348);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (18, 363);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (19, 396);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (20, 428);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (1, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (2, 67);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (3, 129);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (4, 145);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (5, 284);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (6, 253);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (7, 197);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (8, 302);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (9, 30);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (10, 341);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (11, 307);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (12, 343);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (13, 447);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (14, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (15, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (16, 459);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (17, 348);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (18, 363);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (19, 396);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (20, 428);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (74, 294);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (71, 74);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (66, 278);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (67, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (65, 281);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (60, 168);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (60, 47);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (56, 247);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (58, 99);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (87, 398);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (86, 246);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (85, 304);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (84, 250);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (83, 231);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (81, 253);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (80, 47);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (80, 49);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (79, 387);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (78, 341);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (76, 341);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (27, 143);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (109, 92);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (110, 144);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (111, 112);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (112, 123);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (113, 126);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (114, 268);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (115, 192);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (116, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (117, 204);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (118, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (119, 330);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (120, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (121, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (122, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (123, 455);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (124, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (125, 387);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (126, 390);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (127, 386);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (88, 47);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (89, 71);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (90, 150);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (91, 164);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (92, 171);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (93, 230);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (94, 280);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (95, 303);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (97, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (98, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (99, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (100, 448);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (101, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (103, 443);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (104, 359);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (105, 385);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (106, 383);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (108, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (109, 92);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (110, 144);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (111, 112);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (112, 123);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (113, 126);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (114, 268);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (115, 192);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (116, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (117, 204);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (118, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (119, 330);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (120, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (121, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (122, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (123, 455);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (88, 47);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (89, 71);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (90, 150);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (91, 164);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (92, 171);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (93, 230);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (94, 280);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (95, 303);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (96, 215);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (97, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (98, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (99, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (100, 448);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (101, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (102, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (103, 443);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (104, 359);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (105, 385);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (106, 383);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (107, 364);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (108, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (124, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (125, 387);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (126, 390);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (21, 80);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (22, 81);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (23, 82);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (24, 83);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (25, 141);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (26, 142);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (27, 139);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (28, 140);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (29, 86);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (30, 87);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (40, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (41, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (42, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (43, 450);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (44, 462);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (45, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (46, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (47, 452);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (48, 461);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (49, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (50, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (51, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (52, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (53, 456);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (54, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (55, 100);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (56, 63);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (57, 101);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (58, 99);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (59, 152);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (60, 166);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (61, 260);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (63, 256);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (64, 102);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (66, 285);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (67, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (68, 178);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (69, 179);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (70, 73);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (71, 74);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (72, 75);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (75, 296);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (76, 312);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (77, 295);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (78, 298);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (79, 232);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (80, 395);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (81, 306);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (82, 104);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (84, 106);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (86, 246);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (87, 301);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (102, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (10, 341);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (1, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (2, 67);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (3, 129);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (4, 145);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (5, 284);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (6, 253);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (7, 197);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (8, 302);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (9, 30);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (11, 307);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (12, 343);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (13, 447);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (14, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (15, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (16, 459);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (17, 348);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (18, 363);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (19, 396);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (20, 428);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (88, 47);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (89, 71);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (90, 150);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (91, 164);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (92, 171);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (93, 230);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (94, 280);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (95, 303);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (97, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (98, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (99, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (100, 448);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (101, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (103, 443);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (104, 359);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (105, 385);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (106, 383);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (108, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (109, 92);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (110, 144);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (111, 112);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (112, 123);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (113, 126);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (114, 268);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (115, 192);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (116, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (117, 204);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (118, 319);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (119, 330);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (120, 311);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (121, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (122, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (123, 455);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (124, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (125, 387);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (126, 390);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (21, 80);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (22, 81);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (23, 82);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (24, 83);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (25, 141);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (26, 142);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (27, 139);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (28, 140);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (29, 86);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (30, 87);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (40, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (41, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (42, 458);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (43, 450);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (44, 462);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (45, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (46, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (47, 452);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (48, 461);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (49, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (50, 453);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (51, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (52, 457);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (53, 456);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (54, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (55, 100);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (56, 63);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (57, 101);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (58, 99);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (59, 152);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (60, 166);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (61, 260);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (63, 256);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (64, 102);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (66, 285);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (67, 176);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (68, 178);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (69, 179);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (70, 73);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (71, 74);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (72, 75);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (75, 296);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (76, 312);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (77, 295);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (78, 298);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (79, 232);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (80, 395);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (81, 306);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (82, 104);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (84, 106);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (86, 246);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (87, 301);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (102, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (10, 341);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (1, 66);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (2, 67);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (3, 129);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (4, 145);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (5, 284);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (6, 253);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (7, 197);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (8, 302);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (9, 30);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (11, 307);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (12, 343);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (13, 447);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (14, 451);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (15, 449);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (16, 459);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (17, 348);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (18, 363);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (19, 396);
insert into "ETEST"."PROBLEM_UK_REL" ("PROB_ID", "UK_ID" ) values (20, 428);

------- End of ETEST.PROBLEM_UK_REL -------------- Begin of ETEST.TEST_PROBLEM-------

insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (1, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (2, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (3, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (4, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (5, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (6, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (7, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (8, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (9, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (10, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (11, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (12, 1, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (13, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (14, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (15, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (16, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (17, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (18, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (19, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (20, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (88, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (89, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (90, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (91, 2, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (92, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (93, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (94, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (95, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (96, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (97, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (98, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (99, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (100, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (101, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (102, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (103, 3, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (104, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (105, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (106, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (107, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (108, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (109, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (110, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (111, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (112, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (113, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (114, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (115, 4, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (116, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (117, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (118, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (119, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (120, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (121, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (122, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (123, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (124, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (125, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (126, 5, null, '보류');
insert into "ETEST"."TEST_PROBLEM" ("PROB_ID", "PART_ID", "SUBJECT", "STATUS" ) values (127, 5, null, '보류');

------- End of ETEST.TEST_PROBLEM -------------- Begin of ETEST.UK_MASTER-------

insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (1, '생애주기', '생애주기에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/1');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (2, '생애주기 가설', '생애주기 가설에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/2');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (3, '생애재무 계획', '생애재무 계획에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/3');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (4, '사회 초년생의 재무 계획', '사회 초년생의 재무 계획에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/4');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (5, '사회 초년생의 재무 목표 달성에 적합한 금융상품', '사회 초년생의 재무 목표 달성에 적합한 금융상품에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/5');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (6, 'ISA', 'ISA에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/6');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (7, '일임형 ISA', '일임형 ISA에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/7');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (8, '주택 마련을 위한 재무계획', '주택 마련을 위한 재무계획에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/8');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (9, '주택담보대출', '주택담보대출에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/9');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (10, '고정금리와 변동금리', '고정금리와 변동금리에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/10');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (11, '중도상환수수료', '중도상환수수료에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/11');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (12, '자녀 교육을 위한 재무 계획', '자녀 교육을 위한 재무 계획에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/12');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (13, '은퇴 준비를 위한 재무 계획', '은퇴 준비를 위한 재무 계획에 대한 내용입니다. (temp)', '1', null, '생애주기', 'https://www.example.com/13');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (14, '필요자금 마련방법', '필요자금 마련방법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/14');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (15, '저축', '저축에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/15');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (16, '은행 예적금', '은행 예적금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/16');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (17, '예금자 보호제도', '예금자 보호제도에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/17');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (18, '요구불예금', '요구불예금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/18');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (19, '저축성 예금', '저축성 예금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/19');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (20, '이자계산방법', '이자계산방법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/20');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (21, '단리', '단리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/21');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (22, '복리', '복리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/22');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (23, '복리 효과를 높이는 3요소', '복리 효과를 높이는 3요소에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/23');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (24, '복리효과와 시간', '복리효과와 시간에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/24');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (25, '복리효과와 수익률', '복리효과와 수익률에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/25');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (26, '복리효과와 수수료, 세금', '복리효과와 수수료, 세금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/26');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (27, '금융투자소득세', '금융투자소득세에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/27');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (28, '대출', '대출에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/28');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (29, '부채관리', '부채관리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/29');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (30, '대출기관', '대출기관에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/30');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (31, '제1금융권', '제1금융권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/31');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (32, '제2금융권', '제2금융권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/32');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (33, '대출상품의 종류', '대출상품의 종류에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/33');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (34, '신용대출', '신용대출에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/34');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (35, '담보대출', '담보대출에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/35');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (36, '대출금리 산정', '대출금리 산정에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/36');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (37, '고정금리', '고정금리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/37');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (38, '변동금리', '변동금리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/38');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (39, '대출 기준금리', '대출 기준금리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/39');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (40, '콜 금리', '콜 금리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/40');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (41, '양도성 예금증서', '양도성 예금증서에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/41');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (42, 'COFIX', 'COFIX에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/42');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (43, '대출 가산금리', '대출 가산금리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/43');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (44, '대출 우대금리', '대출 우대금리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/44');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (45, '대출상환방식', '대출상환방식에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/45');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (46, '일시상환', '일시상환에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/46');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (47, '분할상환', '분할상환에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/47');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (48, '원리금균등상환', '원리금균등상환에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/48');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (49, '원금균등상환', '원금균등상환에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/49');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (50, '대출 상환 기간', '대출 상환 기간에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/50');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (51, '부채 상환 원칙', '부채 상환 원칙에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/51');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (52, '투자', '투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/52');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (53, '투자 필요성', '투자 필요성에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/53');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (54, '인플레이션', '인플레이션에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/54');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (55, '하이퍼 인플레이션', '하이퍼 인플레이션에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/55');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (56, '저축과 투자의 차이', '저축과 투자의 차이에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/56');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (57, '저축의 미래현금흐름', '저축의 미래현금흐름에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/57');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (58, '투자의 미래현금흐름', '투자의 미래현금흐름에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/58');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (59, '투자와 투기의 차이', '투자와 투기의 차이에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/59');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (60, '튤립 투기', '튤립 투기에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/60');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (61, '현명한 투자자', '현명한 투자자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/61');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (62, '금융 이해력', '금융 이해력에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/62');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (63, '금융 지식', '금융 지식에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/63');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (64, '금융 행위', '금융 행위에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/64');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (65, '금융 태도', '금융 태도에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/65');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (66, '투자의 3가지 속성', '투자의 3가지 속성에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/66');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (67, '투자수익', '투자수익에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/67');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (68, '요구수익률', '요구수익률에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/68');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (69, '요구수익률의 측정', '요구수익률의 측정에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/69');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (70, '수익률의 측정', '수익률의 측정에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/70');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (71, '72의 법칙', '72의 법칙에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/71');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (72, '수익률과 수수료', '수익률과 수수료에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/72');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (73, '수익률과 세금', '수익률과 세금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/73');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (74, '수익률과 기회비용', '수익률과 기회비용에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/74');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (75, '투자위험(리스크)', '투자위험(리스크)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/75');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (76, '정보의 비대칭성', '정보의 비대칭성에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/76');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (77, '위험과 리스크 차이', '위험과 리스크 차이에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/77');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (78, '위험과 리스크 종류', '위험과 리스크 종류에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/78');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (79, '원금손실가능성(위험)', '원금손실가능성(위험)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/79');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (80, '고수익 보장 의심', '고수익 보장 의심에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/80');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (81, '리딩방', '리딩방에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/81');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (82, '시장리스크', '시장리스크에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/82');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (83, '직접적 시장위험', '직접적 시장위험에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/83');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (84, '비체계적 위험', '비체계적 위험에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/84');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (85, '간접적 시장위험', '간접적 시장위험에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/85');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (86, '체계적 위험', '체계적 위험에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/86');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (87, '유동성 리스크', '유동성 리스크에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/87');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (88, '유동성 리스크 예시', '유동성 리스크 예시에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/88');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (89, '록업조건이 붙은 IPO', '록업조건이 붙은 IPO에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/89');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (90, '기업공개(IPO)', '기업공개(IPO)에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/90');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (91, '폐쇄형 구조 상품', '폐쇄형 구조 상품에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/91');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (92, '유동성 리스크 관리', '유동성 리스크 관리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/92');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (93, '분산투자의 평균 매입 단가 인하 효과', '분산투자의 평균 매입 단가 인하 효과에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/93');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (94, '분산투자, 매입 단가 평준화 효과', '분산투자, 매입 단가 평준화 효과에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/94');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (95, '군중심리 리스크', '군중심리 리스크에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/95');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (96, '역발상적 접근 방식', '역발상적 접근 방식에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/96');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (97, '군중심리 편향', '군중심리 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/97');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (98, '성공투자를 위한 필수 점검사항', '성공투자를 위한 필수 점검사항에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/98');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (99, '리스크 특징', '리스크 특징에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/99');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (100, '시가총액과 리스크', '시가총액과 리스크에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/100');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (101, '대형주 특징', '대형주 특징에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/101');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (102, '중소형주 특징', '중소형주 특징에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/102');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (103, '기업성장성과 리스크', '기업성장성과 리스크에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/103');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (104, '성장주 특징', '성장주 특징에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/104');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (105, '가치주 특징', '가치주 특징에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/105');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (106, '투자위험의 측정', '투자위험의 측정에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/106');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (107, '분산과 표준편차', '분산과 표준편차에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/107');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (108, '리스크의 척도', '리스크의 척도에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/108');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (109, '리스크 트레이싱', '리스크 트레이싱에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/109');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (110, '증권사 거래기간', '증권사 거래기간에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/110');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (111, '주식투자 비중', '주식투자 비중에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/111');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (112, '보유종목 수', '보유종목 수에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/112');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (113, '선호 투자종목', '선호 투자종목에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/113');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (114, '리스크 프로파일', '리스크 프로파일에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/114');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (115, '리스크 수용크기(Risk Ability)', '리스크 수용크기(Risk Ability)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/115');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (116, '자기자본 대비 리스크 부담 수준', '자기자본 대비 리스크 부담 수준에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/116');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (117, '리스크 감내수준에 대한 의사결정', '리스크 감내수준에 대한 의사결정에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/117');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (118, '리스크 감내수준(Risk Tolerance)', '리스크 감내수준(Risk Tolerance)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/118');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (119, '투자위험정도(Investment Risk)', '투자위험정도(Investment Risk)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/119');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (120, '재무적 위험(Financial Risk)', '재무적 위험(Financial Risk)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/120');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (121, '투기 위험(Speculative risk)', '투기 위험(Speculative risk)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/121');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (122, '기대수익률과 위험의 관계', '기대수익률과 위험의 관계에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/122');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (123, '시간', '시간에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/123');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (124, '투자의 원칙', '투자의 원칙에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/124');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (125, '목적기반 통합 투자관리', '목적기반 통합 투자관리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/125');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (126, '투자관리 3단계 과정', '투자관리 3단계 과정에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/126');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (127, '투자계획의 수립(Plan)', '투자계획의 수립(Plan)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/127');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (128, '투자목표', '투자목표에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/128');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (129, '생애주기와 투자목표', '생애주기와 투자목표에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/129');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (130, '투자기간', '투자기간에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/130');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (131, '투자목표와 투자기간에 따른 위험감내수준', '투자목표와 투자기간에 따른 위험감내수준에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/131');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (132, '투자지역에 따른 구분', '투자지역에 따른 구분에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/132');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (133, '국내투자', '국내투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/133');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (134, '글로벌 투자', '글로벌 투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/134');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (135, '투자방법에 따른 구분', '투자방법에 따른 구분에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/135');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (136, '직접투자', '직접투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/136');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (137, '간접투자', '간접투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/137');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (138, '목표수익률에 따른 구분', '목표수익률에 따른 구분에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/138');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (139, '액티브투자', '액티브투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/139');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (140, '액티브주식', '액티브주식에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/140');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (141, '패시브투자', '패시브투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/141');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (142, '벤치마크지수', '벤치마크지수에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/142');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (143, '패시브주식', '패시브주식에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/143');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (144, '투자시점에 따른 구분', '투자시점에 따른 구분에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/144');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (145, '거치식투자', '거치식투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/145');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (146, '적립식투자', '적립식투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/146');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (147, '정액분할투자', '정액분할투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/147');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (148, '매입 단가 평준화 효과', '매입 단가 평준화 효과에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/148');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (149, '거치식과 적립식 투자성과 비교', '거치식과 적립식 투자성과 비교에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/149');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (150, '레버리지투자', '레버리지투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/150');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (151, '레버리지효과', '레버리지효과에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/151');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (152, '투자전략의 실행(Do)', '투자전략의 실행(Do)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/152');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (153, '자산배분', '자산배분에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/153');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (154, '데이비드 스웬슨', '데이비드 스웬슨에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/154');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (155, '하워드 막스', '하워드 막스에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/155');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (156, '윌리엄 번스타인', '윌리엄 번스타인에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/156');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (157, '자산배분 방법', '자산배분 방법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/157');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (158, '전략적 자산배분', '전략적 자산배분에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/158');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (159, '전략적 자산배분 프로세스', '전략적 자산배분 프로세스에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/159');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (160, '투자목적 및 투자제약요건 파악', '투자목적 및 투자제약요건 파악에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/160');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (161, '자산집단의 선택', '자산집단의 선택에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/161');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (162, '자산집단', '자산집단에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/162');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (163, '자산 종류별 기대수익, 위험, 상관관계 추정', '자산 종류별 기대수익, 위험, 상관관계 추정에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/163');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (164, '최적 자산구성의 선택', '최적 자산구성의 선택에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/164');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (165, '전술적 자산배분', '전술적 자산배분에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/165');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (166, '역투자전략', '역투자전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/166');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (167, '평균반전과정', '평균반전과정에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/167');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (168, '비합리적으로 투자하는 이유', '비합리적으로 투자하는 이유에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/168');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (169, '전술적 자산배분의 활용', '전술적 자산배분의 활용에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/169');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (170, '경제성장률과 인플레이션 환경에 따른 전술적 자산배분 모형', '경제성장률과 인플레이션 환경에 따른 전술적 자산배분 모형에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/170');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (171, '올웨더 포트폴리오 자산배분 모형', '올웨더 포트폴리오 자산배분 모형에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/171');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (172, '레이 달리오', '레이 달리오에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/172');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (173, '현대사회에서의 자산배분 전략', '현대사회에서의 자산배분 전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/173');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (174, '포트폴리오', '포트폴리오에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/174');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (175, '로보 어드바이저', '로보 어드바이저에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/175');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (176, '리밸런싱', '리밸런싱에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/176');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (177, '포뮬러 플랜(Formula Plan)', '포뮬러 플랜(Formula Plan)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/177');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (178, '투자율 고정법', '투자율 고정법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/178');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (179, '투자액 고정법', '투자액 고정법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/179');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (180, '달러코스트 평균법', '달러코스트 평균법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/180');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (181, '척도법', '척도법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/181');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (182, '변동비율법', '변동비율법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/182');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (183, '적극적(active) 투자관리', '적극적(active) 투자관리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/183');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (184, '소극적(passive) 투자관리', '소극적(passive) 투자관리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/184');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (185, '사후 통제(See)', '사후 통제(See)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/185');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (186, '포트폴리오 성과평가', '포트폴리오 성과평가에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/186');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (187, '포트폴리오 수정', '포트폴리오 수정에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/187');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (188, '포트폴리오 관리기준 수정', '포트폴리오 관리기준 수정에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/188');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (189, '분산투자', '분산투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/189');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (190, '포트폴리오 전략', '포트폴리오 전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/190');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (191, '주식 포트폴리오', '주식 포트폴리오에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/191');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (192, '스마트 베타 전략', '스마트 베타 전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/192');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (193, '알파 전략', '알파 전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/193');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (194, '베타 전략', '베타 전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/194');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (195, '주식 포트폴리오 관리전략', '주식 포트폴리오 관리전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/195');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (196, '소극적 포트폴리오 관리전략', '소극적 포트폴리오 관리전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/196');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (197, '적극적 포트폴리오 관리전략', '적극적 포트폴리오 관리전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/197');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (198, '핵심-위성 포트폴리오 관리전략', '핵심-위성 포트폴리오 관리전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/198');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (199, '동일비중 포트폴리오 관리전략', '동일비중 포트폴리오 관리전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/199');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (200, '채권 포트폴리오', '채권 포트폴리오에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/200');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (201, '채권 포트폴리오 특징', '채권 포트폴리오 특징에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/201');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (202, '채권 포트폴리오 구성방법', '채권 포트폴리오 구성방법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/202');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (203, '채권 포트폴리오 관리전략', '채권 포트폴리오 관리전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/203');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (204, '파생상품 포트폴리오', '파생상품 포트폴리오에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/204');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (205, '파생상품 포트폴리오 특징', '파생상품 포트폴리오 특징에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/205');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (206, '파생상품 포트폴리오 구성 필요성', '파생상품 포트폴리오 구성 필요성에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/206');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (207, '프로텍티브 풋 전략', '프로텍티브 풋 전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/207');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (208, '프로텍티브 콜 전략', '프로텍티브 콜 전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/208');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (209, '파생상품 포트폴리오 관리전략', '파생상품 포트폴리오 관리전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/209');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (210, '선물옵션을 활용한 운용전략', '선물옵션을 활용한 운용전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/210');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (211, '커버드 콜 전략', '커버드 콜 전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/211');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (212, '파생결합상품을 활용한 운용전략', '파생결합상품을 활용한 운용전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/212');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (213, '금리연계 DLF', '금리연계 DLF에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/213');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (214, '펀드 포트폴리오', '펀드 포트폴리오에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/214');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (215, '펀드 포트폴리오 특징', '펀드 포트폴리오 특징에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/215');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (216, '펀드 포트폴리오 구성 프로세스', '펀드 포트폴리오 구성 프로세스에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/216');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (217, '펀드 포트폴리오 구성 체크포인트', '펀드 포트폴리오 구성 체크포인트에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/217');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (218, '펀드 포트폴리오 관리전략', '펀드 포트폴리오 관리전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/218');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (219, '자산배분형 펀드 활용전략', '자산배분형 펀드 활용전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/219');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (220, '타깃데이트펀드(TDF)', '타깃데이트펀드(TDF)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/220');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (221, '대체투자상품 포트폴리오', '대체투자상품 포트폴리오에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/221');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (222, '대체투자상품 포트폴리오 구성 필요성', '대체투자상품 포트폴리오 구성 필요성에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/222');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (223, '전통자산 vs 대체자산', '전통자산 vs 대체자산에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/223');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (224, '대체투자상품 포트폴리오 구성방법', '대체투자상품 포트폴리오 구성방법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/224');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (225, '대체투자상품 포트폴리오 구성시 유의사항', '대체투자상품 포트폴리오 구성시 유의사항에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/225');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (226, '대체투자상품 포트폴리오 관리전략', '대체투자상품 포트폴리오 관리전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/226');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (227, '물가와 부동산 상관관계', '물가와 부동산 상관관계에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/227');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (228, '물가연동채권', '물가연동채권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/228');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (229, '하이일드채권', '하이일드채권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/229');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (230, '물가와 원자재 상관관계', '물가와 원자재 상관관계에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/230');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (231, '인플레이션 헤지수단으로서 금', '인플레이션 헤지수단으로서 금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/231');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (232, '원화투자시 고려사항으로서 환율', '원화투자시 고려사항으로서 환율에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/232');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (233, '개인투자자 자산배분의 목표', '개인투자자 자산배분의 목표에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/233');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (234, '알파 투자전략', '알파 투자전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/234');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (235, '베타 투자전략', '베타 투자전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/235');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (236, '베타-알파 투자전략', '베타-알파 투자전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/236');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (237, '개인투자자 투자포트폴리오 지침', '개인투자자 투자포트폴리오 지침에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/237');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (238, '투자자목표에 기반한 자산배분 전략', '투자자목표에 기반한 자산배분 전략에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/238');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (239, '자산 배분 전략과 포트폴리오를 구성하기 위한 프로세스', '자산 배분 전략과 포트폴리오를 구성하기 위한 프로세스에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/239');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (240, '실전 포트폴리오 운용단계', '실전 포트폴리오 운용단계에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/240');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (241, '분산투자 효과', '분산투자 효과에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/241');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (242, '분산투자에 따른 위험감소', '분산투자에 따른 위험감소에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/242');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (243, '상관계수', '상관계수에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/243');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (244, '분산투자의 한계', '분산투자의 한계에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/244');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (245, '집중투자', '집중투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/245');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (246, '분산투자 vs 집중투자', '분산투자 vs 집중투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/246');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (247, '장기투자', '장기투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/247');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (248, '위험과 보유기간', '위험과 보유기간에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/248');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (249, '장기투자 효과', '장기투자 효과에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/249');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (250, '생애주기관점에서의 투자', '생애주기관점에서의 투자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/250');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (251, '금융투자상품', '금융투자상품에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/251');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (252, '주식', '주식에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/252');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (253, '주식소유자로서 주주', '주식소유자로서 주주에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/253');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (254, '주주의 권리', '주주의 권리에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/254');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (255, '자익권', '자익권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/255');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (256, '이익배당청구권', '이익배당청구권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/256');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (257, '배당', '배당에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/257');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (258, '배당수익률', '배당수익률에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/258');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (259, '시가배당율', '시가배당율에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/259');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (260, '주가배수', '주가배수에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/260');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (261, '액면가', '액면가에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/261');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (262, '배당성향', '배당성향에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/262');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (263, '고배당', '고배당에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/263');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (264, '인컴형 자산', '인컴형 자산에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/264');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (265, '잔여재산분배청구권', '잔여재산분배청구권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/265');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (266, '신주인수권', '신주인수권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/266');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (267, '공익권', '공익권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/267');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (268, '의결권', '의결권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/268');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (269, '주주총회', '주주총회에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/269');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (270, '전자투표제', '전자투표제에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/270');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (271, '장부열람청구권', '장부열람청구권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/271');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (272, '이사선(해)임요구권', '이사선(해)임요구권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/272');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (273, '주총소집요구권', '주총소집요구권에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/273');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (274, '주주의 책임', '주주의 책임에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/274');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (275, '유한책임의 원칙', '유한책임의 원칙에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/275');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (276, '주식의 특징', '주식의 특징에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/276');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (277, '자기자본', '자기자본에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/277');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (278, '타인자본', '타인자본에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/278');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (279, '주식의 종류', '주식의 종류에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/279');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (280, '보통주', '보통주에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/280');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (281, '우선주', '우선주에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/281');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (282, '주식시장', '주식시장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/282');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (283, '발행시장', '발행시장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/283');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (284, '구주매출', '구주매출에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/284');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (285, '신주모집', '신주모집에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/285');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (286, '청약', '청약에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/286');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (287, '공시', '공시에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/287');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (288, '증권신고서', '증권신고서에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/288');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (289, '상장', '상장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/289');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (290, '상장폐지', '상장폐지에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/290');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (291, '정리매매', '정리매매에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/291');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (292, '발행방법', '발행방법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/292');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (293, '공모', '공모에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/293');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (294, '주주배정방식', '주주배정방식에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/294');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (295, '일반공모방식', '일반공모방식에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/295');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (296, '사모', '사모에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/296');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (297, '주식수의 증감', '주식수의 증감에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/297');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (298, '증자', '증자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/298');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (299, '유상증자', '유상증자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/299');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (300, '실권주', '실권주에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/300');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (301, '무상증자', '무상증자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/301');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (302, '이익잉여금', '이익잉여금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/302');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (303, '감자', '감자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/303');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (304, '유상감자', '유상감자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/304');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (305, '무상감자', '무상감자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/305');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (306, '유통시장', '유통시장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/306');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (307, '장내시장', '장내시장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/307');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (308, '한국거래소', '한국거래소에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/308');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (309, '한국거래소가 운영하는 주식시장', '한국거래소가 운영하는 주식시장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/309');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (310, '유가증권시장', '유가증권시장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/310');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (311, '코스닥시장', '코스닥시장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/311');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (312, '코넥스시장', '코넥스시장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/312');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (313, '매매 제도', '매매 제도에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/313');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (314, '매매시간', '매매시간에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/314');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (315, '가격제한폭', '가격제한폭에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/315');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (316, '기준가격', '기준가격에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/316');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (317, '주문 방법', '주문 방법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/317');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (318, '주문일과 결제일 비교', '주문일과 결제일 비교에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/318');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (319, '종목코드', '종목코드에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/319');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (320, '장외시장', '장외시장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/320');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (321, '금융투자협회', '금융투자협회에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/321');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (322, 'K-OTC시장', 'K-OTC시장에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/322');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (323, '상대매매', '상대매매에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/323');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (324, '세금', '세금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/324');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (325, '금융소득', '금융소득에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/325');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (326, '종합과세', '종합과세에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/326');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (327, '분리과세', '분리과세에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/327');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (328, '증권거래세', '증권거래세에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/328');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (329, '양도소득세', '양도소득세에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/329');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (330, '비과세', '비과세에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/330');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (331, '거래비용', '거래비용에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/331');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (332, '증권사 거래수수료', '증권사 거래수수료에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/332');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (333, '증권유관기관 수수료', '증권유관기관 수수료에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/333');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (334, '가치평가', '가치평가에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/334');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (335, '기본적 분석', '기본적 분석에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/335');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (336, '내재가치', '내재가치에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/336');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (337, '분석방법', '분석방법에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/337');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (338, '탑다운 방식', '탑다운 방식에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/338');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (339, '바텀업 방식', '바텀업 방식에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/339');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (340, '재무제표', '재무제표에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/340');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (341, '재무상태표', '재무상태표에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/341');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (342, '총자산', '총자산에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/342');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (343, '부채', '부채에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/343');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (344, '순자산', '순자산에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/344');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (345, '손익계산서', '손익계산서에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/345');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (346, '매출액', '매출액에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/346');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (347, '영업이익', '영업이익에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/347');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (348, '순이익', '순이익에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/348');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (349, '어닝서프라이즈', '어닝서프라이즈에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/349');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (350, '어닝쇼크', '어닝쇼크에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/350');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (351, '현금흐름표', '현금흐름표에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/351');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (352, '주석', '주석에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/352');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (353, '전자공시시스템(DART)', '전자공시시스템(DART)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/353');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (354, '정기공시', '정기공시에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/354');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (355, '수시공시', '수시공시에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/355');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (356, '재무비율', '재무비율에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/356');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (357, '수익성 지표', '수익성 지표에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/357');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (358, '매출액 대비 영업이익률', '매출액 대비 영업이익률에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/358');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (359, '자기자본이익률(ROE)', '자기자본이익률(ROE)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/359');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (360, '안정성 지표', '안정성 지표에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/360');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (361, '유동비율', '유동비율에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/361');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (362, '레버리지비율', '레버리지비율에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/362');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (363, '이자보상비율', '이자보상비율에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/363');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (364, '부채비율', '부채비율에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/364');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (365, '성장성 지표', '성장성 지표에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/365');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (366, '매출액증가율', '매출액증가율에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/366');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (367, '영업이익증가율', '영업이익증가율에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/367');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (368, '재무비율 활용의 한계', '재무비율 활용의 한계에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/368');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (369, '무형자산', '무형자산에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/369');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (370, 'PDR', 'PDR에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/370');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (371, '주가이익비율(PER)', '주가이익비율(PER)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/371');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (372, 'PEGR', 'PEGR에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/372');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (373, '주가매출비율(PSR)', '주가매출비율(PSR)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/373');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (374, '주가장부가치비율(PBR)', '주가장부가치비율(PBR)에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/374');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (375, 'EV/EBITDA', 'EV/EBITDA에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/375');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (376, '산업분석', '산업분석에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/376');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (377, '산업의 생애주기', '산업의 생애주기에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/377');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (378, '개척기', '개척기에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/378');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (379, '성장기', '성장기에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/379');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (380, '성숙기', '성숙기에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/380');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (381, '쇠퇴기', '쇠퇴기에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/381');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (382, '업종 구분', '업종 구분에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/382');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (383, '경기순환업종', '경기순환업종에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/383');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (384, '경기방어업종', '경기방어업종에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/384');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (385, '경기민감주', '경기민감주에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/385');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (386, '업종대표주', '업종대표주에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/386');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (387, '기술적 분석', '기술적 분석에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/387');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (388, '기술적 분석 특징', '기술적 분석 특징에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/388');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (389, '챠트', '챠트에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/389');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (390, '캔들캬트', '캔들캬트에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/390');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (391, '이동평균선', '이동평균선에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/391');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (392, '골든크로스', '골든크로스에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/392');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (393, '데드크로스', '데드크로스에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/393');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (394, '거래량', '거래량에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/394');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (395, '증시주변자금', '증시주변자금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/395');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (396, '고객예탁금', '고객예탁금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/396');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (397, '주식신용잔고', '주식신용잔고에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/397');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (398, '공매도', '공매도에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/398');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (399, '대차거래', '대차거래에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/399');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (400, '증거금', '증거금에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/400');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (401, '초보자에게 맞는 주식 종목', '초보자에게 맞는 주식 종목에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/401');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (402, '시가총액', '시가총액에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/402');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (403, '시가', '시가에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/403');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (404, '상한가/하한가', '상한가/하한가에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/404');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (405, '따상', '따상에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/405');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (406, '주문과 호가', '주문과 호가에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/406');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (407, '지정가 주문', '지정가 주문에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/407');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (408, '시장가 주문', '시장가 주문에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/408');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (409, '종가', '종가에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/409');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (410, '52주 신고가', '52주 신고가에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/410');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (411, '손익', '손익에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/411');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (412, '실현수익', '실현수익에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/412');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (413, '미실현수익', '미실현수익에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/413');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (414, '손절매', '손절매에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/414');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (415, '익절', '익절에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/415');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (416, '펀드', '펀드에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/416');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (417, 'EMP', 'EMP에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/417');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (418, 'ETF', 'ETF에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/418');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (419, '액티브 ETF', '액티브 ETF에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/419');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (420, '패시브 ETF', '패시브 ETF에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/420');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (421, 'ETN', 'ETN에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/421');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (422, '생애주기형 펀드', '생애주기형 펀드에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/422');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (423, '투자자의 투자유형', '투자자의 투자유형에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/423');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (424, '공격적 투자자', '공격적 투자자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/424');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (425, '방어형 투자자', '방어형 투자자에 대한 내용입니다. (temp)', '1', null, '필요자금 마련방법', 'https://www.example.com/425');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (426, '금융투자상품 가치변동요인', '금융투자상품 가치변동요인에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/426');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (427, '가치변동요인으로서 금리', '가치변동요인으로서 금리에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/427');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (428, '금리하락시 경제에 미치는 영향', '금리하락시 경제에 미치는 영향에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/428');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (429, '금리상승시 경제에 미치는 영향', '금리상승시 경제에 미치는 영향에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/429');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (430, '가치변동요인으로서 경기', '가치변동요인으로서 경기에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/430');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (431, '경기가 상품가격에 미치는 영향', '경기가 상품가격에 미치는 영향에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/431');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (432, '경기 좋을때 금리와 주가', '경기 좋을때 금리와 주가에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/432');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (433, '경기 나쁠때 금리와 주가', '경기 나쁠때 금리와 주가에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/433');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (434, '경제지표', '경제지표에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/434');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (435, 'GDP', 'GDP에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/435');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (436, '경기종합지수', '경기종합지수에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/436');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (437, '경기선행지수', '경기선행지수에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/437');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (438, '경기동행지수', '경기동행지수에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/438');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (439, '경기후행지수', '경기후행지수에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/439');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (440, '실업률', '실업률에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/440');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (441, '물가', '물가에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/441');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (442, '물가지수', '물가지수에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/442');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (443, '소비자물가지수(CPI)', '소비자물가지수(CPI)에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/443');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (444, '생산자물가지수(PPI)', '생산자물가지수(PPI)에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/444');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (445, '물가가 채권시장에 미치는 영향', '물가가 채권시장에 미치는 영향에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/445');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (446, '물가가 주식시장에 미치는 영향', '물가가 주식시장에 미치는 영향에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/446');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (447, '정부정책', '정부정책에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/447');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (448, '재정정책', '재정정책에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/448');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (449, '확장재정정책', '확장재정정책에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/449');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (450, '긴축재정정책', '긴축재정정책에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/450');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (451, '통화정책', '통화정책에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/451');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (452, '기준금리', '기준금리에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/452');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (453, '지급준비율', '지급준비율에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/453');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (454, '통안채 발행', '통안채 발행에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/454');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (455, '양적 완화', '양적 완화에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/455');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (456, '테이퍼링', '테이퍼링에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/456');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (457, '시장간 영향', '시장간 영향에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/457');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (458, '채권시장과 주식시장 관계', '채권시장과 주식시장 관계에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/458');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (459, '채권시장과 부동산시장 관계', '채권시장과 부동산시장 관계에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/459');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (460, '외환시장과 경기 관계', '외환시장과 경기 관계에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/460');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (461, '주식시장과 부동산시장 관계', '주식시장과 부동산시장 관계에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/461');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (462, '코리아디스카운트', '코리아디스카운트에 대한 내용입니다. (temp)', '1', null, '금융투자상품 가치변동요인', 'https://www.example.com/462');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (463, '금융투자상품의 매매', '금융투자상품의 매매에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/463');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (464, '금융회사', '금융회사에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/464');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (465, '금융투자회사', '금융투자회사에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/465');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (466, '금융투자업', '금융투자업에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/466');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (467, '투자매매업', '투자매매업에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/467');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (468, '투자중개업', '투자중개업에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/468');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (469, '집합투자업', '집합투자업에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/469');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (470, '신탁업', '신탁업에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/470');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (471, '금전신탁', '금전신탁에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/471');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (472, '재산신탁', '재산신탁에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/472');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (473, '특정금전신탁', '특정금전신탁에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/473');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (474, '불특정금전신탁', '불특정금전신탁에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/474');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (475, '투자일임업', '투자일임업에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/475');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (476, '랩어카운트', '랩어카운트에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/476');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (477, '투자자문업', '투자자문업에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/477');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (478, '직접투자 채널', '직접투자 채널에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/478');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (479, '주식 위탁계좌', '주식 위탁계좌에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/479');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (480, '주식 매매', '주식 매매에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/480');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (481, '공모주 투자', '공모주 투자에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/481');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (482, '공모주 청약절차', '공모주 청약절차에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/482');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (483, '스팩(SPAC) 투자', '스팩(SPAC) 투자에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/483');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (484, '채권 위탁계좌', '채권 위탁계좌에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/484');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (485, '채권시장의 구조', '채권시장의 구조에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/485');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (486, '채권발행시장', '채권발행시장에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/486');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (487, '채권유통시장', '채권유통시장에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/487');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (488, '장내채권시장', '장내채권시장에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/488');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (489, '소액채권시장', '소액채권시장에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/489');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (490, '일반채권시장', '일반채권시장에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/490');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (491, '소매채권시장', '소매채권시장에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/491');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (492, '장내국채시장', '장내국채시장에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/492');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (493, '장외채권시장', '장외채권시장에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/493');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (494, '도매시장', '도매시장에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/494');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (495, '소매시장', '소매시장에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/495');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (496, '간접투자 채널', '간접투자 채널에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/496');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (497, '펀드 투자', '펀드 투자에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/497');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (498, '일임운용 투자', '일임운용 투자에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/498');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (499, '신탁 투자', '신탁 투자에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/499');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (500, '위탁계좌와 특정금전신탁 비교', '위탁계좌와 특정금전신탁 비교에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/500');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (501, '주택저당증권(MBS)', '주택저당증권(MBS)에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/501');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (502, 'MPTS', 'MPTS에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/502');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (503, '직접투자와 간접투자 비교', '직접투자와 간접투자 비교에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/503');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (504, '매매과정', '매매과정에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/504');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (505, '비대면계좌 개설', '비대면계좌 개설에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/505');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (506, '계좌의 종류', '계좌의 종류에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/506');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (507, '종합계좌', '종합계좌에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/507');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (508, 'CMA계좌', 'CMA계좌에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/508');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (509, '선물옵션계좌', '선물옵션계좌에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/509');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (510, '확정급여형 퇴직연금', '확정급여형 퇴직연금에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/510');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (511, '확정기여형 퇴직연금', '확정기여형 퇴직연금에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/511');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (512, '개인형 퇴직연금', '개인형 퇴직연금에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/512');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (513, '주식매매 결제', '주식매매 결제에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/513');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (514, '분할매수', '분할매수에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/514');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (515, '분할매도', '분할매도에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/515');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (516, '로스컷', '로스컷에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/516');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (517, 'T+2일 결제', 'T+2일 결제에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/517');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (518, '편드매수 결제', '편드매수 결제에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/518');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (519, '펀드 가입에 따른 추가비용', '펀드 가입에 따른 추가비용에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/519');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (520, '펀드매도 결제(환매)', '펀드매도 결제(환매)에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/520');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (521, '상품별 거래요건', '상품별 거래요건에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/521');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (522, '투자적격 요건', '투자적격 요건에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/522');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (523, '개인전문투자자', '개인전문투자자에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/523');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (524, '취득방법', '취득방법에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/524');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (525, '일반투자자', '일반투자자에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/525');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (526, '고난도 금융투자상품 요건', '고난도 금융투자상품 요건에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/526');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (527, '고난도 사모펀드 매수 요건', '고난도 사모펀드 매수 요건에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/527');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (528, '녹취숙려 제도', '녹취숙려 제도에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/528');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (529, '레버리지ETP 사전교육', '레버리지ETP 사전교육에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/529');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (530, '투자거래 확인', '투자거래 확인에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/530');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (531, '펀드 관련 정기보고서', '펀드 관련 정기보고서에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/531');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (532, '자산운용보고서(펀드)', '자산운용보고서(펀드)에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/532');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (533, '펀드 개요', '펀드 개요에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/533');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (534, '운용성과 및 수익률 현황', '운용성과 및 수익률 현황에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/534');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (535, '자산 현황', '자산 현황에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/535');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (536, '투자 운용인력 현황', '투자 운용인력 현황에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/536');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (537, '비용 현황', '비용 현황에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/537');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (538, '투자자산 매매내역', '투자자산 매매내역에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/538');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (539, '자산보관관리보고서(펀드)', '자산보관관리보고서(펀드)에 대한 내용입니다. (temp)', '1', null, '금융투자상품의 매매', 'https://www.example.com/539');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (540, '금융투자상품 관리', '금융투자상품 관리에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/540');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (541, '투자실적 평가', '투자실적 평가에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/541');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (542, '기준지표(벤치마크)', '기준지표(벤치마크)에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/542');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (543, '시장 지수', '시장 지수에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/543');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (544, '벤치마크', '벤치마크에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/544');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (545, '섹터스타일 지수', '섹터스타일 지수에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/545');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (546, '합성 지수', '합성 지수에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/546');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (547, '위험조정 성과지표', '위험조정 성과지표에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/547');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (548, '샤프비율', '샤프비율에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/548');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (549, '정보비율', '정보비율에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/549');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (550, '젠센의 알파', '젠센의 알파에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/550');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (551, '성과특성 분석', '성과특성 분석에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/551');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (552, '총수익률', '총수익률에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/552');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (553, '판매수수료', '판매수수료에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/553');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (554, '실질투자수익률', '실질투자수익률에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/554');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (555, '권리 행사', '권리 행사에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/555');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (556, '주식매수청구권 제도', '주식매수청구권 제도에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/556');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (557, '(펀드)수익자총회', '(펀드)수익자총회에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/557');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (558, '소집권자', '소집권자에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/558');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (559, '의결방법', '의결방법에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/559');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (560, '간주의결권 행사', '간주의결권 행사에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/560');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (561, '상장폐지 사유', '상장폐지 사유에 대한 내용입니다. (temp)', '1', null, '금융투자상품 관리', 'https://www.example.com/561');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (562, '행동편향', '행동편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/562');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (563, '행동경제학', '행동경제학에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/563');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (564, '전망이론', '전망이론에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/564');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (565, '기대효용이론', '기대효용이론에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/565');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (566, '전통경제학과 비교', '전통경제학과 비교에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/566');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (567, '행동편향 발생이유', '행동편향 발생이유에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/567');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (568, '금융투자시 빠지기쉬운 행동편향', '금융투자시 빠지기쉬운 행동편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/568');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (569, '자기과신 편향', '자기과신 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/569');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (570, '사후확증 편향', '사후확증 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/570');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (571, '손실회피', '손실회피에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/571');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (572, '기준점', '기준점에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/572');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (573, '심적회계', '심적회계에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/573');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (574, '매몰비용', '매몰비용에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/574');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (575, '확증 편향', '확증 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/575');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (576, '도박사 편향', '도박사 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/576');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (577, '현상유지 편향', '현상유지 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/577');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (578, '현재중시 편향', '현재중시 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/578');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (579, '시기추론 편향', '시기추론 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/579');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (580, '투자단계별 빠지기 쉬운 편향', '투자단계별 빠지기 쉬운 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/580');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (581, '투자전 빠지기 쉬운 편향', '투자전 빠지기 쉬운 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/581');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (582, '투자후 빠지기 쉬운 편향', '투자후 빠지기 쉬운 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/582');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (583, '투자성향별 빠지기 쉬운 편향', '투자성향별 빠지기 쉬운 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/583');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (584, '공격형투자자가 빠지기 쉬운 편향', '공격형투자자가 빠지기 쉬운 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/584');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (585, '방어적투자자가 빠지기 쉬운 편향', '방어적투자자가 빠지기 쉬운 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/585');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (586, '투자기간별 빠지기 쉬운 편향', '투자기간별 빠지기 쉬운 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/586');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (587, '단기투자자가 빠지기 쉬운 편향', '단기투자자가 빠지기 쉬운 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/587');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (588, '장기투자자가 빠지기 쉬운 편향', '장기투자자가 빠지기 쉬운 편향에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/588');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (589, '행동편향의 극복절차', '행동편향의 극복절차에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/589');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (590, '행동편향 인지', '행동편향 인지에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/590');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (591, '행동편향 확인', '행동편향 확인에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/591');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (592, '투자원칙과 기준 수립', '투자원칙과 기준 수립에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/592');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (593, '투자과정 기록 및 모니터링', '투자과정 기록 및 모니터링에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/593');
insert into "ETEST"."UK_MASTER" ("UK_ID", "UK_NAME", "UK_DESCRIPTION", "TRAIN_UNSEEN", "CURRICULUM_ID", "PART", "EXTERNAL_LINK" ) values (594, '편향 극복을 위한 지속적 노력', '편향 극복을 위한 지속적 노력에 대한 내용입니다. (temp)', '1', null, '행동편향', 'https://www.example.com/594');

------- End of ETEST.UK_MASTER -------------- Begin of ETEST.UK_REL-------

insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (4, 3, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (8, 3, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (12, 3, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (13, 3, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (5, 4, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (6, 5, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (7, 6, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (9, 8, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (10, 9, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (11, 9, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (15, 14, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (28, 14, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (52, 14, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (16, 15, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (17, 16, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (20, 16, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (18, 17, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (19, 17, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (21, 20, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (22, 20, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (23, 22, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (24, 23, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (25, 23, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (26, 23, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (27, 26, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (29, 28, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (30, 29, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (33, 29, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (36, 29, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (45, 29, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (50, 29, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (51, 29, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (31, 30, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (32, 30, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (34, 33, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (35, 33, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (37, 36, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (38, 36, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (39, 38, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (43, 38, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (44, 38, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (40, 39, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (41, 39, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (42, 39, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (46, 45, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (47, 45, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (48, 45, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (49, 45, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (11, 50, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (53, 52, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (56, 52, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (59, 52, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (61, 52, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (66, 52, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (124, 52, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (251, 52, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (423, 52, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (54, 53, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (55, 54, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (57, 56, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (58, 56, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (60, 59, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (62, 61, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (63, 62, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (64, 62, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (65, 62, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (67, 66, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (75, 66, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (123, 66, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (68, 67, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (70, 67, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (69, 68, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (22, 69, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (71, 70, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (72, 70, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (73, 70, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (74, 70, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (76, 75, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (77, 75, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (78, 75, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (98, 75, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (99, 75, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (106, 75, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (79, 78, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (82, 78, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (87, 78, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (95, 78, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (80, 79, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (81, 79, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (83, 82, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (85, 82, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (84, 83, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (88, 87, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (92, 87, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (89, 88, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (91, 88, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (90, 89, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (93, 92, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (94, 93, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (96, 95, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (97, 96, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (100, 99, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (103, 99, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (101, 100, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (102, 100, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (104, 103, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (105, 103, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (107, 106, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (108, 106, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (122, 106, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (109, 108, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (114, 108, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (110, 109, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (111, 109, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (112, 109, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (113, 109, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (115, 114, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (118, 114, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (116, 115, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (117, 115, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (119, 118, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (120, 118, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (121, 118, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (125, 124, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (189, 124, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (247, 124, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (126, 125, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (127, 126, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (152, 126, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (185, 126, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (128, 127, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (130, 127, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (131, 127, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (132, 127, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (135, 127, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (138, 127, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (144, 127, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (150, 127, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (129, 128, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (1, 129, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (133, 132, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (134, 132, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (136, 135, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (137, 135, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (139, 138, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (141, 138, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (140, 139, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (142, 141, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (143, 142, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (145, 144, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (146, 144, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (149, 144, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (147, 146, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (148, 146, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (151, 150, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (153, 152, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (157, 152, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (177, 152, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (183, 152, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (184, 152, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (154, 153, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (155, 153, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (156, 153, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (158, 157, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (165, 157, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (173, 157, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (159, 158, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (160, 159, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (161, 159, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (163, 159, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (164, 159, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (162, 161, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (166, 165, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (167, 165, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (168, 165, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (169, 165, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (171, 165, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (170, 169, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (172, 171, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (174, 173, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (176, 173, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (175, 174, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (178, 177, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (179, 177, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (180, 177, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (181, 177, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (182, 177, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (186, 185, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (187, 185, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (188, 185, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (190, 189, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (241, 189, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (245, 189, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (191, 190, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (200, 190, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (204, 190, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (214, 190, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (221, 190, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (233, 190, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (237, 190, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (238, 190, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (240, 190, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (192, 191, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (195, 191, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (193, 192, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (194, 192, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (196, 195, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (197, 195, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (198, 195, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (199, 195, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (201, 200, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (202, 200, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (203, 200, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (205, 204, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (206, 204, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (209, 204, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (207, 206, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (208, 206, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (210, 209, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (212, 209, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (211, 210, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (213, 212, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (215, 214, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (216, 214, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (217, 214, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (218, 214, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (219, 214, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (220, 219, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (222, 221, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (224, 221, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (225, 221, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (226, 221, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (223, 222, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (227, 226, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (230, 226, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (231, 226, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (232, 226, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (228, 227, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (229, 227, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (234, 233, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (235, 233, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (236, 233, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (239, 238, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (242, 241, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (243, 241, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (244, 241, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (86, 242, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (84, 242, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (246, 245, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (189, 246, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (248, 247, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (249, 247, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (250, 247, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (252, 251, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (416, 251, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (253, 252, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (276, 252, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (279, 252, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (282, 252, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (324, 252, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (331, 252, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (334, 252, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (395, 252, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (401, 252, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (254, 253, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (274, 253, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (255, 254, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (267, 254, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (256, 255, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (265, 255, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (266, 255, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (257, 256, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (258, 257, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (262, 257, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (259, 258, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (261, 258, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (260, 259, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (263, 262, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (264, 262, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (268, 267, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (271, 267, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (272, 267, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (273, 267, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (269, 268, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (270, 269, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (275, 274, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (277, 276, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (278, 276, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (280, 279, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (281, 279, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (283, 282, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (306, 282, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (90, 283, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (287, 283, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (289, 283, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (290, 283, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (292, 283, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (297, 283, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (284, 90, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (285, 90, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (286, 285, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (288, 287, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (354, 287, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (355, 287, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (291, 290, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (561, 290, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (291, 290, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (293, 292, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (296, 292, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (294, 293, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (295, 293, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (298, 297, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (303, 297, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (299, 298, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (301, 298, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (300, 299, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (302, 301, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (304, 303, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (305, 303, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (307, 306, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (320, 306, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (308, 307, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (313, 307, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (317, 307, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (309, 308, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (310, 309, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (311, 309, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (312, 309, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (314, 313, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (315, 313, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (316, 315, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (318, 317, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (319, 318, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (321, 320, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (322, 321, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (323, 322, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (325, 324, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (328, 324, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (329, 324, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (326, 325, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (327, 325, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (330, 329, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (332, 331, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (333, 331, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (335, 334, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (387, 334, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (336, 335, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (337, 335, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (340, 335, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (356, 335, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (260, 335, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (376, 335, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (338, 337, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (339, 337, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (341, 340, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (345, 340, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (351, 340, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (352, 340, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (342, 341, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (343, 342, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (344, 343, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (346, 345, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (347, 346, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (348, 347, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (349, 347, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (350, 347, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (353, 352, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (287, 353, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (357, 356, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (360, 356, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (365, 356, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (368, 356, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (358, 357, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (359, 357, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (361, 360, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (362, 360, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (363, 360, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (364, 360, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (366, 365, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (367, 365, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (369, 368, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (370, 368, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (371, 260, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (373, 260, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (374, 260, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (375, 260, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (372, 371, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (348, 372, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (377, 376, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (382, 376, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (378, 377, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (379, 377, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (2, 1, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (3, 1, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (383, 382, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (384, 382, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (385, 382, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (386, 382, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (388, 387, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (389, 388, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (391, 388, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (394, 388, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (390, 389, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (392, 391, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (393, 391, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (396, 395, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (397, 395, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (398, 397, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (400, 397, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (399, 398, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (402, 401, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (411, 401, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (403, 402, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (409, 402, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (404, 403, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (405, 404, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (406, 404, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (407, 406, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (408, 406, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (410, 409, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (412, 411, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (413, 411, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (414, 411, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (415, 411, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (417, 416, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (422, 416, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (418, 417, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (421, 417, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (419, 418, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (420, 418, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (424, 423, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (425, 423, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (427, 426, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (430, 426, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (441, 426, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (447, 426, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (457, 426, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (428, 427, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (429, 427, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (431, 430, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (434, 430, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (432, 431, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (433, 431, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (435, 434, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (436, 434, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (440, 434, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (437, 436, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (438, 436, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (439, 436, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (442, 441, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (445, 441, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (446, 441, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (443, 442, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (444, 442, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (448, 447, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (451, 447, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (449, 448, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (450, 448, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (452, 451, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (453, 451, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (454, 451, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (455, 451, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (456, 455, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (458, 457, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (459, 457, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (460, 457, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (461, 457, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (462, 461, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (464, 463, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (478, 463, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (496, 463, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (504, 463, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (521, 463, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (530, 463, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (465, 464, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (466, 465, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (467, 466, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (468, 466, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (469, 466, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (470, 466, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (475, 466, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (477, 466, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (471, 470, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (472, 470, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (473, 472, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (380, 377, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (381, 377, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (474, 472, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (476, 475, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (479, 478, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (484, 478, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (480, 479, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (481, 479, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (483, 479, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (482, 481, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (90, 482, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (485, 484, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (486, 485, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (487, 485, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (488, 487, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (493, 487, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (489, 488, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (490, 488, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (491, 488, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (492, 488, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (494, 493, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (495, 493, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (497, 496, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (498, 496, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (499, 496, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (503, 496, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (500, 499, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (501, 499, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (502, 501, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (505, 504, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (506, 504, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (513, 504, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (518, 504, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (520, 504, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (507, 506, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (508, 506, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (509, 506, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (510, 506, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (511, 506, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (512, 506, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (514, 513, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (515, 513, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (517, 513, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (516, 515, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (414, 516, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (316, 518, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (519, 316, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (522, 521, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (526, 521, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (529, 521, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (523, 522, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (525, 522, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (524, 523, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (527, 526, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (528, 526, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (531, 530, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (532, 531, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (539, 531, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (533, 532, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (534, 532, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (535, 532, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (536, 532, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (537, 532, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (538, 532, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (541, 540, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (555, 540, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (290, 540, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (542, 541, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (547, 541, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (551, 541, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (543, 542, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (545, 542, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (546, 542, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (544, 543, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (548, 547, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (549, 547, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (550, 547, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (552, 551, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (554, 551, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (553, 552, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (556, 555, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (557, 555, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (269, 556, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (558, 557, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (559, 557, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (560, 559, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (563, 562, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (567, 562, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (568, 562, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (589, 562, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (564, 563, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (565, 563, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (566, 563, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (569, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (570, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (97, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (571, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (572, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (573, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (574, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (575, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (576, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (577, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (578, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (579, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (580, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (583, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (586, 568, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (581, 580, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (582, 580, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (584, 583, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (585, 583, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (587, 586, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (588, 586, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (590, 589, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (591, 589, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (592, 589, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (593, 589, 'KOFIA');
insert into "ETEST"."UK_REL" ("BASE_UK_ID", "PRE_UK_ID", "RELATION_REFERENCE" ) values (594, 589, 'KOFIA');

------- End of ETEST.UK_REL -------------- Begin of ETEST.VIDEO_CURRICULUM-------

insert into "ETEST"."VIDEO_CURRICULUM" ("CURRICULUM_ID", "SUBJECT" ) values (1, '위험관리 기초');
insert into "ETEST"."VIDEO_CURRICULUM" ("CURRICULUM_ID", "SUBJECT" ) values (2, '자산배분 기초');
insert into "ETEST"."VIDEO_CURRICULUM" ("CURRICULUM_ID", "SUBJECT" ) values (3, '위험관리/자산배분 응용');
insert into "ETEST"."VIDEO_CURRICULUM" ("CURRICULUM_ID", "SUBJECT" ) values (4, '행동편향 기초');
insert into "ETEST"."VIDEO_CURRICULUM" ("CURRICULUM_ID", "SUBJECT" ) values (5, '행동편향 응용');
insert into "ETEST"."VIDEO_CURRICULUM" ("CURRICULUM_ID", "SUBJECT" ) values (6, '투자기초(지식 기초)');
insert into "ETEST"."VIDEO_CURRICULUM" ("CURRICULUM_ID", "SUBJECT" ) values (7, '투자실전(종목고르기)');
insert into "ETEST"."VIDEO_CURRICULUM" ("CURRICULUM_ID", "SUBJECT" ) values (8, '투자실전(가격변동특징)');
insert into "ETEST"."VIDEO_CURRICULUM" ("CURRICULUM_ID", "SUBJECT" ) values (9, '투자실전(매매방법)');
insert into "ETEST"."VIDEO_CURRICULUM" ("CURRICULUM_ID", "SUBJECT" ) values (10, '기타');

------- End of ETEST.VIDEO_CURRICULUM -------

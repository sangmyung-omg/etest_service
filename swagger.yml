openapi: '3.0.2'
info:
  title: eTest Problem & Analysis Report API
  version: '0.1'
  description: 문제 풀이 및 진단 리포트 페이지 관련 API
servers:
  - url: http://192.168.153.212:8888/
    description: example server address
tags:
- name: Problem
  description: 문제 풀이 페이지 관련
- name: Test
  description: 출제 문제 선정
- name: Analysis Report
  description: 진단 리포트 관련

paths:
  /problems/{id}:
    get:
      tags:
      - Problem
      summary: 문제 정보 받아오기
      description: 미니테스트 문제 정보를 받아옵니다.
      parameters:
      - name: id
        in: path
        description: 문제아이디
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  message: success
                  data:
                    type: 'MULTIPLE_CHOICE_WO_PASSAGE/ MULTIPLE_CHOICE_W_PASSAGE/ SHORT_ANSWER_WO_PASSAGE/
                      SHORT_ANSWER_W_PASSAGE '
                    question: 질문에 들어갈 텍스트
                    passage: 보기에 들어갈 텍스트
                    preface: (가)/ (ㄱ)/ ()/ (.)
                    choices:
                      1: 객관식1번
                      2: 객관식2번
                    difficulty: 상/중/하
        400:
          description: Data not found
          content:
            json:
              schema:
                type: object
                example:
                  message: 'Failed: {id}에 해당하는 데이터가 없습니다'
                  data: {}
  /problems/test:
    get:
      tags:
      - Problem
      summary: 미니테스트 문제 리스트받아오기
      description: 미니테스트 문제 아이디의 리스트를 받아옵니다.
      parameters:
      - name: setNum
        in: query
        description: 세트 번호
        required: true
        schema:
          type: integer
          format: integer
      - name: index
        in: query
        description: 몇번째 문제부터 풀게될지
        schema:
          type: integer
          format: integer
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  message: success
                  data: [1, 2, 3]
        400:
          description: Data not found
          content:
            json:
              schema:
                type: object
                example:
                  message: 'Failed: {setNum}에 해당하는 데이터가 없습니다'
                  data: null
  /problems/diagnosis:
    get:
      tags:
      - Problem
      summary: 진단고사 문제 리스트받아오기
      description: 진단고사의 문제 아이디의 리스트를 받아옵니다.
      parameters:
      - name: setNum
        in: query
        description: 세트 번호
        schema:
          type: integer
          format: integer
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  message: success
                  data: [1, 2, 3]
  /problems/{id}/answer-check:
    get:
      tags:
      - Problem
      summary: 정답 체크하기
      description: 유저가 제출한 정답에 대한 채점결과를 true/false로 반환합니다.
      parameters:
      - name: id
        in: path
        description: 문제아이디
        required: true
        schema:
          type: string
          format: string
      - name: answer
        in: query
        description: 유저가 입력한 정답
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: boolean
  /problems/{id}/solution:
    get:
      tags:
      - Problem
      summary: 해설 받아오기
      description: 유저가 제출한 정답에 대한 채점결과를 true/false로 반환합니다. *내부적으로 유저가 풀었는지 안풀었는지 확인하고
        받아와야 할듯?
      parameters:
      - name: id
        in: path
        description: 문제아이디
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  answer:
                  - 정답1
                  - 정답2
                  - ..
                  solution: 해설 텍스트
                  material: 참고자료(교재 정보)
  /diagnosis/tendency:
    get:
      tags: [Test]
      operationId: DiagnosisTendencyProblemsGet
      summary: 자가진단 성향문제 set (6 문항 예상) 요청
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/tendencyProblemList"
        
        '500':
          description: 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultMessage:
                    type: string
                    example: "Error: status code 500"

  /sets/staus:
    get:
      tags:
      - Problem
      summary: (AE1-1 요청) 세트 정보 받아오기
      description: 유저 아이디에 대해 유저가 모든 세트에 대해서 각각 몇 번까지 풀었는지를 반환합니다.
      parameters:
      - name: id
        in: query
        description: 유저 아이디
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            json:
              schema:
                type: object
                example:
                  0: 20
                  1: 17
                  2: 0
                  20: 0
  /problems/{problem_id}/save_result:
    post:
      tags:
      - Problem
      summary: (AE1-1 요청) 1팀 DB에 유저 문제풀이 결과 저장하기
      description: 유저 아이디에 대해 유저가 모든 세트에 대해서 각각 몇 번까지 풀었는지를 반환합니다.
      parameters:
      - name: problem_id
        in: path
        description: 문제아이디
        required: true
        schema:
          type: string
          format: string
      - name: id
        in: query
        description: 유저 아이디
        required: true
        schema:
          type: string
          format: string
      - name: is_correct
        in: query
        description: 정답여부 (True/False)
        required: true
        schema:
          type: boolean
          format: boolean
      responses:
        200:
          description: Successfully saved
          content: {}

  /diagnosis/knowledge:
    get:
      tags: [Test]
      operationId: DiagnosisKnowledgeProblemsGet
      summary: 자가진단 지식문제 set (9 문항 예상) 요청
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/knowledgeProblemList"
        '500':
          description: 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultMessage:
                    type: string
                    example: "Error: status code 500"

  /minitest:
    get:
      tags: [Test]
      operationId: MinitestProblemsGet
      summary: 미니테스트 set (20문항) 요청
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/minitestmProblemList"
        '500':
          description: 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultMessage:
                    type: string
                    example: "Error: status code 500"


components:
  schemas:
    tendencyProblemList:
      properties:
        resultMessage:
          type: string
          example: "Successfully returned"
        tendencyProblems:
          type: array
          example:
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
    knowledgeProblemList:
      properties:
        resultMessage:
          type: string
          example: "Successfully returned"
        knowledgeProblems:
          type: array
          example:
            - [1,2,3]
            - [4,5,6]
            - [7,8,9]
            - [10,11,12]
            - [13,14,15]
            - [16,17,18]
            - [19,20,21]
            - [22,23,24]
            - [25,26,27]

    minitestmProblemList:
      properties:
        resultMessage:
          type: string
          example: "Successfully returned"
        minitestProblems:
          type: array
          example:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20